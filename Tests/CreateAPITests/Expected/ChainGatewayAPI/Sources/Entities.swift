// Generated by Create API
// https://github.com/kean/CreateAPI
//
// swiftlint:disable all

import Foundation

/// Example:
///
/// {
///   "contractaddress" : "0x5b86a33f0c232fe909eb4602a9d039072869d915"
/// }
public struct GetTokenRequest: Codable {
    public var contractaddress: String

    public init(contractaddress: String) {
        self.contractaddress = contractaddress
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x5b86a33f0c232fe909eb4602a9d039072869d915",
///   "decimals" : 2,
///   "name" : "Bitfranken",
///   "ok" : true,
///   "supply" : 76507131570,
///   "symbol" : "BIFRA"
/// }
public struct GetToken: Codable {
    public var isOk: Bool
    public var contractaddress: String
    public var name: String
    public var symbol: String
    public var decimals: Int
    public var supply: Int

    public init(isOk: Bool, contractaddress: String, name: String, symbol: String, decimals: Int, supply: Int) {
        self.isOk = isOk
        self.contractaddress = contractaddress
        self.name = name
        self.symbol = symbol
        self.decimals = decimals
        self.supply = supply
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case contractaddress
        case name
        case symbol
        case decimals
        case supply
    }
}

/// Example:
///
/// {
///   "blocknumber" : 10892021,
///   "ok" : true
/// }
public struct GetLastBlockNumber: Codable {
    public var isOk: Bool
    public var blocknumber: Int

    public init(isOk: Bool, blocknumber: Int) {
        self.isOk = isOk
        self.blocknumber = blocknumber
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case blocknumber
    }
}

/// Example:
///
/// {
///   "gasprice" : 70,
///   "ok" : true
/// }
public struct GetGasPrice: Codable {
    public var isOk: Bool
    public var gasprice: Int

    public init(isOk: Bool, gasprice: Int) {
        self.isOk = isOk
        self.gasprice = gasprice
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case gasprice
    }
}

/// Example:
///
/// {
///   "currency" : "eur"
/// }
public struct GetExchangeRateRequest: Codable {
    public var currency: String

    public init(currency: String) {
        self.currency = currency
    }
}

/// Example:
///
/// {
///   "currency" : "eur",
///   "ok" : true,
///   "rate" : 321.19999999999999
/// }
public struct GetExchangeRate: Codable {
    public var isOk: Bool
    public var currency: String
    public var rate: Double

    public init(isOk: Bool, currency: String, rate: Double) {
        self.isOk = isOk
        self.currency = currency
        self.rate = rate
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case currency
        case rate
    }
}

/// Example:
///
/// {
///   "ethereumaddress" : "0xa1f36016221d48ce7f15cde7b826a4fbe09bacce"
/// }
public struct GetEthereumBalanceRequest: Codable {
    public var ethereumaddress: String

    public init(ethereumaddress: String) {
        self.ethereumaddress = ethereumaddress
    }
}

/// Example:
///
/// {
///   "balance" : 0.0099560198409876476,
///   "ethereumaddress" : "0xa1f36016221d48ce7f15cde7b826a4fbe09bacce",
///   "ok" : true
/// }
public struct GetEthereumBalance: Codable {
    public var isOk: Bool
    public var ethereumaddress: String
    public var balance: Double

    public init(isOk: Bool, ethereumaddress: String, balance: Double) {
        self.isOk = isOk
        self.ethereumaddress = ethereumaddress
        self.balance = balance
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethereumaddress
        case balance
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x5b86a33f0c232fe909eb4602a9d039072869d915",
///   "ethereumaddress" : "0xa1f36016221d48ce7f15cde7b826a4fbe09bacce"
/// }
public struct GetTokenBalanceRequest: Codable {
    public var contractaddress: String
    public var ethereumaddress: String

    public init(contractaddress: String, ethereumaddress: String) {
        self.contractaddress = contractaddress
        self.ethereumaddress = ethereumaddress
    }
}

/// Example:
///
/// {
///   "balance" : 9980,
///   "contractaddress" : "0x5b86a33f0c232fe909eb4602a9d039072869d915",
///   "ethereumaddress" : "0xa1f36016221d48ce7f15cde7b826a4fbe09bacce",
///   "ok" : true
/// }
public struct GetTokenBalance: Codable {
    public var isOk: Bool
    public var contractaddress: String
    public var ethereumaddress: String
    public var balance: Int

    public init(isOk: Bool, contractaddress: String, ethereumaddress: String, balance: Int) {
        self.isOk = isOk
        self.contractaddress = contractaddress
        self.ethereumaddress = ethereumaddress
        self.balance = balance
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case contractaddress
        case ethereumaddress
        case balance
    }
}

/// Example:
///
/// {
///   "txid" : "0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b"
/// }
public struct GetTransactionsRequest: Codable {
    public var txid: String

    public init(txid: String) {
        self.txid = txid
    }
}

/// Example:
///
/// {
///   "ok" : true,
///   "transactions" : [
///     {
///       "amount" : "10",
///       "block_number" : "6432816",
///       "contract_address" : "0x9E2B71e87d9304c4773674584EB9D0c838643568",
///       "from" : "0x8dF9654c7D81c850FDd35D93292B2fC60e666bF0",
///       "gas" : "90000",
///       "gas_price" : "9",
///       "to" : "0xbee9422f1b65687d0cb923bbd1fc5ccb9307e861",
///       "token_decimals" : "18",
///       "token_name" : "Shopiblock",
///       "token_supply" : "1000000000",
///       "token_symbol" : "SHB",
///       "txid" : "0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b",
///       "type" : "ERC20"
///     }
///   ]
/// }
public struct GetTransactions: Codable {
    public var isOk: Bool
    public var transactions: [Transaction]

    public init(isOk: Bool, transactions: [Transaction]) {
        self.isOk = isOk
        self.transactions = transactions
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case transactions
    }
}

/// Example:
///
/// {
///   "amount" : "10",
///   "block_number" : "6432816",
///   "contract_address" : "0x9E2B71e87d9304c4773674584EB9D0c838643568",
///   "from" : "0x8dF9654c7D81c850FDd35D93292B2fC60e666bF0",
///   "gas" : "90000",
///   "gas_price" : "9",
///   "to" : "0xbee9422f1b65687d0cb923bbd1fc5ccb9307e861",
///   "token_decimals" : "18",
///   "token_name" : "Shopiblock",
///   "token_supply" : "1000000000",
///   "token_symbol" : "SHB",
///   "txid" : "0x8ab5543bc103bdd908681da501d03c2c495afd7fde5ed104935ba97b1550d65b",
///   "type" : "ERC20"
/// }
public struct Transaction: Codable {
    public var txid: String
    public var blockNumber: String
    public var contractAddress: String
    public var type: String
    public var tokenName: String
    public var tokenSymbol: String
    public var tokenDecimals: String
    public var tokenSupply: String
    public var gas: String
    public var gasPrice: String
    public var from: String
    public var to: String
    public var amount: String

    public init(txid: String, blockNumber: String, contractAddress: String, type: String, tokenName: String, tokenSymbol: String, tokenDecimals: String, tokenSupply: String, gas: String, gasPrice: String, from: String, to: String, amount: String) {
        self.txid = txid
        self.blockNumber = blockNumber
        self.contractAddress = contractAddress
        self.type = type
        self.tokenName = tokenName
        self.tokenSymbol = tokenSymbol
        self.tokenDecimals = tokenDecimals
        self.tokenSupply = tokenSupply
        self.gas = gas
        self.gasPrice = gasPrice
        self.from = from
        self.to = to
        self.amount = amount
    }

    private enum CodingKeys: String, CodingKey {
        case txid
        case blockNumber = "block_number"
        case contractAddress = "contract_address"
        case type
        case tokenName = "token_name"
        case tokenSymbol = "token_symbol"
        case tokenDecimals = "token_decimals"
        case tokenSupply = "token_supply"
        case gas
        case gasPrice = "gas_price"
        case from
        case to
        case amount
    }
}

/// Example:
///
/// {
///   "block" : "5000000"
/// }
public struct GetBlockRequest: Codable {
    public var block: String

    public init(block: String) {
        self.block = block
    }
}

/// Example:
///
/// {
///   "block_number" : "5000000",
///   "difficulty" : "2546613975853490",
///   "gas_limit" : "8000029",
///   "gas_used" : "7994053",
///   "hash" : "0x7d5a4369273c723454ac137f48a4f142b097aa2779464e6505f1b1c5e37b5382",
///   "miner" : "0xb2930B35844a230f00E51431aCAe96Fe543a0347",
///   "ok" : true,
///   "parent_hash" : "0xcae4df80f5862e4321690857eded0d8a40136dafb8155453920bade5bd0c46c0",
///   "size_in_bytes" : "24017",
///   "time_stamp" : "2018-01-30 14:41:33",
///   "transactions_count" : "109"
/// }
public struct GetBlock: Codable {
    public var isOk: Bool
    public var hash: String
    public var blockNumber: String
    public var parentHash: String
    public var miner: String
    public var difficulty: String
    public var sizeInBytes: String
    public var gasLimit: String
    public var gasUsed: String
    public var timeStamp: String
    public var transactionsCount: String

    public init(isOk: Bool, hash: String, blockNumber: String, parentHash: String, miner: String, difficulty: String, sizeInBytes: String, gasLimit: String, gasUsed: String, timeStamp: String, transactionsCount: String) {
        self.isOk = isOk
        self.hash = hash
        self.blockNumber = blockNumber
        self.parentHash = parentHash
        self.miner = miner
        self.difficulty = difficulty
        self.sizeInBytes = sizeInBytes
        self.gasLimit = gasLimit
        self.gasUsed = gasUsed
        self.timeStamp = timeStamp
        self.transactionsCount = transactionsCount
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case hash
        case blockNumber = "block_number"
        case parentHash = "parent_hash"
        case miner
        case difficulty
        case sizeInBytes = "size_in_bytes"
        case gasLimit = "gas_limit"
        case gasUsed = "gas_used"
        case timeStamp = "time_stamp"
        case transactionsCount = "transactions_count"
    }
}

/// Example:
///
/// {
///   "password" : "padN39QkRA2hJ"
/// }
public struct NewAddressRequest: Codable {
    public var password: String

    public init(password: String) {
        self.password = password
    }
}

/// Example:
///
/// {
///   "ethereumaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "ok" : true,
///   "password" : "padN39QkRA2hJ"
/// }
public struct NewAddress: Codable {
    public var isOk: Bool
    public var ethereumaddress: String
    public var password: String

    public init(isOk: Bool, ethereumaddress: String, password: String) {
        self.isOk = isOk
        self.ethereumaddress = ethereumaddress
        self.password = password
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethereumaddress
        case password
    }
}

/// Example:
///
/// {
///   "ethereumaddress" : "0x71892689ed0d79d88ab6ea3783b571b8ece9bee3",
///   "password" : "padN39QkRA2hJ"
/// }
public struct DeleteAddressRequest: Codable {
    public var ethereumaddress: String
    public var password: String

    public init(ethereumaddress: String, password: String) {
        self.ethereumaddress = ethereumaddress
        self.password = password
    }
}

/// Example:
///
/// {
///   "deleted" : true,
///   "ethereumaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "ok" : true
/// }
public struct DeleteAddress: Codable {
    public var isOk: Bool
    public var ethereumaddress: String
    public var isDeleted: Bool

    public init(isOk: Bool, ethereumaddress: String, isDeleted: Bool) {
        self.isOk = isOk
        self.ethereumaddress = ethereumaddress
        self.isDeleted = isDeleted
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethereumaddress
        case isDeleted = "deleted"
    }
}

/// Example:
///
/// {
///   "addresses" : [
///     {
///       "ethereumaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4"
///     }
///   ],
///   "ok" : true
/// }
public struct ListAddresses: Codable {
    public var isOk: Bool
    public var addresses: [Address]

    public init(isOk: Bool, addresses: [Address]) {
        self.isOk = isOk
        self.addresses = addresses
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case addresses
    }
}

/// Example:
///
/// {
///   "ethereumaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4"
/// }
public struct Address: Codable {
    public var ethereumaddress: String

    public init(ethereumaddress: String) {
        self.ethereumaddress = ethereumaddress
    }
}

/// Example:
///
/// {
///   "content" : {
///     "address" : "71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///     "crypto" : {
///       "cipher" : "aes-128-ctr",
///       "cipherparams" : {
///         "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
///       },
///       "ciphertext" : "9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f",
///       "kdf" : "scrypt",
///       "kdfparams" : {
///         "dklen" : 32,
///         "n" : 131072,
///         "p" : 1,
///         "r" : 8,
///         "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
///       },
///       "mac" : "dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9"
///     },
///     "id" : "85b790ff-408e-42b8-b123-bec9523964dc",
///     "version" : 3
///   },
///   "filename" : "UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "password" : "padN39QkRA2hJ"
/// }
public struct ImportAddressRequest: Codable {
    public var filename: String
    /// Example:
    ///
    /// {
    ///   "address" : "71892889ed4d79d88ab6ea3783b571b8ece9bef4",
    ///   "crypto" : {
    ///     "cipher" : "aes-128-ctr",
    ///     "cipherparams" : {
    ///       "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
    ///     },
    ///     "ciphertext" : "9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f",
    ///     "kdf" : "scrypt",
    ///     "kdfparams" : {
    ///       "dklen" : 32,
    ///       "n" : 131072,
    ///       "p" : 1,
    ///       "r" : 8,
    ///       "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
    ///     },
    ///     "mac" : "dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9"
    ///   },
    ///   "id" : "85b790ff-408e-42b8-b123-bec9523964dc",
    ///   "version" : 3
    /// }
    public var content: Content
    public var password: String

    public init(filename: String, content: Content, password: String) {
        self.filename = filename
        self.content = content
        self.password = password
    }
}

/// Example:
///
/// {
///   "address" : "71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "crypto" : {
///     "cipher" : "aes-128-ctr",
///     "cipherparams" : {
///       "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
///     },
///     "ciphertext" : "9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f",
///     "kdf" : "scrypt",
///     "kdfparams" : {
///       "dklen" : 32,
///       "n" : 131072,
///       "p" : 1,
///       "r" : 8,
///       "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
///     },
///     "mac" : "dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9"
///   },
///   "id" : "85b790ff-408e-42b8-b123-bec9523964dc",
///   "version" : 3
/// }
public struct Content: Codable {
    public var version: Int
    public var id: String
    public var address: String
    /// Example:
    ///
    /// {
    ///   "cipher" : "aes-128-ctr",
    ///   "cipherparams" : {
    ///     "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
    ///   },
    ///   "ciphertext" : "9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f",
    ///   "kdf" : "scrypt",
    ///   "kdfparams" : {
    ///     "dklen" : 32,
    ///     "n" : 131072,
    ///     "p" : 1,
    ///     "r" : 8,
    ///     "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
    ///   },
    ///   "mac" : "dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9"
    /// }
    public var crypto: Crypto

    public init(version: Int, id: String, address: String, crypto: Crypto) {
        self.version = version
        self.id = id
        self.address = address
        self.crypto = crypto
    }
}

/// Example:
///
/// {
///   "cipher" : "aes-128-ctr",
///   "cipherparams" : {
///     "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
///   },
///   "ciphertext" : "9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f",
///   "kdf" : "scrypt",
///   "kdfparams" : {
///     "dklen" : 32,
///     "n" : 131072,
///     "p" : 1,
///     "r" : 8,
///     "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
///   },
///   "mac" : "dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9"
/// }
public struct Crypto: Codable {
    public var ciphertext: String
    /// Example:
    ///
    /// {
    ///   "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
    /// }
    public var cipherparams: Cipherparams
    public var cipher: String
    public var kdf: String
    /// Example:
    ///
    /// {
    ///   "dklen" : 32,
    ///   "n" : 131072,
    ///   "p" : 1,
    ///   "r" : 8,
    ///   "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
    /// }
    public var kdfparams: Kdfparams
    public var mac: String

    public init(ciphertext: String, cipherparams: Cipherparams, cipher: String, kdf: String, kdfparams: Kdfparams, mac: String) {
        self.ciphertext = ciphertext
        self.cipherparams = cipherparams
        self.cipher = cipher
        self.kdf = kdf
        self.kdfparams = kdfparams
        self.mac = mac
    }
}

/// Example:
///
/// {
///   "iv" : "76e6f2497b9f2a8e024fc752a5418a6d"
/// }
public struct Cipherparams: Codable {
    public var iv: String

    public init(iv: String) {
        self.iv = iv
    }
}

/// Example:
///
/// {
///   "dklen" : 32,
///   "n" : 131072,
///   "p" : 1,
///   "r" : 8,
///   "salt" : "d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4"
/// }
public struct Kdfparams: Codable {
    public var dklen: Int
    public var salt: String
    public var n: Int
    public var r: Int
    public var p: Int

    public init(dklen: Int, salt: String, n: Int, r: Int, p: Int) {
        self.dklen = dklen
        self.salt = salt
        self.n = n
        self.r = r
        self.p = p
    }
}

/// Example:
///
/// {
///   "ethaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "filename" : "UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "ok" : true
/// }
public struct ImportAddress: Codable {
    public var isOk: Bool
    public var ethaddress: String
    public var filename: String

    public init(isOk: Bool, ethaddress: String, filename: String) {
        self.isOk = isOk
        self.ethaddress = ethaddress
        self.filename = filename
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethaddress
        case filename
    }
}

/// Example:
///
/// {
///   "ethaddress" : "0x71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "password" : "padN39QkRA2hJ"
/// }
public struct ExportAddressRequest: Codable {
    public var ethaddress: String
    public var password: String

    public init(ethaddress: String, password: String) {
        self.ethaddress = ethaddress
        self.password = password
    }
}

/// Example:
///
/// {
///   "content" : "{'version':3,'id':'85b790ff-408e-42b8-b123-bec9523964dc','address':'71892889ed4d79d88ab6ea3783b571b8ece9bef4','crypto':{'ciphertext':'9d74262517b984f9b0560b8f23b5e3340f7be0f56b70cd91ff445dcaf5b1968f','cipherparams':{'iv':'76e6f2497b9f2a8e024fc752a5418a6d'},'cipher':'aes-128-ctr','kdf':'scrypt','kdfparams':{'dklen':32,'salt':'d11d996a7cc4bfad730d4c9b9057eff2c0fb3940b5bfc59db62ae218c14a54f4','n':131072,'r':8,'p':1},'mac':'dcc342bbbbb8eea97c89b47bafc23de568fc1a48e0bd21ae8d776a95c4704ac9'}}",
///   "filename" : "UTC--2020-09-19T10-42-26.196Z--71892889ed4d79d88ab6ea3783b571b8ece9bef4",
///   "ok" : true
/// }
public struct ExportAddress: Codable {
    public var isOk: Bool
    public var filename: String
    public var content: String

    public init(isOk: Bool, filename: String, content: String) {
        self.isOk = isOk
        self.filename = filename
        self.content = content
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case filename
        case content
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct SubscribeAddressRequest: Codable {
    public var ethereumaddress: String
    public var contractaddress: String
    public var url: String

    public init(ethereumaddress: String, contractaddress: String, url: String) {
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.url = url
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "ok" : true,
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct SubscribeAddress: Codable {
    public var isOk: Bool
    public var ethereumaddress: String
    public var contractaddress: String
    public var url: String

    public init(isOk: Bool, ethereumaddress: String, contractaddress: String, url: String) {
        self.isOk = isOk
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.url = url
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethereumaddress
        case contractaddress
        case url
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct UnsubscribeAddressRequest: Codable {
    public var ethereumaddress: String
    public var contractaddress: String
    public var url: String

    public init(ethereumaddress: String, contractaddress: String, url: String) {
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.url = url
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "deleted" : true,
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "ok" : true,
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct UnsubscribeAddress: Codable {
    public var isOk: Bool
    public var ethereumaddress: String
    public var contractaddress: String
    public var url: String
    public var isDeleted: Bool

    public init(isOk: Bool, ethereumaddress: String, contractaddress: String, url: String, isDeleted: Bool) {
        self.isOk = isOk
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.url = url
        self.isDeleted = isDeleted
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ethereumaddress
        case contractaddress
        case url
        case isDeleted = "deleted"
    }
}

/// Example:
///
/// {
///   "ipns" : [
///     {
///       "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///       "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///       "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
///     }
///   ],
///   "ok" : true
/// }
public struct ListSubscribedAddresses: Codable {
    public var isOk: Bool
    public var ipns: [Ipn]

    public init(isOk: Bool, ipns: [Ipn]) {
        self.isOk = isOk
        self.ipns = ipns
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case ipns
    }
}

/// Example:
///
/// {
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct Ipn: Codable {
    public var ethereumaddress: String
    public var contractaddress: String
    public var url: String

    public init(ethereumaddress: String, contractaddress: String, url: String) {
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.url = url
    }
}

/// Example:
///
/// {
///   "failed_ipns" : [
///     {
///       "action" : "deposit",
///       "amount" : "496588.7771277759",
///       "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///       "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///       "id" : "17766",
///       "timestamp" : "2020-09-19 14:33:01",
///       "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
///     }
///   ],
///   "ok" : true
/// }
public struct ListFailedIPNs: Codable {
    public var isOk: Bool
    public var failedIpns: [FailedIpn]

    public init(isOk: Bool, failedIpns: [FailedIpn]) {
        self.isOk = isOk
        self.failedIpns = failedIpns
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case failedIpns = "failed_ipns"
    }
}

/// Example:
///
/// {
///   "action" : "deposit",
///   "amount" : "496588.7771277759",
///   "contractaddress" : "0x514910771af9ca656af840dff83e8264ecf986ca",
///   "ethereumaddress" : "0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974",
///   "id" : "17766",
///   "timestamp" : "2020-09-19 14:33:01",
///   "url" : "https:\/\/yoururl.com\/ipnreceiver.php"
/// }
public struct FailedIpn: Codable {
    public var id: String
    public var timestamp: String
    public var ethereumaddress: String
    public var contractaddress: String
    public var amount: String
    public var url: String
    public var action: String

    public init(id: String, timestamp: String, ethereumaddress: String, contractaddress: String, amount: String, url: String, action: String) {
        self.id = id
        self.timestamp = timestamp
        self.ethereumaddress = ethereumaddress
        self.contractaddress = contractaddress
        self.amount = amount
        self.url = url
        self.action = action
    }
}

/// Example:
///
/// {
///   "id" : 17766
/// }
public struct ResendFailedIPNRequest: Codable {
    public var id: Int

    public init(id: Int) {
        self.id = id
    }
}

/// Example:
///
/// {
///   "id" : 17766,
///   "ok" : true
/// }
public struct ResendFailedIPN: Codable {
    public var isOk: Bool
    public var id: Int

    public init(isOk: Bool, id: Int) {
        self.isOk = isOk
        self.id = id
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case id
    }
}

/// Example:
///
/// {
///   "amount" : 0.01,
///   "from" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "password" : "padN39QkRA2hJ",
///   "to" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48"
/// }
public struct SendEthereumRequest: Codable {
    public var from: String
    public var to: String
    public var password: String
    public var amount: Double

    public init(from: String, to: String, password: String, amount: Double) {
        self.from = from
        self.to = to
        self.password = password
        self.amount = amount
    }
}

/// Example:
///
/// {
///   "amount" : "0.010000000000000000",
///   "from" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "ok" : true,
///   "to" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48",
///   "txid" : "0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499"
/// }
public struct SendEthereum: Codable {
    public var isOk: Bool
    public var txid: String
    public var from: String
    public var to: String
    public var amount: String

    public init(isOk: Bool, txid: String, from: String, to: String, amount: String) {
        self.isOk = isOk
        self.txid = txid
        self.from = from
        self.to = to
        self.amount = amount
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case txid
        case from
        case to
        case amount
    }
}

/// Example:
///
/// {
///   "ethereumaddress" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "newaddress" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48",
///   "password" : "padN39QkRA2hJ"
/// }
public struct ClearAddressRequest: Codable {
    public var ethereumaddress: String
    public var newaddress: String
    public var password: String

    public init(ethereumaddress: String, newaddress: String, password: String) {
        self.ethereumaddress = ethereumaddress
        self.newaddress = newaddress
        self.password = password
    }
}

/// Example:
///
/// {
///   "amount" : 0.02300916225,
///   "ethereumaddress" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "gas" : 0.0025199999999999997,
///   "newaddress" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48",
///   "ok" : true,
///   "total" : "0.025529162250000000",
///   "txid" : "0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499"
/// }
public struct ClearAddress: Codable {
    public var isOk: Bool
    public var txid: String
    public var ethereumaddress: String
    public var newaddress: String
    public var amount: Double
    public var gas: Double
    public var total: String

    public init(isOk: Bool, txid: String, ethereumaddress: String, newaddress: String, amount: Double, gas: Double, total: String) {
        self.isOk = isOk
        self.txid = txid
        self.ethereumaddress = ethereumaddress
        self.newaddress = newaddress
        self.amount = amount
        self.gas = gas
        self.total = total
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case txid
        case ethereumaddress
        case newaddress
        case amount
        case gas
        case total
    }
}

/// Example:
///
/// {
///   "amount" : 5,
///   "contractaddress" : "0xdac17f958d2ee523a2206206994597c13d831ec7",
///   "from" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "identifier" : "CN562",
///   "password" : "padN39QkRA2hJ",
///   "to" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48"
/// }
public struct SendTokenRequest: Codable {
    public var contractaddress: String
    public var from: String
    public var to: String
    public var password: String
    public var amount: Int
    public var identifier: String

    public init(contractaddress: String, from: String, to: String, password: String, amount: Int, identifier: String) {
        self.contractaddress = contractaddress
        self.from = from
        self.to = to
        self.password = password
        self.amount = amount
        self.identifier = identifier
    }
}

/// Example:
///
/// {
///   "amount" : 5,
///   "contractaddress" : "0xdac17f958d2ee523a2206206994597c13d831ec7",
///   "from" : "0x3a32c4c31fe8d2a89976af5d284a94a040b44aa8",
///   "identifier" : "CN562",
///   "ok" : true,
///   "to" : "0xef4943d727e34280a2efa0b3352dfd61f508ee48",
///   "txid" : "0xcff06775098019d18f7bab6a350c18e86f89399db63cbce5269104e6c9a79499"
/// }
public struct SendToken: Codable {
    public var isOk: Bool
    public var identifier: String
    public var txid: String
    public var contractaddress: String
    public var from: String
    public var to: String
    public var amount: Int

    public init(isOk: Bool, identifier: String, txid: String, contractaddress: String, from: String, to: String, amount: Int) {
        self.isOk = isOk
        self.identifier = identifier
        self.txid = txid
        self.contractaddress = contractaddress
        self.from = from
        self.to = to
        self.amount = amount
    }

    private enum CodingKeys: String, CodingKey {
        case isOk = "ok"
        case identifier
        case txid
        case contractaddress
        case from
        case to
        case amount
    }
}

struct StringCodingKey: CodingKey, ExpressibleByStringLiteral {
    private let string: String
    private var int: Int?

    var stringValue: String { return string }

    init(string: String) {
        self.string = string
    }

    init?(stringValue: String) {
        self.string = stringValue
    }

    var intValue: Int? { return int }

    init?(intValue: Int) {
        self.string = String(describing: intValue)
        self.int = intValue
    }

    init(stringLiteral value: String) {
        self.string = value
    }
}
