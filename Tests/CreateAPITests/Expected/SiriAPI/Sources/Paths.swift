// Generated by Create API
// https://github.com/kean/CreateAPI
//
// swiftlint:disable all

import Foundation
import Get
import HTTPHeaders

extension Paths {
    public static var configuration: Configuration {
        Configuration(path: "/configuration")
    }

    public struct Configuration {
        /// Path: `/configuration`
        public let path: String

        /// Configuration Resource
        public var get: Request<Data> {
            .get(path)
        }

        public enum GetResponseHeaders {
            public static let cacheControl = HTTPHeader<String>(field: "Cache-Control")
            public static let eTag = HTTPHeader<String>(field: "ETag")
            public static let applecloudextensionSessionID = HTTPHeader<String>(field: "x-applecloudextension-session-id")
        }
    }
}

extension Paths {
    public static var intent: Intent {
        Intent(path: "/intent")
    }

    public struct Intent {
        /// Path: `/intent`
        public let path: String
    }
}

extension Paths.Intent {
    public var addMedia: AddMedia {
        AddMedia(path: path + "/addMedia")
    }

    public struct AddMedia {
        /// Path: `/intent/addMedia`
        public let path: String

        /// AddMedia
        public func post(_ body: [SiriAPI.Invocation]? = nil) -> Request<[SiriAPI.InvocationResponse]> {
            .post(path, body: body)
        }

        public enum PostResponseHeaders {
            public static let applecloudextensionSessionID = HTTPHeader<String>(field: "x-applecloudextension-session-id")
        }
    }
}

extension Paths.Intent {
    public var playMedia: PlayMedia {
        PlayMedia(path: path + "/playMedia")
    }

    public struct PlayMedia {
        /// Path: `/intent/playMedia`
        public let path: String

        /// PlayMedia
        public func post(_ body: [SiriAPI.Invocation]? = nil) -> Request<[SiriAPI.InvocationResponse]> {
            .post(path, body: body)
        }

        public enum PostResponseHeaders {
            public static let applecloudextensionSessionID = HTTPHeader<String>(field: "x-applecloudextension-session-id")
        }
    }
}

extension Paths.Intent {
    public var updateMediaAffinity: UpdateMediaAffinity {
        UpdateMediaAffinity(path: path + "/updateMediaAffinity")
    }

    public struct UpdateMediaAffinity {
        /// Path: `/intent/updateMediaAffinity`
        public let path: String

        /// UpdateMediaAffinity
        public func post(_ body: [SiriAPI.Invocation]? = nil) -> Request<[SiriAPI.InvocationResponse]> {
            .post(path, body: body)
        }

        public enum PostResponseHeaders {
            public static let applecloudextensionSessionID = HTTPHeader<String>(field: "x-applecloudextension-session-id")
        }
    }
}

extension Paths {
    public static var queues: Queues {
        Queues(path: "/queues")
    }

    public struct Queues {
        /// Path: `/queues`
        public let path: String
    }
}

extension Paths.Queues {
    public var playMedia: PlayMedia {
        PlayMedia(path: path + "/playMedia")
    }

    public struct PlayMedia {
        /// Path: `/queues/playMedia`
        public let path: String

        /// PlayMedia
        public func post(_ body: SiriAPI.PlayMediaRequest? = nil) -> Request<SiriAPI.Queue> {
            .post(path, body: body)
        }
    }
}

extension Paths.Queues {
    public var updateActivity: UpdateActivity {
        UpdateActivity(path: path + "/updateActivity")
    }

    public struct UpdateActivity {
        /// Path: `/queues/updateActivity`
        public let path: String

        /// UpdateActivity
        public func post(_ body: SiriAPI.UpdateActivityRequest? = nil) -> Request<SiriAPI.UpdateActivityResponse> {
            .post(path, body: body)
        }
    }
}

public enum Paths {}
