openapi: 3.0.1
info:
  title: ocrapi
  description: The powerful Optical Character Recognition (OCR) APIs let you convert
    scanned images of pages into recognized text.
  version: v1
servers:
- url: https://api.cloudmersive.com/
paths:
  /ocr/image/toText:
    post:
      tags:
      - ImageOcr
      summary: Convert a scanned image into text
      description: 'Converts an uploaded image in common formats such as JPEG, PNG
        into text via Optical Character Recognition.  This API is intended to be run
        on scanned documents.  If you want to OCR photos (e.g. taken with a smart
        phone camera), be sure to use the photo/toText API instead, as it is designed
        to unskew the image first.  Note: for free tier API keys, it is required to
        add a credit card to your account for security reasons, to use the free tier
        key with this API.'
      operationId: ImageOcr_Post
      parameters:
      - name: recognitionMode
        in: header
        description: Optional; possible values are 'Basic' which provides basic recognition
          and is not resillient to page rotation, skew or low quality images uses
          1-2 API calls; 'Normal' which provides highly fault tolerant OCR recognition
          uses 26-30 API calls; and 'Advanced' which provides the highest quality
          and most fault-tolerant recognition uses 28-30 API calls.  Default recognition
          mode is 'Advanced'
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
      security:
      - Apikey: []
  /ocr/image/to/words-with-location:
    post:
      tags:
      - ImageOcr
      summary: Convert a scanned image into words with location
      description: 'Converts an uploaded image in common formats such as JPEG, PNG
        into words/text with location information and other metdata via Optical Character
        Recognition.  This API is intended to be run on scanned documents.  If you
        want to OCR photos (e.g. taken with a smart phone camera), be sure to use
        the photo/toText API instead, as it is designed to unskew the image first.  Note:
        for free tier API keys, it is required to add a credit card to your account
        for security reasons, to use the free tier key with this API.'
      operationId: ImageOcr_ImageWordsWithLocation
      parameters:
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageToWordsWithLocationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageToWordsWithLocationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageToWordsWithLocationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageToWordsWithLocationResult'
      security:
      - Apikey: []
  /ocr/image/to/lines-with-location:
    post:
      tags:
      - ImageOcr
      summary: Convert a scanned image into words with location
      description: 'Converts an uploaded image in common formats such as JPEG, PNG
        into lines/text with location information and other metdata via Optical Character
        Recognition.  This API is intended to be run on scanned documents.  If you
        want to OCR photos (e.g. taken with a smart phone camera), be sure to use
        the photo/toText API instead, as it is designed to unskew the image first.  Note:
        for free tier API keys, it is required to add a credit card to your account
        for security reasons, to use the free tier key with this API.'
      operationId: ImageOcr_ImageLinesWithLocation
      parameters:
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageToLinesWithLocationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageToLinesWithLocationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageToLinesWithLocationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageToLinesWithLocationResult'
      security:
      - Apikey: []
  /ocr/photo/toText:
    post:
      tags:
      - ImageOcr
      summary: Convert a photo of a document into text
      description: 'Converts an uploaded photo of a document in common formats such
        as JPEG, PNG into text via Optical Character Recognition.  This API is intended
        to be run on photos of documents, e.g. taken with a smartphone and supports
        cases where other content, such as a desk, are in the frame and the camera
        is crooked.  If you want to OCR a scanned image, use the image/toText API
        call instead as it is designed for scanned images.  Note: for free tier API
        keys, it is required to add a credit card to your account for security reasons,
        to use the free tier key with this API.'
      operationId: ImageOcr_PhotoToText
      parameters:
      - name: recognitionMode
        in: header
        description: Optional; possible values are 'Basic' which provides basic recognition
          and is not resillient to page rotation, skew or low quality images uses
          1-2 API calls; 'Normal' which provides highly fault tolerant OCR recognition
          uses 26-30 API calls; and 'Advanced' which provides the highest quality
          and most fault-tolerant recognition uses 28-30 API calls.  Default recognition
          mode is 'Advanced'
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageToTextResponse'
      security:
      - Apikey: []
  /ocr/photo/to/words-with-location:
    post:
      tags:
      - ImageOcr
      summary: Convert a photo of a document or receipt into words with location
      description: 'Converts a photo of a document or receipt in common formats such
        as JPEG, PNG into words/text with location information and other metdata via
        Optical Character Recognition.  This API is intended to be run on photographs
        of documents.  If you want to OCR scanned documents (e.g. taken with a scanner),
        be sure to use the image/toText API instead, as it is designed for that use
        case.  Note: for free tier API keys, it is required to add a credit card to
        your account for security reasons, to use the free tier key with this API.'
      operationId: ImageOcr_PhotoWordsWithLocation
      parameters:
      - name: recognitionMode
        in: header
        description: Optional; possible values are 'Normal' which provides highly
          fault tolerant OCR recognition uses 26-30 API calls; and 'Advanced' which
          provides the highest quality and most fault-tolerant recognition uses 28-30
          API calls.  Default recognition mode is 'Advanced'
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      - name: diagnostics
        in: header
        description: Optional, diagnostics mode, default is 'false'.  Possible values
          are 'true' (will set DiagnosticImage to a diagnostic PNG image in the result),
          and 'false' (no diagnostics are enabled; this is recommended for best performance).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoToWordsWithLocationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PhotoToWordsWithLocationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PhotoToWordsWithLocationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PhotoToWordsWithLocationResult'
      security:
      - Apikey: []
  /ocr/photo/recognize/receipt:
    post:
      tags:
      - ImageOcr
      summary: Recognize a photo of a receipt, extract key business information
      description: 'Analyzes a photograph of a receipt as input, and outputs key business
        information such as the name of the business, the address of the business,
        the phone number of the business, the total of the receipt, the date of the
        receipt, and more.  Note: for free tier API keys, it is required to add a
        credit card to your account for security reasons, to use the free tier key
        with this API.'
      operationId: ImageOcr_PhotoRecognizeReceipt
      parameters:
      - name: recognitionMode
        in: header
        description: Optional, enable advanced recognition mode by specifying 'Advanced',
          enable handwriting recognition by specifying 'EnableHandwriting'.  Default
          is disabled.
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'None'.  Possible values
          are None (no preprocessing of the image), and 'Advanced' (automatic image
          enhancement of the image before OCR is applied; this is recommended and
          needed to handle rotated receipts).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptRecognitionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ReceiptRecognitionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReceiptRecognitionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ReceiptRecognitionResult'
      security:
      - Apikey: []
  /ocr/photo/recognize/business-card:
    post:
      tags:
      - ImageOcr
      summary: Recognize a photo of a business card, extract key business information
      description: 'Analyzes a photograph of a business card as input, and outputs
        key business information such as the name of the person, name of the business,
        the address of the business, the phone number, the email address and more.  Note:
        for free tier API keys, it is required to add a credit card to your account
        for security reasons, to use the free tier key with this API.'
      operationId: ImageOcr_PhotoRecognizeBusinessCard
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCardRecognitionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessCardRecognitionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessCardRecognitionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessCardRecognitionResult'
      security:
      - Apikey: []
  /ocr/photo/recognize/form:
    post:
      tags:
      - ImageOcr
      summary: Recognize a photo of a form, extract key fields and business information
      description: 'Analyzes a photograph of a form as input, and outputs key business
        fields and information.  Customzie data to be extracted by defining fields
        for the form.  Note: for free tier API keys, it is required to add a credit
        card to your account for security reasons, to use the free tier key with this
        API.'
      operationId: ImageOcr_PhotoRecognizeForm
      parameters:
      - name: formTemplateDefinition
        in: header
        description: Form field definitions
        schema: {}
      - name: recognitionMode
        in: header
        description: Optional, enable advanced recognition mode by specifying 'Advanced',
          enable handwriting recognition by specifying 'EnableHandwriting'.  Default
          is disabled.
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image - including automatic unrotation of the image - before OCR
          is applied; this is recommended).  Set this to 'None' if you do not want
          to use automatic image unrotation and enhancement.
        schema:
          type: string
      - name: diagnostics
        in: header
        description: Optional, diagnostics mode, default is 'false'.  Possible values
          are 'true' (will set DiagnosticImage to a diagnostic PNG image in the result),
          and 'false' (no diagnostics are enabled; this is recommended for best performance).
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
      security:
      - Apikey: []
  /ocr/photo/recognize/form/advanced:
    post:
      tags:
      - ImageOcr
      summary: Recognize a photo of a form, extract key fields using stored templates
      description: 'Analyzes a photograph of a form as input, and outputs key business
        fields and information.  Customzie data to be extracted by defining fields
        for the form.  Uses template definitions stored in Cloudmersive Configuration;
        to configure stored templates in a configuration bucket, log into Cloudmersive
        Management Portal and navigate to Settings &gt; API Configuration &gt; Create
        Bucket.  Note: for free tier API keys, it is required to add a credit card
        to your account for security reasons, to use the free tier key with this API.'
      operationId: ImageOcr_PhotoRecognizeFormAdvanced
      parameters:
      - name: bucketID
        in: header
        description: Bucket ID of the Configuration Bucket storing the form templates
        schema:
          type: string
      - name: bucketSecretKey
        in: header
        description: Bucket Secret Key of the Configuration Bucket storing the form
          templates
        schema:
          type: string
      - name: recognitionMode
        in: header
        description: Optional, enable advanced recognition mode by specifying 'Advanced',
          enable handwriting recognition by specifying 'EnableHandwriting'.  Default
          is disabled.
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image - including automatic unrotation of the image - before OCR
          is applied; this is recommended).  Set this to 'None' if you do not want
          to use automatic image unrotation and enhancement.
        schema:
          type: string
      - name: diagnostics
        in: header
        description: Optional, diagnostics mode, default is 'false'.  Possible values
          are 'true' (will set DiagnosticImage to a diagnostic PNG image in the result),
          and 'false' (no diagnostics are enabled; this is recommended for best performance).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/FormRecognitionResult'
      security:
      - Apikey: []
  /ocr/pdf/toText:
    post:
      tags:
      - PdfOcr
      summary: Converts an uploaded PDF file into text via Optical Character Recognition.
      operationId: PdfOcr_Post
      parameters:
      - name: recognitionMode
        in: header
        description: Optional; possible values are 'Basic' which provides basic recognition
          and is not resillient to page rotation, skew or low quality images uses
          1-2 API calls per page; 'Normal' which provides highly fault tolerant OCR
          recognition uses 26-30 API calls per page; and 'Advanced' which provides
          the highest quality and most fault-tolerant recognition uses 28-30 API calls
          per page.  Default recognition mode is 'Basic'
        schema:
          type: string
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: PDF file to perform OCR on.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfToTextResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PdfToTextResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PdfToTextResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/PdfToTextResponse'
      security:
      - Apikey: []
  /ocr/pdf/to/words-with-location:
    post:
      tags:
      - PdfOcr
      summary: Convert a PDF into words with location
      description: Converts a PDF into words/text with location information and other
        metdata via Optical Character Recognition.  This API is intended to be run
        on scanned documents.  If you want to OCR photos (e.g. taken with a smart
        phone camera), be sure to use the photo/toText API instead, as it is designed
        to unskew the image first.
      operationId: PdfOcr_PdfToWordsWithLocation
      parameters:
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: PDF file to perform OCR on.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfToWordsWithLocationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PdfToWordsWithLocationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PdfToWordsWithLocationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PdfToWordsWithLocationResult'
      security:
      - Apikey: []
  /ocr/pdf/to/lines-with-location:
    post:
      tags:
      - PdfOcr
      summary: Convert a PDF into text lines with location
      description: Converts a PDF into lines/text with location information and other
        metdata via Optical Character Recognition.  This API is intended to be run
        on scanned documents.  If you want to OCR photos (e.g. taken with a smart
        phone camera), be sure to use the photo/toText API instead, as it is designed
        to unskew the image first.
      operationId: PdfOcr_PdfToLinesWithLocation
      parameters:
      - name: language
        in: header
        description: Optional, language of the input document, default is English
          (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO (Chinese -
          Simplified), ZHO-HANT (Chinese - Traditional), ASM (Assamese), AFR (Afrikaans),
          AMH (Amharic), AZE (Azerbaijani), AZE-CYRL (Azerbaijani - Cyrillic), BEL
          (Belarusian), BEN (Bengali), BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian),
          CAT (Catalan; Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM
          (Welsh), DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM (Archaic/Middle
          English), EPO (Esperanto), EST (Estonian), EUS (Basque), FAS (Persian),
          FIN (Finnish), FRA (French), FRK (Frankish), FRM (Middle-French), GLE (Irish),
          GLG (Galician), GRC (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi),
          HRV (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL
          (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese), JPN
          (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD (Old-Georgian), KAZ (Kazakh),
          KHM (Central Khmer), KIR (Kirghiz), KOR (Korean), KUR (Kurdish), LAO (Lao),
          LAT (Latin), LAV (Latvian), LIT (Lithuanian), MAL (Malayalam), MAR (Marathi),
          MKD (Macedonian), MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali),
          NLD (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),
          POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN (Sanskrit),
          SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA (Spanish), SPA-OLD (Old
          Spanish), SQI (Albanian), SRP (Serbian), SRP-LAT (Latin Serbian), SWA (Swahili),
          SWE (Swedish), SYR (Syriac), TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL
          (Tagalog), THA (Thai), TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR
          (Ukrainian), URD (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese),
          YID (Yiddish)
        schema:
          type: string
      - name: preprocessing
        in: header
        description: Optional, preprocessing mode, default is 'Auto'.  Possible values
          are None (no preprocessing of the image), and Auto (automatic image enhancement
          of the image before OCR is applied; this is recommended).
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: PDF file to perform OCR on.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfToLinesWithLocationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PdfToLinesWithLocationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PdfToLinesWithLocationResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PdfToLinesWithLocationResult'
      security:
      - Apikey: []
  /ocr/preprocessing/image/binarize:
    post:
      tags:
      - Preprocessing
      summary: Convert an image of text into a binarized (light and dark) view
      description: Perform an adaptive binarization algorithm on the input image to
        prepare it for further OCR operations.
      operationId: Preprocessing_Binarize
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
      security:
      - Apikey: []
  /ocr/preprocessing/image/binarize/advanced:
    post:
      tags:
      - Preprocessing
      summary: Convert an image of text into a binary (light and dark) view with ML
      description: Perform an advanced adaptive, Deep Learning-based binarization
        algorithm on the input image to prepare it for further OCR operations.  Provides
        enhanced accuracy than adaptive binarization.  Image will be upsampled to
        300 DPI if it has a DPI below 300.
      operationId: Preprocessing_BinarizeAdvanced
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
      security:
      - Apikey: []
  /ocr/preprocessing/image/get-page-angle:
    post:
      tags:
      - Preprocessing
      summary: Get the angle of the page / document / receipt
      description: Analyzes a photo or image of a document and identifies the rotation
        angle of the page.
      operationId: Preprocessing_GetPageAngle
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPageAngleResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetPageAngleResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetPageAngleResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPageAngleResult'
      security:
      - Apikey: []
  /ocr/preprocessing/image/unrotate:
    post:
      tags:
      - Preprocessing
      summary: Detect and unrotate a document image
      description: Detect and unrotate an image of a document (e.g. that was scanned
        at an angle).  Great for document scanning applications; once unskewed, this
        image is perfect for converting to PDF using the Convert API or optical character
        recognition using the OCR API.
      operationId: Preprocessing_Unrotate
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
      security:
      - Apikey: []
  /ocr/preprocessing/image/unrotate/advanced:
    post:
      tags:
      - Preprocessing
      summary: Detect and unrotate a document image (advanced)
      description: Detect and unrotate an image of a document (e.g. that was scanned
        at an angle) using deep learning.  Great for document scanning applications;
        once unskewed, this image is perfect for converting to PDF using the Convert
        API or optical character recognition using the OCR API.
      operationId: Preprocessing_UnrotateAdvanced
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
      security:
      - Apikey: []
  /ocr/preprocessing/image/unskew:
    post:
      tags:
      - Preprocessing
      summary: Detect and unskew a photo of a document
      description: Detect and unskew a photo of a document (e.g. taken on a cell phone)
        into a perfectly square image.  Great for document scanning applications;
        once unskewed, this image is perfect for converting to PDF using the Convert
        API or optical character recognition using the OCR API.
      operationId: Preprocessing_Unskew
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
            text/json:
              schema:
                type: string
                format: byte
            application/xml:
              schema:
                type: string
                format: byte
            text/xml:
              schema:
                type: string
                format: byte
      security:
      - Apikey: []
  /ocr/receipts/photo/to/csv:
    post:
      tags:
      - Receipts
      summary: Convert a photo of a receipt into a CSV file containing structured
        information from the receipt
      description: Leverage Deep Learning to automatically turn a photo of a receipt
        into a CSV file containing the structured information from the receipt.
      operationId: Receipts_PhotoToCSV
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - imageFile
              properties:
                imageFile:
                  type: string
                  description: Image file to perform OCR on.  Common file formats
                    such as PNG, JPEG are supported.
                  format: binary
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
      deprecated: true
      security:
      - Apikey: []
components:
  schemas:
    ImageToTextResponse:
      type: object
      properties:
        MeanConfidenceLevel:
          type: number
          description: Confidence level rating of the OCR operation; ratings above
            80% are strong.
          format: float
        TextResult:
          type: string
          description: Converted text string from the image input.
      description: Response from an OCR to text operation.  Includes the confience
        rating and converted text result.
    ImageToWordsWithLocationResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        Words:
          type: array
          description: Word elements in the image
          items:
            $ref: '#/components/schemas/OcrWordElement'
      description: Result of an image to words-with-location OCR operation
    OcrWordElement:
      type: object
      properties:
        WordText:
          type: string
          description: Text of the word
        LineNumber:
          type: integer
          description: Line number of the word
          format: int32
        WordNumber:
          type: integer
          description: Index of the word in the line
          format: int32
        XLeft:
          type: integer
          description: X location of the left edge of the word in pixels
          format: int32
        YTop:
          type: integer
          description: Y location of the top edge of the word in pixels
          format: int32
        Width:
          type: integer
          description: Width of the word in pixels
          format: int32
        Height:
          type: integer
          description: Height of the word in pixels
          format: int32
        ConfidenceLevel:
          type: number
          description: Confidence level of the machine learning result; possible values
            are 0.0 (lowest accuracy) - 1.0 (highest accuracy)
          format: double
        BlockNumber:
          type: integer
          description: Index of the containing block
          format: int32
        ParagraphNumber:
          type: integer
          description: Index of the containing paragraph
          format: int32
        PageNumber:
          type: integer
          description: Index of the containing page
          format: int32
      description: A single word in an OCR document
    ImageToLinesWithLocationResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        Lines:
          type: array
          description: Words in the image
          items:
            $ref: '#/components/schemas/OcrLineElement'
      description: Result of an image to lines-with-location OCR operation
    OcrLineElement:
      type: object
      properties:
        LineText:
          type: string
          description: Text of the line
        Words:
          type: array
          description: Word objects in the line
          items:
            $ref: '#/components/schemas/OcrWordElement'
      description: A contiguous line of text in an OCR document
    PhotoToWordsWithLocationResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        TextElements:
          type: array
          description: Word elements in the image
          items:
            $ref: '#/components/schemas/OcrPhotoTextElement'
        DiagnosticImage:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Typically null.  To analyze OCR performance, enable diagnostic
            mode by adding the HTTP header "DiagnosticMode" with the value "true".  When
            this is true, a diagnostic image showing the details of the OCR result
            will be set in PNG format into DiagnosticImage.
          format: byte
      description: Result of an photo to words-with-location OCR operation
    OcrPhotoTextElement:
      type: object
      properties:
        Text:
          type: string
          description: Text of the word
        XLeft:
          type: integer
          description: X location of the left edge of the word in pixels
          format: int32
        YTop:
          type: integer
          description: Y location of the top edge of the word in pixels
          format: int32
        Width:
          type: integer
          description: Width of the word in pixels
          format: int32
        Height:
          type: integer
          description: Height of the word in pixels
          format: int32
        BoundingPoints:
          type: array
          description: Points that form the bounding polygon around the text
          items:
            $ref: '#/components/schemas/Point'
        ConfidenceLevel:
          type: number
          description: Confidence level of the machine learning result; possible values
            are 0.0 (lowest accuracy) - 1.0 (highest accuracy)
          format: double
      description: A single text in an OCR document
    Point:
      type: object
      properties:
        X:
          type: integer
          description: X location in 2D in the image, where 0 represents the left
            edge of the image
          format: int32
        Y:
          type: integer
          description: Y location in 2D in the image, where 0 represents the top edge
            of the image
          format: int32
      description: Point location in 2D in an image, where 0, 0 represents the top/left
        corner of the image
    ReceiptRecognitionResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if the operation was successful, false otherwise
        Timestamp:
          type: string
          description: The date and time printed on the receipt (if included on the
            receipt)
          format: date-time
        BusinessName:
          type: string
          description: The name of the business printed on the receipt (if included
            on the receipt)
        BusinessWebsite:
          type: string
          description: The website URL of the business printed on the receipt (if
            included on the receipt)
        AddressString:
          type: string
          description: The address of the business printed on the receipt (if included
            on the receipt)
        PhoneNumber:
          type: string
          description: The phone number printed on the receipt (if included on the
            receipt)
        ReceiptItems:
          type: array
          description: The individual line items comprising the order; does not include
            total (see ReceiptTotal)
          items:
            $ref: '#/components/schemas/ReceiptLineItem'
        ReceiptSubTotal:
          type: number
          description: Optional; if available, the monetary value of the receipt subtotal
            - typically not including specialized line items such as Tax. If this
            value is not available, it will be 0.
          format: double
        ReceiptTotal:
          type: number
          description: The total monetary value of the receipt (if included on the
            receipt)
          format: double
      description: Result of recognizing a receipt, to extract the key information
        from the receipt
    ReceiptLineItem:
      type: object
      properties:
        ItemDescription:
          type: string
          description: Description of the item
        ItemPrice:
          type: number
          description: Price of the item if available
          format: double
      description: Receipt line item, comprised of a product or item and a price (if
        available)
    BusinessCardRecognitionResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if the operation was successful, false otherwise
        PersonName:
          type: string
          description: The name of the person printed on the business card (if included
            on the business card)
        PersonTitle:
          type: string
          description: The title of the person printed on the business card (if included
            on the business card)
        BusinessName:
          type: string
          description: The name of the business printed on the business card (if included
            on the business card)
        AddressString:
          type: string
          description: The address printed on the business card (if included on the
            business card)
        PhoneNumber:
          type: string
          description: The phone number printed on the business card (if included
            on the business card)
        EmailAddress:
          type: string
          description: The email address printed on the business card (if included
            on the business card)
        Timestamp:
          type: string
          description: The date and time printed on the business card (if included
            on the business card)
          format: date-time
      description: Result of recognizing a business card, to extract the key information
        from the business card
    FormRecognitionResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if the operation was successful, false otherwise
        FieldValueExtractionResult:
          type: array
          description: Result of form field OCR data extraction
          items:
            $ref: '#/components/schemas/FieldResult'
        TableValueExtractionResults:
          type: array
          description: Result of form table OCR data extraction
          items:
            $ref: '#/components/schemas/TableResult'
        Diagnostics:
          type: array
          description: Diagnostic images - default is null, enable diagnostics=true
            to populate this parameter with one image per field
          items:
            type: string
        BestMatchFormSettingName:
          type: string
          description: Optional; populated when using photo/recognize/form/advanced
            with the Setting Name of the best-matching highest-relevance form
      description: The result of extracting form field values
    FieldResult:
      type: object
      properties:
        TargetField:
          $ref: '#/components/schemas/FormFieldDefinition'
        FieldValues:
          type: array
          description: Result field value(s) extracted
          items:
            $ref: '#/components/schemas/OcrPhotoTextElement'
      description: A pairing target field and actual value read from form
    TableResult:
      type: object
      properties:
        TableDefinition:
          $ref: '#/components/schemas/FormTableDefinition'
        TableRowsResult:
          type: array
          description: Rows of data in the table
          items:
            $ref: '#/components/schemas/TableRowResult'
      description: The result of reading a table via OCR from a form
    FormFieldDefinition:
      type: object
      properties:
        FieldID:
          type: string
          description: The identifier of the field; use this to identify which field
            is being referenced.  Set to SkipField if you do not wish to return the
            value of this field in the result.
        LeftAnchor:
          type: string
          description: Optional - the left-hand anchor of the field
        TopAnchor:
          type: string
          description: Optional - the top anchor of the field
        BottomAnchor:
          type: string
          description: Optional - the bottom anchor of the field
        AlternateAnchor:
          type: string
          description: Optional - alterate match text for the specified anchor
        AnchorMode:
          type: string
          description: Optional - the matching mode for the anchor.  Possible values
            are Complete (requires the entire anchor to match) and Partial (allows
            only part of the anchor to match) and Horizontal (anchor must be laid
            out horizontally).  Default is Partial.
        DataType:
          type: string
          description: The data type of the field; possible values are INTEGER (Integer
            value), STRING (Arbitrary string value, spaces are permitted), DATE (Date
            in a structured format), DECIMAL (Decimal number), ALPHANUMERIC (Continuous
            alphanumeric string with no spaces), STRINGNOWHITESPACE (A string that
            contains no whitespace characters), SERIALNUMBER (A serial-number style
            string that contains letters and numbers, and certain symbols; must contain
            at least one number), ALPHAONLY (Alphabet characters only, no numbers
            or symbols or whitespace)
        TargetDigitCount:
          type: integer
          description: Optional - the target number of digits in the field; useful
            for fixed-length fields
          format: int32
        MinimumCharacterCount:
          type: integer
          description: Optional - the target number of digits in the field; useful
            for fixed-length fields
          format: int32
        AllowNumericDigits:
          type: boolean
          description: Optional - set to false to block values that contain numeric
            digits, set to true to allow numeric digits
        VerticalAlignmentType:
          type: string
          description: Vertical alignment of target value area relative to the field
            anchor; Possible values are VCenter, Top, Bottom
        HorizontalAlignmentType:
          type: string
          description: Horizontal alignment of target value area relative to the field
            anchor; Possible values are Left, Right
        TargetFieldWidth_Relative:
          type: number
          description: Optional - scale factor for target field width - relative to
            width of field title; a value of 1.0 indicates the target value area has
            the same width as the field value as occurring in the image; a value of
            2.0 would indicate that the target value area has 2 times the width of
            the field value as occurring in the image.
          format: double
        TargetFieldHeight_Relative:
          type: number
          description: Optional - scale factor for target field height - relative
            to height of field title
          format: double
        TargetFieldHorizontalAdjustment:
          type: number
          description: Optional - horizontal adjestment in relative width of the field
          format: double
        TargetFieldVerticalAdjustment:
          type: number
          description: Optional - vertical adjestment in relative height of the field
          format: double
        Ignore:
          type: array
          description: Optional - Ignore any result items that contain a partial or
            complete match with these text strings
          items:
            type: string
        Options:
          type: string
          description: Optional - additional options that can be set for this field
            definition, separated by commas.  Possible values are AllowMultiMatch
            (allow the same anchor to be matched to multiple fields)
      description: Definition of a form field for OCR data extraction from images
    FormTableDefinition:
      type: object
      properties:
        TableID:
          type: string
          description: Optional; the ID of the table
        ColumnDefinitions:
          type: array
          description: Definition of the columns in the table
          items:
            $ref: '#/components/schemas/FormTableColumnDefinition'
        TargetTableHeight_Relative:
          type: number
          description: Optional - scale factor for target table height - relative
            to maximum height of headers of columns
          format: double
        TargetRowHeight_Relative:
          type: number
          description: Optional - scale factor for target row height - relative to
            height of column header
          format: double
      description: Definition of a form table for OCR data extraction from images
    TableRowResult:
      type: object
      properties:
        TableRowCellsResult:
          type: array
          description: Table cells in this row result
          items:
            $ref: '#/components/schemas/TableCellResult'
      description: One row of data in the resulting table
    FormTableColumnDefinition:
      type: object
      properties:
        ColumnID:
          type: string
          description: The identifier of the field; use this to identify which field
            is being referenced
        TopAnchor:
          type: string
          description: Optional - the top anchor of the column heading
        AnchorMode:
          type: string
          description: Optional - the matching mode for the anchor.  Possible values
            are Complete (requires the entire anchor to match) and Partial (allows
            only part of the anchor to match).  Default is Partial.
        DataType:
          type: string
          description: The data type of the field; possible values are INTEGER (Integer
            value), STRING (Arbitrary string value, spaces are permitted), DATE (Date
            in a structured format), DECIMAL (Decimal number), ALPHANUMERIC (Continuous
            alphanumeric string with no spaces), STRINGNOWHITESPACE (A string that
            contains no whitespace characters), SERIALNUMBER (A serial-number style
            string that contains letters and numbers, and certain symbols; must contain
            at least one number), ALPHAONLY (Alphabet characters only, no numbers
            or symbols or whitespace)
        MinimumCharacterCount:
          type: integer
          description: Optional - the target number of digits in the field; useful
            for fixed-length fields
          format: int32
        AllowNumericDigits:
          type: boolean
          description: Optional - set to false to block values that contain numeric
            digits, set to true to allow numeric digits
      description: Definition of a column within a table for OCR data extraction from
        images
    TableCellResult:
      type: object
      properties:
        ColumnID:
          type: string
          description: The ID of the column
        CellValues:
          type: array
          description: Result cell value(s) extracted
          items:
            $ref: '#/components/schemas/OcrPhotoTextElement'
      description: The recognition result of one cell in one row in a table of a form
    FormDefinitionTemplate:
      type: object
      properties:
        FieldDefinitions:
          type: array
          description: Field definitions in the template; a field is comprised of
            a key/value pair
          items:
            $ref: '#/components/schemas/FormFieldDefinition'
        TableDefinitions:
          type: array
          description: Table definitions in the template; a table is comprised of
            columns and rows and exists in a 2-dimensional layout; a common example
            of a table would be an invoice
          items:
            $ref: '#/components/schemas/FormTableDefinition'
      description: Definition of a form template; use a form template definition to
        recognize the fields in a form with Cloudmersive OCR
    PdfToTextResponse:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        OcrPages:
          type: array
          description: Page OCR results
          items:
            $ref: '#/components/schemas/OcrPageResult'
      description: Response from an OCR to text operation.  Includes the confidence
        rating and converted text result.
    OcrPageResult:
      type: object
      properties:
        PageNumber:
          type: integer
          description: Page number of the page that was OCR-ed, starting with 1 for
            the first page in the PDF file
          format: int32
        MeanConfidenceLevel:
          type: number
          description: Confidence level rating of the OCR operation; ratings above
            80% are strong.
          format: float
        TextResult:
          type: string
          description: Converted text string from the image input.
    PdfToWordsWithLocationResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        OcrPages:
          type: array
          description: OCR page results
          items:
            $ref: '#/components/schemas/OcrPageResultWithWordsWithLocation'
      description: Response from an OCR to words with location operation.  Includes
        the confience rating and converted text result, along with the locations of
        the words in the pages.
    OcrPageResultWithWordsWithLocation:
      type: object
      properties:
        PageNumber:
          type: integer
          description: Page number of the page that was OCR-ed, starting with 1 for
            the first page in the PDF file
          format: int32
        Successful:
          type: boolean
          description: True if successful, false otherwise
        Words:
          type: array
          description: Word elements in the image
          items:
            $ref: '#/components/schemas/OcrWordElement'
      description: OCR results of a page, including words of text and their location
    PdfToLinesWithLocationResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if successful, false otherwise
        OcrPages:
          type: array
          description: OCR results for each page
          items:
            $ref: '#/components/schemas/OcrPageResultWithLinesWithLocation'
      description: Response from an OCR to lines with location operation.  Includes
        the confience rating and converted text result, along with the locations of
        the lines in the pages.
    OcrPageResultWithLinesWithLocation:
      type: object
      properties:
        PageNumber:
          type: integer
          description: Page number of the page that was OCR-ed, starting with 1 for
            the first page in the PDF file
          format: int32
        Successful:
          type: boolean
          description: True if successful, false otherwise
        Lines:
          type: array
          description: Word elements in the image
          items:
            $ref: '#/components/schemas/OcrLineElement'
      description: OCR results of a page, including lines of text and their location
    GetPageAngleResult:
      type: object
      properties:
        Successful:
          type: boolean
          description: True if the operation was successful, false otherwise
        Angle:
          type: number
          description: Angle of the page in radians; 0 represents perfectly horizontal
          format: double
      description: Result of performing a get-page-angle operation
  securitySchemes:
    Apikey:
      type: apiKey
      description: API Key Authentication
      name: Apikey
      in: header
