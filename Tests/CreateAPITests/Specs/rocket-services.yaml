openapi: 3.0.1
info:
  title: Rocket Services
  description: |
    An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications.
    This in turn makes client integration easier and reduces the complexity and size of front-end applications.

    Rocket is also customisable - allowing UI engineers to â€˜remixâ€™ the existing back-end services into something that
    best suits the application they are developing.
  version: 3.730.326-ref-1-39-0
servers:
- url: /api
paths:
  /account:
    get:
      tags:
      - account
      description: Get the details of an account along with the profiles and entitlements
        under it.
      operationId: getAccount
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    patch:
      tags:
      - account
      description: |
        Update the details of an account.

        With the exception of the address, this supports partial updates, so you can send just the
        properties you wish to update.

        When the address is provided any properties which are omitted from the address will be cleared.
      operationId: updateAccount
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Updated account details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: account
  /account/billing/methods:
    get:
      tags:
      - account
      description: Get the available payment methods under an account.
      operationId: getPaymentMethods
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of available payment methods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    post:
      tags:
      - account
      description: Add a new payment method to an account.
      operationId: addPaymentMethod
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Registration details for a new payment method.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentMethodRequest'
        required: true
      responses:
        200:
          description: The created payment method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
      x-codegen-request-body-name: body
    x-serviceId: billing
  /account/billing/methods/{id}:
    get:
      tags:
      - account
      description: Get a payment method under an account.
      operationId: getPaymentMethod
      parameters:
      - name: id
        in: path
        description: The id of the payment method to get.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The payment method requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    delete:
      tags:
      - account
      description: Remove a payment method from an account.
      operationId: removePaymentMethod
      parameters:
      - name: id
        in: path
        description: The id of the payment method to remove.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Payment method removed.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
    x-serviceId: billing
  /account/billing/purchases:
    get:
      tags:
      - account
      description: Get a list of all purchases made under an account.
      operationId: getPurchases
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: A list of all purchases made under the account.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purchase'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
    post:
      tags:
      - account
      description: |
        Purchase a plan or item offer.
        The result of a successful transaction is a new entitlement.
      operationId: makePurchase
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a plan or item purchase.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        200:
          description: The entitlement for the purchased plan or item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlement'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
      x-codegen-request-body-name: body
    x-serviceId: billing
  /account/billing/subscriptions/{id}:
    put:
      tags:
      - account
      description: |
        Renew a cancelled subscription or switch subscription to a different plan.

        When renewing a cancelled subscription membership, hit this endpoint with
        the id of subscription to renew.

        To switch plans provide the id of the current active subscription membership
        of the account, and in the query specify the id of the plan to switch to.
      operationId: updateSubscription
      parameters:
      - name: id
        in: path
        description: |
          The identifier of the current subscription membership
          associated with the account.
        required: true
        schema:
          type: string
      - name: planId
        in: query
        description: The id of the plan to switch to if switching plans.
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
    delete:
      tags:
      - account
      description: |
        Cancel a plan subscription.

        A cancelled subscription will continue to be valid until the subscription
        expiry date or next renewal date.
      operationId: cancelSubscription
      parameters:
      - name: id
        in: path
        description: |
          The identifier of the current active subscription membership of the account.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Commerce
    x-serviceId: billing
  /account/devices:
    get:
      tags:
      - account
      description: |
        Get all devices registered under this account.

        Also includes information around device registration and deregistration limits.
      operationId: getDevices
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDevices'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    post:
      tags:
      - account
      description: |
        Register a playback device under an account.

        If a device with the same id already exists a `409` conflict will be returned.
      operationId: registerDevice
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Registration details for a new playback device.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistrationRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        409:
          description: A device with the provided id already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: device
  /account/devices/{id}/name:
    put:
      tags:
      - account
      description: Rename a device
      operationId: renameDevice
      parameters:
      - name: id
        in: path
        description: The unique identifier for this registered device e.g. serial
          number.
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: The new name for the device.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Device renamed.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: device
  /account/devices/authorization:
    post:
      tags:
      - account
      description: "Authorize a device from a generated device authorization code.\n\
        \nThis is the second step in the process of authorizing a device by pin code.\n\
        \nFirstly the device must request a generated authorization code via the\n\
        `/authorization/device/code` endpoint.\n\nThis endpoint then authorizes the\
        \ device associated with the code to sign in\nto a user account. Typically\
        \ this endpoint will be called from a page\npresented in the web app under\
        \ the account section.\n\nOnce authorized, the device will then be able to\
        \ sign in to that account\nvia the `/authorization/device` endpoint, without\
        \ needing to provide the \ncredentials of the user.\n"
      operationId: authorizeDevice
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The generated device authorization code.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthorizationCode'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /account/devices/{id}:
    get:
      tags:
      - account
      description: Get a registered device.
      operationId: getDevice
      parameters:
      - name: id
        in: path
        description: The unique identifier for the registered device e.g. serial number.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    delete:
      tags:
      - account
      description: Deregister a playback device from an account.
      operationId: deregisterDevice
      parameters:
      - name: id
        in: path
        description: The unique identifier for the registered device e.g. serial number.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Device deregistered.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: device
  /account/entitlements:
    get:
      tags:
      - account
      description: |
        Get all entitlements under the account.

        This list is returned under the call to get account information so a call here is
        only required when wishing to refresh a local copy of entitlements.
      operationId: getEntitlements
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entitlement'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: entitlement
  /account/items/{id}/videos:
    get:
      tags:
      - account
      description: |
        Get the video files associated with an item given maximum resolution, device type
        and one or more delivery types.

        This endpoint accepts an Account Catalog token, however if when requesting
        playback files you receive an *403 status code with error code 1* then the file
        you're requesting is classification restricted. This means you should switch
        to target the `/account/items/{id}/videos-guarded` endpoint, passing it an Account
        Playback token. If not already obtained, this token can be requested via the
        `/itv/pinauthorization` endpoint with an account level pin.

        For convenience you may also access free / public files through this endpoint
        instead of the /items/{id}/videos endpoint, when authenticated.

        Returns an array of video file objects which each include a url to a video.

        The first entry in the array contains what is predicted to be the best match.
        The remainder of the entries, if any, may contain resolutions below what was
        requests. For example if you request HD-720 the response may also contain
        SD entries.

        If you specify multiple delivery types, then the response array will insert
        types in the order you specify them in the query. For example `stream,progressive`
        would return an array with 0 or more stream files followed by 0 or more progressive files.

        If no files are found a 404 is returned.
      operationId: getItemMediaFiles
      parameters:
      - name: id
        in: path
        description: The identifier of the item whose video files to load.
        required: true
        schema:
          type: string
      - name: delivery
        in: query
        description: The video delivery type you require.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - stream
            - progressive
            - download
      - name: resolution
        in: query
        description: The maximum resolution the device to playback the media can present.
        required: true
        schema:
          type: string
          enum:
          - HD-4K
          - HD-1080
          - HD-720
          - SD
          - External
      - name: formats
        in: query
        description: |
          The set of media file formats that the device supports, in the order of preference.

          When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.

          `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.

          When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - mp4
            - mpd
            - hls
            - external
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: |
            The list of video files available.
            The first entry containing what is predicted to be the best match.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaFile'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: media
  /account/items/{id}/videos-guarded:
    get:
      tags:
      - account
      description: |
        Get the video files associated with an item given maximum resolution, device type
        and one or more delivery types.

        This endpoint is identical to the `/account/items/{id}/videos` however it expects
        an Account Playback token. This token, and in association this endpoint, is specifically
        for use when playback files are classification restricted and require an account
        level pin to access them.

        Returns an array of video file objects which each include a url to a video.

        The first entry in the array contains what is predicted to be the best match.
        The remainder of the entries, if any, may contain resolutions below what was
        requests. For example if you request HD-720 the response may also contain
        SD entries.

        If you specify multiple delivery types, then the response array will insert
        types in the order you specify them in the query. For example `stream,progressive`
        would return an array with 0 or more stream files followed by 0 or more progressive files.

        If no files are found a 404 is returned.
      operationId: getItemMediaFilesGuarded
      parameters:
      - name: id
        in: path
        description: The identifier of the item whose video files to load.
        required: true
        schema:
          type: string
      - name: delivery
        in: query
        description: The video delivery type you require.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - stream
            - progressive
            - download
      - name: resolution
        in: query
        description: The maximum resolution the device to playback the media can present.
        required: true
        schema:
          type: string
          enum:
          - HD-4K
          - HD-1080
          - HD-720
          - SD
          - External
      - name: formats
        in: query
        description: |
          The set of media file formats that the device supports, in the order of preference.

          When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.

          `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.

          When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - mp4
            - mpd
            - hls
            - external
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: |
            The list of video files available.
            The first entry containing what is predicted to be the best match.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaFile'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Playback
    x-serviceId: media
  /account/nonce:
    get:
      tags:
      - account
      description: |
        Generate a new account nonce.

        A nonce may be required to help sign a response from a third party
        service which will be passed back to these services.

        For example a Facebook single-sign-on request initiated by a client
        application may first get a nonce from here to include in the request.
        Facebook will then include the nonce in the auth token it issues. This
        token can be passed back to our services and the nonce checked for validity.
      operationId: generateNonce
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNonce'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: account
  /account/password:
    put:
      tags:
      - account
      description: |
        Change the password of an account.

        The expected token scope is Settings.
      operationId: changePassword
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The new account password & ITV profile token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvPassword
  /account/pin:
    put:
      tags:
      - account
      description: Change the pin of an account.
      operationId: changePin
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The new account pin.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePinRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvAccount
  /account/profile:
    get:
      tags:
      - profile
      description: Get the details of the active profile, including watched, bookmarked
        and rated items.
      operationId: getProfile
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Details of the active profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDetail'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: profile
  /account/profile/bookmarks:
    get:
      tags:
      - profile
      description: Get the map of bookmarked item ids (itemId => creationDate) under
        the active profile.
      operationId: getBookmarks
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  format: date-time
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/bookmarks/list:
    get:
      tags:
      - profile
      description: Returns the list of bookmarked items under the active profile.
      operationId: getBookmarkList
      parameters:
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: item_type
        in: query
        description: The item type to filter by. Defaults to unspecified.
        schema:
          type: string
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/bookmarks/{itemId}:
    get:
      tags:
      - profile
      description: Get the bookmark for an item under the active profile.
      operationId: getItemBookmark
      parameters:
      - name: itemId
        in: path
        description: The id of the item to get the bookmark for.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    put:
      tags:
      - profile
      description: |
        Bookmark an item under the active profile.

        Creates one if it doesn't exist, overwrites one if it does.
      operationId: bookmarkItem
      parameters:
      - name: itemId
        in: path
        description: The id of the item to bookmark.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Bookmark created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    delete:
      tags:
      - profile
      description: Unbookmark an item under the active profile.
      operationId: deleteItemBookmark
      parameters:
      - name: itemId
        in: path
        description: The identifier of the bookmark to delete.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Bookmark deleted.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/continue-watching/list:
    get:
      tags:
      - profile
      description: |
        Returns a list of items which have been watched but not completed under the active
        profile.

        Multiple episodes under the same show may be watched or in progress, however only a
        single item belonging to a particular show will be included in the returned list.

        The next episode to continue watching for a particular show will be the most recent
        incompletely watched episode, or the next episode following the most recently
        completely watched episode. Based on the specified `show_item_type` type, either the next
        episode, the season of the next episode, or the show will be included in the list.
      operationId: getContinueWatchingList
      parameters:
      - name: show_item_type
        in: query
        description: |
          The item type to be returned for continue watching items belonging to a show.

          Multiple episodes under the same show may be watched or in progress, however only a
          single item belonging to a particular show will be included in the returned list.

          The next episode to continue watching for a particular show will be the most recent
          incompletely watched episode, or the next episode following the most recently
          completely watched episode. Based on the specified `show_item_type` type, either the next
          episode, the season of the next episode, or the show will be included in the list.

          If `episode` is specified, then only the next episode to continue watching for a
          show will be returned.

          If `season` is specified, then only the season of the next episode will be returned.

          If `show` is specified, then only the show of the next episode will be returned

          The recommended value of this parameter should reflect the desitination the
          user will be sent to when they select this item in the list. So if a user will
          be sent to the show detail page then this should be `show` and you can use
          the `include` parameter to get metadata about the episode or season if needed
        schema:
          type: string
          default: episode
          enum:
          - episode
          - season
          - show
      - name: include
        in: query
        description: |
          Include one opr more ancestor/children for items belonging to a show. Extra items
          will be populated in the `listData` property of the list

          If no value is specified no dependencies are included.

          If `episode` is specified, then the next episode will be added for season/show
          items. Has no effect if `show_item_type` is set to `episode`.

          If `season` is specified, then the season of the next episode will be added for
          episode/show items. Has no effect if `show_item_type` is set to `season`.

          If `show` is specified, then the show of the next episode will be added for
          episode/season items. Has no effect if `show_item_type` is set to `show`.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - episode
            - season
            - show
          default: '[]'
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/continue-watching/{itemId}:
    delete:
      tags:
      - profile
      description: |
        Excludes an item from continue-watching rail. Resume points remain in all other rails.
        To undo save actual playback position using PUT /account/profile/watched/{itemId}.
      operationId: excludeFromContinueWatchingList
      parameters:
      - name: itemId
        in: path
        description: The id of the item to be excluded.
        required: true
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        204:
          description: Excluded.
          content: {}
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/items/{itemId}/next:
    get:
      tags:
      - profile
      description: "Returns the next item to play given a source item id.\n\nFor an\
        \ unwatched show it returns the first episode available to the account.\n\n\
        For a watched show it returns the last incompletely watched episode by the\
        \ profile,\nor the episode that immediately follows the last completely watched\
        \ episode \nor nothing.\n\nFor an episode it always returns the immediately\
        \ following episode, if available to\nthe account, or nothing.\n\nIf the response\
        \ does not contain a `next` property then no item was found.\n"
      operationId: getNextPlaybackItem
      parameters:
      - name: itemId
        in: path
        description: |
          The identifier of the source item to base the next to watch item off.
        required: true
        schema:
          type: string
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: expand
        in: query
        description: |
          If no value is specified no dependencies are expanded.

          If 'parent' is specified then only the direct parent will be expanded.
          For example if an `Episode` then the `Season` would be included.

          If 'ancestors' is specified then the full parent chain is expanded.
          For example if an `Episode` then both the `Season` and `Show` would be included.
        schema:
          type: string
          enum:
          - parent
          - ancestors
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The detail of the next item to play.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPlaybackItem'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/items/{itemId}/previous:
    get:
      tags:
      - profile
      description: |
        Returns the previous item to play given a source item id.

        For episode/special it returns the previous episode/special from current season,
        or from previous nearest season where available episode/special is found.
        or nothing.

        If the response does not contain a `previous` property then no item was found.
      operationId: getPreviousPlaybackItem
      parameters:
      - name: itemId
        in: path
        description: |
          The identifier of the source item to base the previous item.
        required: true
        schema:
          type: string
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: expand
        in: query
        description: |
          If no value is specified no dependencies are expanded.

          If 'parent' is specified then only the direct parent will be expanded.
          For example if an `Episode` then the `Season` would be included.

          If 'ancestors' is specified then the full parent chain is expanded.
          For example if an `Episode` then both the `Season` and `Show` would be included.
        schema:
          type: string
          enum:
          - parent
          - ancestors
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The detail of the previous item to play.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPlaybackItem'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/ratings:
    get:
      tags:
      - profile
      description: Get the map of rated item ids (itemId => rating out of 10) under
        the active profile.
      operationId: getRatings
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: userRating
  /account/profile/ratings/list:
    get:
      tags:
      - profile
      description: Returns the list of rated items under the active profile.
      operationId: getRatingsList
      parameters:
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: order_by
        in: query
        description: |
          What to order by.

          Ordering by `date-modified` equates to ordering by the last rated date.
        schema:
          type: string
          default: date-added
          enum:
          - date-added
          - date-modified
      - name: item_type
        in: query
        description: The item type to filter by. Defaults to unspecified.
        schema:
          type: string
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: userRating
  /account/profile/ratings/{itemId}:
    get:
      tags:
      - profile
      description: Get the rating info for an item under the active profile.
      operationId: getItemRating
      parameters:
      - name: itemId
        in: path
        description: The id of the item to get the rating info for.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    put:
      tags:
      - profile
      description: |
        Rate an item under the active profile.

        Creates one if it doesn't exist, overwrites one if it does.
      operationId: rateItem
      parameters:
      - name: itemId
        in: path
        description: The id of the item to rate.
        required: true
        schema:
          type: string
      - name: rating
        in: query
        description: The item rating between 1 and 10 inclusive.
        required: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          format: int32
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: userRating
  /account/profile/watched:
    get:
      tags:
      - profile
      description: Get the map of watched item ids (itemId => last playhead position)
        under the active profile.
      operationId: getWatched
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Watched'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    delete:
      tags:
      - profile
      description: |
        Remove the watched status of items under the active profile. Passing in
        specific `itemId`s to the `item_ids` query parameter will cause only these
        items to be removed. **If this list is missing all watched items will be
        removed**
      operationId: deleteWatched
      parameters:
      - name: item_ids
        in: query
        description: |
          List of `itemId`s to delete. Omit this parameter to delete all items
        style: form
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            minLength: 1
            type: string
            description: itemId to delete
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Watched statuses deleted.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/watched/list:
    get:
      tags:
      - profile
      description: Returns the list of watched items under the active profile.
      operationId: getWatchedList
      parameters:
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: completed
        in: query
        description: |
          Filter by whether an item has been fully watched (completed) or not.

          If `undefined` then both partially and fully watched items are returned.
        schema:
          type: boolean
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: order_by
        in: query
        description: |
          What to order by.

          Ordering by `date-modified` equates to ordering by the last watched date.
        schema:
          type: string
          default: date-added
          enum:
          - date-added
          - date-modified
      - name: item_type
        in: query
        description: The item type to filter by. Defaults to unspecified.
        schema:
          type: string
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profile/watched/{itemId}:
    get:
      tags:
      - profile
      description: Get the watched status info for an item under the active profile.
      operationId: getItemWatchedStatus
      parameters:
      - name: itemId
        in: path
        description: The id of the item to get the watched status for.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watched'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    put:
      tags:
      - profile
      description: |
        Record the watched playhead position of a video under the active profile.

        Can be used later to resume a video from where it was last watched.

        Creates one if it doesn't exist, overwrites one if it does.
      operationId: setItemWatchedStatus
      parameters:
      - name: itemId
        in: path
        description: The id of the item being watched.
        required: true
        schema:
          type: string
      - name: position
        in: query
        description: The playhead position to record.
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watched'
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvNightwatch
  /account/profiles:
    post:
      tags:
      - account
      description: Create a new profile under the active account.
      operationId: createProfile
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Profile details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreationRequest'
        required: true
      responses:
        201:
          description: Details of the created profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDetail'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: profile
  /account/profiles/{id}:
    get:
      tags:
      - account
      description: Get the summary of a profile with a specific id under the active
        account.
      operationId: getProfileWithId
      parameters:
      - name: id
        in: path
        description: The identifier of the profile to return.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSummary'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    delete:
      tags:
      - account
      description: |
        Delete a profile with a specific id under the active account.

        Note that you cannot delete the primary profile.
      operationId: deleteProfileWithId
      parameters:
      - name: id
        in: path
        description: The identifier of the profile to delete.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: Profile deleted.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    patch:
      tags:
      - account
      description: |
        Update the summary of a profile with a specific id under the active account.

        This supports partial updates so you can send just the properties you wish to update.
      operationId: updateProfileWithId
      parameters:
      - name: id
        in: path
        description: The identifier of the profile to update.
        required: true
        schema:
          type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Updated profile details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
        required: true
      responses:
        204:
          description: Profile updated.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: profile
  /account/request-email-verification:
    post:
      tags:
      - account
      description: |
        Request that the email address tied to an account be verified.

        This will send a verification email to the email address of the primary profile containing
        a link which, once clicked, completes the verification process via the /verify-email endpoint.

        Note that when an account is created this email is sent automatically so there's no need
        to call this directly.

        If the user doesn't click the link before it expires then this endpoint can be called
        to request a new verification email. In the future it may also be used if we add support
        for changing an account email address.
      operationId: requestEmailVerification
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: account
  /authorization:
    post:
      tags:
      - authorization
      description: |
        Request one or more `Account` level authorization tokens each with a chosen scope.

        Tokens are used to access restricted service endpoints. These restricted endpoints
        will require a specific token type (e.g Account) with a specific scope (e.g. Catalog)
        before access is granted.

        For convenience, where a Profile level token with the same scope exists it will also be returned.

        Authorization with pin is not supported on this endpoint anymore. Use `/itv/pinauthorization`
        endpoint instead.
      operationId: getAccountToken
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The account credentials with requested token scope.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTokenRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    delete:
      tags:
      - authorization
      description: |
        When a user signs out of an application we need to clear some
        basic cookies we assigned them during token authorization.
      operationId: signOut
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvAuth
  /authorization/device:
    post:
      tags:
      - authorization
      description: |
        Get Catalog tokens for an account using a device authorization code.
        Where a Profile level token of Catalog scope exists it will also be returned.

        This is the final step in the process of authorizing a device by pin code.

        Firstly the device must request a generated authorization code via the
        `/authorization/device/code` endpoint.

        The code is subsequently used to authorize the device to sign in to a given
        account via the `/account/devices/authorization` endpoint. Typically this
        will be from a page presented in the web app under the account section.

        Once authorized, this endpoint will allow the device to sign in without
        needing to provide the credentials of the user.
      operationId: getAccountTokenByCode
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The device id e.g. serial number and authorization code.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTokenByCodeRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /authorization/device/code:
    post:
      tags:
      - authorization
      description: "Get a generated device authorization code.\n\nThis is the first\
        \ step in the process of authorizing a device by pin code.\nThe device will\
        \ make a request to this endpoint providing a unique identifier\nfor the device\
        \ such as a serial number. This endpoint will then return a\ngenerated code\
        \ which is tied to the given device.\n\nThe code may subsequently be used\
        \ to authorize the device to sign in to an\naccount via the `/account/devices/authorization`\
        \ endpoint. Typically this\nwill be from a page presented in the web app under\
        \ the account section.\n\nOnce authorized, the device will then be able to\
        \ sign in to that account\nvia the `/authorization/device` endpoint, without\
        \ needing to provide the \ncredentials of the user.\n"
      operationId: generateDeviceAuthorizationCode
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of the device being authorized.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegistrationRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthorizationCode'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /authorization/profile:
    post:
      tags:
      - authorization
      description: |
        Request one or more `Profile` level authorization tokens each with a chosen scope.

        Tokens are used to access restricted service endpoints. These restriced endpoints
        will require a specific token type (e.g Profile) with a specific scope (e.g. Catalog)
        before access is granted.
      operationId: getProfileToken
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The profile id and optional pin with required token scope.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileTokenRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /authorization/refresh:
    post:
      tags:
      - authorization
      description: Refresh an account or profile level authorization token which is
        marked as refreshable.
      operationId: refreshToken
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The token to refresh.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /authorization/sso:
    post:
      tags:
      - authorization
      description: Exchange a third party single-sign-on token for our own authorization
        tokens.
      operationId: singleSignOn
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: A single-sign-on request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleSignOnRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: |
            Unauthorized.

            Error codes:
              - 6000: Unknown or default error code.
              - 6001: An account with the same email already exists but it's not linked to this social identity.
              - 6002: The social provider token provided is invalid.
              - 6003: The account is already linked to a different account with the same provider.
              - 6004: The user data returned from the social provider is missing the email address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: auth
  /bt/plan/{token}:
    get:
      tags:
      - bt
      description: Returns all the plans available for BT flow including additional
        description data.
      operationId: getPlanByToken
      parameters:
      - name: token
        in: path
        description: The identifier of the user provided by BT in an initial URL.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Available plan for current user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BtPlanListItem'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvBt
  /bt/plans:
    get:
      tags:
      - bt
      description: Returns all the plans available for BT flow including additional
        description data.
      operationId: getPlans
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: List of available plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BtPlans'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvBt
  /bt/token/assign:
    post:
      tags:
      - bt
      description: Assigns an UserToken to a profile on the ITV side. Currently throws
        an exception.
      operationId: assignToken
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of an assign request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvAssignBtTokenRequest'
        required: true
      responses:
        201:
          description: OK
          content: {}
        401:
          description: User unknown
          content: {}
        500:
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvBt
  /bt/token/validate:
    get:
      tags:
      - bt
      description: |
        Checks a provided token for BT eligible user.
      operationId: checkUserToken
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The token is eligeble for BT.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvBt
  /check-subscription/{id}:
    get:
      tags:
      - support
      description: Returns the details of subscription data for a user with specified
        id.
      operationId: getSubscriptionData
      parameters:
      - name: id
        in: path
        description: |
          The identifier of the user to load.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The data requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetails'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvSubscription
  /config:
    get:
      tags:
      - app
      description: |
        Get the global configuration for an application. Should be called during app statup.

        This includes things like device and playback rules, classifications,
        sitemap and subscriptions.

        You have the option to select specific configuration objects using the 'include'
        parameter, or if unspecified, getting all configuration.
      operationId: getAppConfig
      parameters:
      - name: include
        in: query
        description: |
          A comma delimited list of config objects to return.
          If none specified then all configuration is returned.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - classification
            - playback
            - sitemap
            - navigation
            - subscription
            - general
            - display
            - i18n
            - linear
      - name: system
        in: query
        description: |
          Classification system to load in case include = classification.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of available pages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvConfig
  /ee/msisdn:
    post:
      tags:
      - ee
      description: Assigns a msisdn to a profile on ITV side.
      operationId: assignMsisdn
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of an assign request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvAssignMsisdnRequest'
        required: true
      responses:
        201:
          description: OK
          content: {}
        401:
          description: User unknown
          content: {}
        500:
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvEe
  /ee/offers:
    post:
      tags:
      - ee
      description: |
        Returns eligible partner specific offers for the querying partner for an EE MSISDN.
        This call is supposed to be called after we have MSISDN accired.
        This call should be followed by POST /ee/msisdn.
      operationId: getEligibleOffers
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Data for getting the eligible offers.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EeOffersRequest'
        required: true
      responses:
        200:
          description: The list of eligible offers value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeOffersResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: eeOffers
  /ee/pin:
    put:
      tags:
      - ee
      description: |
        Creates a PIN request that will send an SMS to the given msisdn.
        This call is to validate MSISDN entered by a user not comming through EE network.
        This call should be followed by POST ee/pin.
      operationId: createPinRequest
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Data for creating the PIN request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EeCreatePinRequest'
        required: true
      responses:
        200:
          description: The PIN reference value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeCreatePinResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    post:
      tags:
      - ee
      description: Validate PIN request created by calling POST /ee/pin This call
        is to validate MSISDN entered by a user not comming through EE network. This
        call should be called after PUT /ee/pin. This call should be followed by POST
        /ee/offers.
      operationId: validatePinRequest
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Data for validating PIN.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EeValidatePinRequest'
        required: true
      responses:
        200:
          description: The validation status - success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeValidatePinResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: eeCredentials
  /ee/plans:
    get:
      tags:
      - ee
      description: Returns all the plans available for EE flow including additional
        description data.
      operationId: getPlans
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: List of available plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EePlans'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvEe
  /ee/plans/{id}:
    get:
      tags:
      - ee
      description: Returns the plan description for EE flow including additional description
        data.
      operationId: getPlan
      parameters:
      - name: id
        in: path
        description: The identifier of the plan received from ee/offers.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: List of available plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EePlanListItem'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvEe
  /ee/token/create:
    get:
      tags:
      - ee
      description: Returns a token for later calls to EE API. TTL is one hour. Recommended
        is FE refreshes this token before each call.
      operationId: createToken
      responses:
        200:
          description: The token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeCreateTokenResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: eeAuth
  /ee-bt/eligibility:
    get:
      tags:
      - ee
      - bt
      description: Check whether or not a user is eligible for switching to Bt or
        EE offers.
      operationId: checkEeBtEligibility
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Success, returns eligibility data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EeBtEligibility'
        406:
          description: Customer does not exist.
          content: {}
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /items/{id}:
    get:
      tags:
      - content
      description: Returns the details of an item with the specified id.
      operationId: getItem
      parameters:
      - name: id
        in: path
        description: |
          The identifier of the item to load.

          The custom identifier of an item can be used here if the `use_custom_id` parameter is true.
        required: true
        schema:
          type: string
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: expand
        in: query
        description: |
          If no value is specified no dependencies are expanded.

          If 'children' is specified then the list of any direct children will be expanded. For example
          seasons of a show or episodes of a season.

          If 'all' is specified then the parent chain will be expanded along with any child list at each level.
          For example if an episode is specified then its season will be expanded and that season's episode list.
          The season will have its show expanded and the show will have its season list expanded.

          The 'all' options is useful when you deep link into a show/season/episode for the first time as
          it provides full context for navigating around the show page. Subsequent navigation around
          children of the show should only need to request expand of children.

          If 'ancestors' is specified then only the parent chain is included.

          If 'parent' is specified then only the direct parent is included.

          If an expand is specified which is not relevant to the item type, it will be ignored.
        schema:
          type: string
          enum:
          - all
          - children
          - ancestors
          - parent
      - name: select_season
        in: query
        description: |
          Given a provided show id, it can be useful to get the details of a child season. This option
          provides a means to return the `first` or `latest` season of a show given the show id.

          The `expand` parameter also works here so for example you could land on a show page and request the
          latest season along with `expand=all`. This would then return the detail of the latest season with
          its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.

          Note the `id` parameter must be a show id for this parameter to work correctly.
        schema:
          type: string
          enum:
          - first
          - latest
      - name: use_custom_id
        in: query
        description: Set to true when passing a custom Id as the `id` path parameter.
        schema:
          type: boolean
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The item requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDetail'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: item
  /items/{id}/children:
    get:
      tags:
      - content
      description: |
        Returns the List of child summary items under an item.

        If the item is a Season then the children will be episodes and ordered by episode number.

        If the item is a Show then the children will be Seasons and ordered by season number.

        Returns 404 if no children found.
      operationId: getItemChildrenList
      parameters:
      - name: id
        in: path
        description: The identifier of the item whose children to load.
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itemChildList
  /items/{id}/related:
    get:
      tags:
      - content
      description: |
        Returns the list of items related to the parent item.

        Note for now, due to the size of the list being unknown, only a single page will be returned.
      operationId: getItemRelatedList
      parameters:
      - name: id
        in: path
        description: The identifier of the item to based related items off.
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itemRelatedList
  /items/{id}/videos:
    get:
      tags:
      - content
      description: |
        Get the free / public video files associated with an item given maximum resolution,
        device type and one or more delivery types.

        Returns an array of video file objects which each include a url to a video.

        The first entry in the array contains what is predicted to be the best match.
        The remainder of the entries, if any, may contain resolutions below what was
        requests. For example if you request HD-720 the response may also contain
        SD entries.

        If you specify multiple delivery types, then the response array will insert
        types in the order you specify them in the query. For example `stream,progressive`
        would return an array with 0 or more stream files followed by 0 or more progressive files.

        If no files are found a 404 is returned.
      operationId: getPublicItemMediaFiles
      parameters:
      - name: id
        in: path
        description: The identifier of the item whose video files to load.
        required: true
        schema:
          type: string
      - name: delivery
        in: query
        description: The video delivery type you require.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - stream
            - progressive
            - download
      - name: resolution
        in: query
        description: The maximum resolution the device to playback the media can present.
        required: true
        schema:
          type: string
          enum:
          - HD-4K
          - HD-1080
          - HD-720
          - SD
          - External
      - name: formats
        in: query
        description: |
          The set of media file formats that the device supports, in the order of preference.

          When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.

          `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.

          When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - mp4
            - mpd
            - hls
            - external
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: |
            The list of video files available.
            The first entry containing what is predicted to be the best match.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaFile'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: media
  /items/{itemId}/next:
    get:
      tags:
      - content
      description: |
        Identical to GET /account/profile/items/{itemId}/next route but for users
        that are not logged in i.e. this endpoint does not require authorisation
      operationId: getAnonNextPlaybackItem
      parameters:
      - name: itemId
        in: path
        description: |
          The identifier of the source item to base the next to watch item off.
        required: true
        schema:
          type: string
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: expand
        in: query
        description: |
          If no value is specified no dependencies are expanded.

          If 'parent' is specified then only the direct parent will be expanded.
          For example if an `Episode` then the `Season` would be included.

          If 'ancestors' is specified then the full parent chain is expanded.
          For example if an `Episode` then both the `Season` and `Show` would be included.
        schema:
          type: string
          enum:
          - parent
          - ancestors
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The detail of the next item to play.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPlaybackItem'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvNightwatch
  /itv/billinghistory/{platform}:
    post:
      tags:
      - itv
      description: Returns the list of billing records for specified payment platform.
      operationId: getBillingHistory
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a billing history request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvBillingHistoryRequest'
        required: true
      responses:
        200:
          description: List of billing records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvBillingHistory'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/cards/{platform}:
    put:
      tags:
      - itv
      description: Change payment card details.
      operationId: changeCardDetails
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of change card details request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvChangeCardDetailsRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    post:
      tags:
      - itv
      description: Get payment card details.
      operationId: getCardDetails
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: ITV profile token in body.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvGetCardDetailsRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvCardDetails'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/changeemail:
    post:
      tags:
      - itv
      description: |
        Change email address related to account/profile.

        The expected token scope is Settings.
      operationId: changeEmail
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: New email address & ITV profile token.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvChangeEmailRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvProfile
  /itv/changemarketing:
    post:
      tags:
      - itv
      description: |
        Change marketing preferences related to account/profile.

        The expected token scope is Settings.
      operationId: changeMarketing
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Updated marketing preferences & ITV profile token.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvChangeMarketingRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvProfile
  /itv/deleteaccount:
    post:
      tags:
      - itv
      description: |
        Delete account in compliance with GDPR.

        The expected token scope is Settings.
      operationId: deleteAccount
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: New email address & ITV profile token.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvDeleteAccountRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvGdpr
  /itv/entitlements/current:
    get:
      tags:
      - itv
      description: Returns current entitlement.
      operationId: getCurrentEntitlement
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Current entitlement.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvEntitlementCurrent'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/entitlements/history:
    get:
      tags:
      - itv
      description: Returns the state of subscription for any payment platform.
      operationId: getEntitlementsHistory
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Details of current subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvEntitlementsHistory'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/featureFlag/{feature}:
    get:
      tags:
      - itv
      description: Gets info whether or not a feature is enabled or disabled using
        a feature flag. Feature flags are set as a custom field within PM. It also
        supports custom feature flag data if needed. Such data can be return as well.
      operationId: getFeatureFlag
      parameters:
      - name: feature
        in: path
        description: The identifier of the feature to check for feature flag.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvFeatureFlag'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvConfig
  /itv/googlepay/subscription:
    post:
      tags:
      - itv
      description: Get the list of recommended items under the active profile.
      operationId: googlePaySubscription
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of googlePay subscription request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvGooglePaySubscriptionRequest'
        required: true
      responses:
        204:
          description: No Content
          content: {}
        400:
          description: missing purchase token/subscription item in body, or subscription
            item undefined
          content: {}
        401:
          description: Invalid or missing grant
          content: {}
        409:
          description: Purchase token is already attached to a different user
          content: {}
        415:
          description: wrong content-type
          content: {}
        500:
          description: something bad has happened
          content: {}
      security:
      - profileAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/had/entitlements:
    get:
      tags:
      - itv
      description: Check whether the user has been previously entitled.
      operationId: checkPreviousEntitlements
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvHadEntitlement'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/items/clips:
    post:
      tags:
      - content
      description: |
        Get the media clip files associated with items.
      operationId: getItemsMediaClipFiles
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The item Axis ids joined string with comma.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItemDownloadableRequest'
        required: true
      responses:
        200:
          description: The item id with clip files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClipFilesList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvItem
  /itv/items/downloadable:
    post:
      tags:
      - content
      description: Returns the details of an item with the specified id.
      operationId: getItemDownloadables
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The item Axis ids joined string with comma.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItemDownloadableRequest'
        required: true
      responses:
        200:
          description: The item requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDownloadableList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvItem
  /itv/itemsummary/{externalId}:
    get:
      tags:
      - itv
      description: Redirects to corresponding Axis Item details page.
      operationId: getItem
      parameters:
      - name: externalId
        in: path
        description: The external identifier of the item.
        required: true
        schema:
          type: string
      responses:
        302:
          description: Item found.
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvInfo
  /itv/page:
    get:
      tags:
      - app
      description: |
        Returns a page with the specified id.

        This is a cut down version for low memory devices.123

        If targeting the search page you must url encode the search term as a parameter
        using the `q` key. For example if your browser path looks like `/search?q=the`
        then what you pass to this endpoint would look like `/itv/page?path=/search%3Fq%3Dthe`.
      operationId: getItvPage
      parameters:
      - name: path
        in: query
        description: The path of the page to load, e.g. '/movies'.
        required: true
        schema:
          type: string
      - name: list_page_size
        in: query
        description: The number of items to load when prefetching and paging each
          list in the page row.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: list_page_size_large
        in: query
        description: |
          The number of items to load when prefetching a continuous scroll list entry in a page.

          By default any list page entry with template pattern `/^CS\d+$/` will
          be considered a continuous scroll list.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 50
      - name: max_list_prefetch
        in: query
        description: The maximum number of lists to prefetch in the page.
        schema:
          maximum: 15
          minimum: 0
          type: integer
          format: int32
          default: 2
      - name: item_detail_expand
        in: query
        description: |
          Only relevant when loading item detail pages as these embed a detailed item in the main page entry.

          If no value is specified no item dependencies are expanded.

          If 'children' is specified then the list of any direct children will be expanded. For example
          seasons of a show or episodes of a season.

          If 'all' is specified then the parent chain will be expanded along with any child list at each level.
          For example if an episode is specified then its season will be expanded and that season's episode list.
          The season will have its show expanded and the show will have its season list expanded.

          The 'all' options is useful when you deep link into a show/season/episode for the first time as
          it provides full context for navigating around the show page. Subsequent navigation around
          children of the show should only need to request expand of children.

          If 'ancestors' is specified then only the parent chain is included

          If an expand is specified which is not relevant to the item type, it will be ignored.
        schema:
          type: string
          enum:
          - all
          - children
          - ancestors
      - name: item_detail_select_season
        in: query
        description: |
          Only relevant when loading show detail pages as these embed a detailed item in the main page entry.

          Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less
          likely to have any effect. While it may still be useful in some cases, most of the time the season
          selection will be dictated by the configuration of the rows scheduled on the show detail page.
          This parameter will only take effect if there are rows used to schedule episodes of a season, like
          D1,2,3, or if no rows have a value set for their `seasonOrder` custom field.

          Given a targeted show page, it can be useful to get the details of a child season. This option
          provides a means to return the `first` or `latest` season of a show embedded in the page.

          The `expand` parameter also works here so for example you could land on a show page and request the
          `item_detail_select_season=latest` along with `item_detail_expand=all`. This would then return the
          detail of the latest season with its list of child episode summaries, and also expand
          the detail of the show with its list of seasons summaries.
        schema:
          type: string
          enum:
          - first
          - latest
      - name: text_entry_format
        in: query
        description: |
          Only relevant to page entries of type `TextEntry`.

          Converts the value of a text page entry to the specified format.
        schema:
          type: string
          default: markdown
          enum:
          - markdown
          - html
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The page requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        301:
          description: |
            Returned if feature flag `cd` is set and item detail is requested of an item that has
            Custom Destination set to an External URL. The `Location` response header contains the URL.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvPage
  /itv/pinauthorization:
    post:
      tags:
      - itv
      description: |
        Provides authorization with parental control pin.

        Returns an array containing account token with Playback scope.

        Requires access token with Catalog scope.

        Pin must be a 4-digit string
      operationId: getAccountTokenWithPin
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of token request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvPinAuthRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvAuth
  /itv/plan/{platform}:
    post:
      tags:
      - itv
      description: Upgrades the plan for the current user.
      operationId: upgradePlan
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes). Only
          Stripe is supported
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of an upgrade request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvUpgradePlanRequest'
        required: true
      responses:
        200:
          description: Upgrade succeeded.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/plans/{platform}:
    get:
      tags:
      - itv
      description: Returns the plans available for specified payment platform.
      operationId: getPlans
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: List of available plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvPlans'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/profile:
    get:
      tags:
      - itv
      description: Returns the ITV profile object.
      operationId: getProfile
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The ITV profile object.
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    put:
      tags:
      - itv
      description: |
        Update ITV profile.

        The expected token scope is Settings.
      operationId: updateProfile
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: ITV profile object with updated values & ITV profile token.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvUpdateProfileRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Settings
      x-codegen-request-body-name: body
    x-serviceId: itvProfile
  /itv/profile/recommendation/list:
    get:
      tags:
      - itv
      description: Get the list of recommended items under the active profile.
      operationId: getRecommendedList
      parameters:
      - name: item_types
        in: query
        description: List of item types to filter the recommendation list
        style: form
        explode: false
        schema:
          type: array
          items:
            minLength: 1
            type: string
            description: item type name
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: recId
        in: query
        description: Amplitude or other providers recommendation id if aplicable.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - profileAuth:
        - Catalog
    x-serviceId: itvRecommendation
  /itv/profiletoken:
    post:
      tags:
      - itv
      description: Returns the ITV profile token.
      operationId: getItvProfileToken
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of token request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvProfileTokenRequest'
        required: true
      responses:
        200:
          description: The ITV profile token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvProfileToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/purchase/{platform}:
    get:
      tags:
      - itv
      description: Returns the details of current subscription for specified payment
        platform.
      operationId: getCurrentSubscription
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Details of current subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvCurrentSubscription'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    post:
      tags:
      - itv
      description: Confirms purchase and returns the details of purchased subscription
        for specified payment platform.
      operationId: confirmPurchase
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a purchase request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvPurchaseRequest'
        required: true
      responses:
        200:
          description: Details of purchased subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvPurchase'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    delete:
      tags:
      - itv
      description: |
        Cancel a plan subscription.

        A cancelled subscription will continue to be valid until the subscription
        expiry date or next renewal date.
      operationId: cancelSubscription
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a cancellation request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvCancelSubscriptionRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/purchase/{platform}/strong:
    post:
      tags:
      - itv
      description: Confirms purchase and returns the details of purchased subscription
        for specified payment platform.
      operationId: confirmPurchaseStrong
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a purchase request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvPurchaseStrongRequest'
        required: true
      responses:
        200:
          description: Details of purchased subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvPurchaseStrongResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/purchase/{platform}/withoffer:
    post:
      tags:
      - itv
      description: Confirms purchase and returns the details of purchased subscription
        for specified payment platform.
      operationId: confirmPurchaseWithOffer
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a purchase request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvPurchaseWithOfferRequest'
        required: true
      responses:
        200:
          description: Details of purchased subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvPurchaseWithOfferResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/recommendations/config:
    get:
      tags:
      - itv
      description: Get the list of reccomendation configurations.
      operationId: getRecommendationConfig
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of reccomendation configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvRecsConfigList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvRecommendation
  /itv/resubscribe/{platform}:
    post:
      tags:
      - itv
      description: Resubscription for a user.
      operationId: resubscribe
      parameters:
      - name: planId
        in: query
        description: The id of the plan to renew.
        required: true
        schema:
          type: string
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes). Only
          stripe is currently supported.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Success. The response body is the updated plan information.
          content:
            application/json:
              schema:
                type: object
        401:
          description: Invalid Rocket token.
          content: {}
        404:
          description: Customer not found or no active subscription.
          content: {}
        406:
          description: Invalid ITV token.
          content: {}
        409:
          description: Customer not already set for cancellation.
          content: {}
        500:
          description: Third party API internal server error.
          content: {}
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/roku/plans:
    get:
      tags:
      - itv
      description: Gets available Roku plans.
      operationId: getPlans
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Details of available Roku plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RokuPlans'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvRoku
  /itv/roku/transaction/{transactionid}:
    post:
      tags:
      - itv
      description: Sends request to execute specified transaction.
      operationId: executeTransaction
      parameters:
      - name: transactionid
        in: path
        description: The identifier of the Roku transaction (subscribe/upgrade/downgrade/cancellation).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of a transaction request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvRokuTransactionRequest'
        required: true
      responses:
        200:
          description: OK.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvRoku
  /itv/save-offer:
    get:
      tags:
      - itv
      description: Checks the provided coupon id for a user. Only Stripe platform
        is currently supported.
      operationId: getSaveOffer
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Avalable save offer plan, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvGetDiscountResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    post:
      tags:
      - itv
      description: Activates the discount for a user. Only Stripe platform is currently
        supported.
      operationId: activateSaveOffer
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: The coupon id to be checked.
        content:
          '*/*': {}
        required: true
      responses:
        204:
          description: Authentication  passes, the user has an active subscription
            and the coupon id is valid. The response body is the updated subscription
            object.
          content: {}
        401:
          description: Unauthorised. In the case of a token this can happen if the
            token is missing, invalid, or if the token bearer does not match the user
            in the path.
          content: {}
        404:
          description: The customer could not be found.The customer does not have
            an active subscription. The coupon could not be found.
          content: {}
        406:
          description: Invalid Token/Customer Not Eligible for Offer.
          content: {}
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: couponId
    x-serviceId: itvSubscription
  /itv/subscription/fullpricerenewal:
    get:
      tags:
      - itv
      description: Returns full price renewal state and reason for specific user.
      operationId: getFullPriceRenewal
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: full price renewal state and reason for specific user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvSubscriptionFullPriceRenewal'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/subscription/status/{platform}:
    get:
      tags:
      - itv
      description: Returns status of latest payment intent.
      operationId: getSubscriptionStatus
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Status of the latest payment intent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvSubscriptionStatusResponse'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/subscriptionstate:
    get:
      tags:
      - itv
      description: Returns the state of subscription for any payment platform.
      operationId: getSubscriptionState
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Details of current subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvSubscriptionState'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/upcominginvoice:
    get:
      tags:
      - itv
      description: Returns an upcoming invoice
      operationId: getUpcomingInvoice
      parameters:
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Avalable save offer plan, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvGetDiscountResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/updateIntent/strong/{platform}:
    put:
      tags:
      - itv
      description: Change payment method details.
      operationId: updatePaymentIntentStrong
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe only is currently
          supported).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of change card details request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvUpdateIntentStrongRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvUpdateIntentStrongResponse'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/updatePayment/strong/{platform}:
    put:
      tags:
      - itv
      description: Change payment method details.
      operationId: updatePaymentMethodStrong
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe only is currently
          supported).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Details of change card details request.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvUpdatePaymentStrongRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /itv/voucher/{planId}/{voucherId}:
    get:
      tags:
      - itv
      description: Checks the provided coupon id for a user. Only Stripe platform
        is currently supported.
      operationId: getVoucherById
      parameters:
      - name: voucherId
        in: path
        description: The identifier of the voucher.
        required: true
        schema:
          type: string
      - name: planId
        in: path
        description: The identifier of the plan.
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: Avalable voucher, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvVoucher'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
    x-serviceId: itvSubscription
  /itv/voucher/{platform}:
    post:
      tags:
      - itv
      description: Validates the coupon/voucher for specified payment platform.
      operationId: checkVoucher
      parameters:
      - name: platform
        in: path
        description: The identifier of the payment platform (stripe/itunes).
        required: true
        schema:
          type: string
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Coupon/voucher.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ItvVoucherRequest'
        required: true
      responses:
        200:
          description: Details of requested coupon/voucher.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItvVoucher'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - accountAuth:
        - Catalog
      x-codegen-request-body-name: body
    x-serviceId: itvSubscription
  /lists:
    get:
      tags:
      - content
      description: Returns an array of item lists with their first page of content
        resolved.
      operationId: getLists
      parameters:
      - name: ids
        in: query
        description: |
          A comma delimited list of item list identifiers.

          These can be list ids e.g. `14354,65473,3234`

          Or more complex sort/filter queries using pipes e.g.

          `14354|max_rating=AUOFLC-E|order=asc|order_by=year-added,65473|page_size=30,3234`

          _Note the id must always come first for each encoded list query_

          List parameters may be provide without the `param=` prefix e.g. `14354|genre:action`

          Only the following options can be present.
            - `order`
            - `order_by`
            - `max_rating`
            - `page_size`
            - `item_type`
            - `param`
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: order_by
        in: query
        description: What to order by.
        schema:
          type: string
          enum:
          - a-z
          - release-year
          - date-added
      - name: item_type
        in: query
        description: The item type to filter by. Defaults to unspecified.
        schema:
          type: string
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The array of item lists requested.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: list
  /lists/{id}:
    get:
      tags:
      - content
      description: Returns a list of items under the specified item list
      operationId: getList
      parameters:
      - name: id
        in: path
        description: The identifier of the list to load.
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The page of items to load. Starts from page 1.
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: page_size
        in: query
        description: The number of items to return in a page.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: order
        in: query
        description: The list sort order, either 'asc' or 'desc'.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: order_by
        in: query
        description: What to order by.
        schema:
          type: string
          enum:
          - a-z
          - release-year
          - date-added
      - name: param
        in: query
        description: The list parameter in format 'key:value', e.g. 'genre:action'.
        schema:
          type: string
      - name: item_type
        in: query
        description: The item type to filter by. Defaults to unspecified.
        schema:
          type: string
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The list of items requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: list
  /page:
    get:
      tags:
      - app
      description: |
        Returns a page with the specified id.

        If targeting the search page you must url encode the search term as a parameter
        using the `q` key. For example if your browser path looks like `/search?q=the`
        then what you pass to this endpoint would look like `/page?path=/search%3Fq%3Dthe`.
      operationId: getPage
      parameters:
      - name: path
        in: query
        description: The path of the page to load, e.g. '/movies'.
        required: true
        schema:
          type: string
      - name: list_page_size
        in: query
        description: The number of items to load when prefetching and paging each
          list in the page row.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 12
      - name: list_page_size_large
        in: query
        description: |
          The number of items to load when prefetching a continuous scroll list entry in a page.

          By default any list page entry with template pattern `/^CS\d+$/` will
          be considered a continuous scroll list.
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 50
      - name: max_list_prefetch
        in: query
        description: The maximum number of lists to prefetch in the page.
        schema:
          maximum: 15
          minimum: 0
          type: integer
          format: int32
          default: 2
      - name: item_detail_expand
        in: query
        description: |
          Only relevant when loading item detail pages as these embed a detailed item in the main page entry.

          If no value is specified no item dependencies are expanded.

          If 'children' is specified then the list of any direct children will be expanded. For example
          seasons of a show or episodes of a season.

          If 'all' is specified then the parent chain will be expanded along with any child list at each level.
          For example if an episode is specified then its season will be expanded and that season's episode list.
          The season will have its show expanded and the show will have its season list expanded.

          The 'all' options is useful when you deep link into a show/season/episode for the first time as
          it provides full context for navigating around the show page. Subsequent navigation around
          children of the show should only need to request expand of children.

          If 'ancestors' is specified then only the parent chain is included

          If an expand is specified which is not relevant to the item type, it will be ignored.
        schema:
          type: string
          enum:
          - all
          - children
          - ancestors
      - name: item_detail_select_season
        in: query
        description: |
          Only relevant when loading show detail pages as these embed a detailed item in the main page entry.

          Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less
          likely to have any effect. While it may still be useful in some cases, most of the time the season
          selection will be dictated by the configuration of the rows scheduled on the show detail page.
          This parameter will only take effect if there are rows used to schedule episodes of a season, like
          D1,2,3, or if no rows have a value set for their `seasonOrder` custom field.

          Given a targeted show page, it can be useful to get the details of a child season. This option
          provides a means to return the `first` or `latest` season of a show embedded in the page.

          The `expand` parameter also works here so for example you could land on a show page and request the
          `item_detail_select_season=latest` along with `item_detail_expand=all`. This would then return the
          detail of the latest season with its list of child episode summaries, and also expand
          the detail of the show with its list of seasons summaries.
        schema:
          type: string
          enum:
          - first
          - latest
      - name: text_entry_format
        in: query
        description: |
          Only relevant to page entries of type `TextEntry`.

          Converts the value of a text page entry to the specified format.
        schema:
          type: string
          default: markdown
          enum:
          - markdown
          - html
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The page requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        301:
          description: |
            Returned if feature flag `cd` is set and item detail is requested of an item that has
            Custom Destination set to an External URL. The `Location` response header contains the URL.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: page
  /plans/{id}:
    get:
      tags:
      - content
      description: Returns the details of a Plan with the specified id.
      operationId: getPlan
      parameters:
      - name: id
        in: path
        description: The identifier of the Plan to load.
        required: true
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: The Plan requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: subscription
  /register:
    post:
      tags:
      - registration
      description: |
        Register a new user, creating them an account.

        Registration, when successful, will return an array of access tokens so the user is
        immediately signed in.

        It returns Catalog and Commerce scoped tokens for both Account and Profile.
        The Commerce ones are intended to allow the purchase of a subscription plan
        in the step after registration, without the user being prompted to enter
        their username and password again.

        An email will also be sent with a link they need to click to confirm their
        email address. This confirmation is done via the /verify-email endpoint.
      operationId: register
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Registration details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvRegistration
  /request-password-reset:
    post:
      tags:
      - support
      description: |
        Request the password of an account's primary profile be reset.

        Should be called when a user has forgotten their password.

        This will send an email with a password reset link to the email address of the
        primary profile of an account.

        The link, once clicked, should take the user to the "reset-password" page of the
        website. Here they will enter their new password and submit to the /reset-password
        endpoint here, along with the password reset token provided in the original link.
      operationId: forgotPassword
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: Email address of account to request a password reset on.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetEmailRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvPassword
  /reset-password:
    post:
      tags:
      - support
      description: "When a user requests to reset their password via the /request-password-reset\
        \ endpoint, an\nemail is sent to the email address of the primary profile\
        \ of the account. This email contains a link\nwith a reset token as query\
        \ parameter. The link should take the user to the \"reset-password\"\npage\
        \ of the website.\n\nFrom the reset-password page a user should enter the\
        \ new password they wish to use. \nIt should then be submitted to this endpoint,\n\
        along with the reset token from the email link. \nThe token should be provided\
        \ in the body as resetToken property.\n"
      operationId: resetPassword
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      requestBody:
        description: ITV reset token from email link and a new password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      x-codegen-request-body-name: body
    x-serviceId: itvPassword
  /samsung-preview:
    get:
      tags:
      - itv
      description: |
        Returns public preview for Samsung based on the page '/samsung-preview' configured in PresentationManager.
        There is a hard limit of max 40 items to be returned. It splits evenly items count into the page rows, remaining items are added into the first row.
      operationId: getPublicPreview
      responses:
        200:
          description: The samsung public preview requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamsungPreview'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: itvSamsung
  /schedules:
    get:
      tags:
      - content
      description: "Returns schedules for a defined set of channels over a requested\
        \ period.\n\nSchedules are requested in hour blocks and returned grouped by\
        \ the channel\nthey belong to.\n\nFor example, to load 12 hours of schedules\
        \ for channels `4343` and `5234`,\non 21/2/2017 starting from 08:00.\n\n```\n\
        channels=4343,5234\ndate=2017-02-21\nhour=8\nduration=12\n```\n\nPlease remember\
        \ that `date` and `hour` combined represent a normal datetime, \nso they should\
        \ be converted to UTC on the client - this will help to avoid \nissues with\
        \ EPG schedules near midnight.\n\nIf a channel id is passed which doesn't\
        \ exist then this endpoint will\nreturn an empty schedule list for it. If\
        \ instead we returned 404,\nthis would invalidate all other channel schedules\
        \ in the same request\nwhich would be unfriendly for clients presenting these\
        \ channel schedules.\n"
      operationId: getSchedules
      parameters:
      - name: channels
        in: query
        description: The list of channel ids to get schedules for.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: date
        in: query
        description: |
          The date to target in ISO format, e.g. `2017-05-23` (converted to UTC - see main description).

          The base hour requested will belong to this date.
        required: true
        schema:
          type: string
          format: date
      - name: hour
        in: query
        description: "The base hour in the day, defined by the `date` parameter, you\
          \ wish to load schedules for \n(converted to UTC - see main description).\n\
          \nFrom 0 to 23, where 0 is midnight.\n"
        required: true
        schema:
          maximum: 23
          minimum: 0
          type: integer
          format: int32
      - name: duration
        in: query
        description: |
          The number of hours of schedules to load from the base `hour` parameter.

          This may be negative or positive depending on whether you want to load past or future schedules.

          Minimum value is -24, maximum is 24. A value of zero is invalid.
        required: true
        schema:
          maximum: 24
          minimum: -24
          type: integer
          format: int32
      - name: intersect
        in: query
        description: |
          Flag indicating whether schedules should intersect or be contained in the
          provided interval.

          If set to `true`, the result will contain all schedules where either
          schedule start time or end time touches the provided interval.

          If set to `false`, only schedules fully contained in the given period
          will be returned.
        schema:
          type: boolean
          default: false
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: |
            An array of schedule lists for each channel requested.

            The order of the channels will match the order of channel ids passed during the request.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemScheduleList'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: schedule
  /search:
    get:
      tags:
      - content
      description: Search the catalog of items and people.
      operationId: search
      parameters:
      - name: term
        in: query
        description: The search term to query.
        required: true
        schema:
          type: string
      - name: include
        in: query
        description: |
          By default people, movies and tv (shows + programs) will be included
          in the search results.

          If the `cas` feature flag is set, "other" items (`customAsset`s) will
          also be included by default

          If you don't want all of these types you can specifiy the specific
          includes you care about.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - tv
            - movies
            - people
            - other
      - name: group
        in: query
        description: |
          When this option is set, instead of all search result items being returned
          in a single list, they will instead be returned under two lists. One for
          movies and another for tv (shows + programs).

          if the `cas` feature flag is set, a third `other` list will be
          included containing `customAsset` results

          Default is undefined meaning items will be returned in a single list.

          The array of `people` results will always be separate from items.
        schema:
          type: boolean
      - name: max_results
        in: query
        description: The maximum number of results to return.
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: max_rating
        in: query
        description: The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
        schema:
          type: string
      - name: device
        in: query
        description: The type of device the content is targeting.
        schema:
          type: string
          default: web_browser
      - name: sub
        in: query
        description: The active subscription code.
        schema:
          type: string
      - name: segments
        in: query
        description: The list of segments to filter the response by.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        200:
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
    x-serviceId: search
  /verify-email:
    post:
      tags:
      - support
      description: |
        When an account is created an email is sent to the email address of the new account.
        This contains a link, which once clicked, verifies the email address of the account is correct.

        The link contains a token as a query parameter which should be passed as the authorization
        bearer token to this endpoint to complete email verification.

        The token has en expiry, so if the link is not clicked before it expires, the account holder
        may need to request a new verification email be sent. This can be done via the endpoint
        /account/request-email-verification.
      operationId: verifyEmail
      parameters:
      - name: ff
        in: query
        description: |
          The set of opt in feature flags which cause breaking changes to responses.

          While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
          may need to evolve over this time.

          These feature flags allow clients to select which response formats they expect and avoid breaking
          clients as these formats evolve under the current major version.

          ### Flags

          - `all` - Enable all flags. Useful for testing. _Don't use in production_.
          - `idp` - Dynamic item detail pages with schedulable rows.
          - `ldp` - Dynamic list detail pages with schedulable rows.
          - `hb` - Hubble formatted image urls.
          - `rpt` - Updated resume point threshold logic.
          - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
          - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
          - `cd` - Custom Destination support.
          - `sis` - Specials into show chainplay.

          See the `feature-flags.md` for available flag details.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - all
            - idp
            - ldp
            - hb
            - rpt
            - cas
            - lrl
            - cd
            - sis
      - name: lang
        in: query
        description: |
          Language code for the preferred language to be returned in the response.

          Parameter value is case-insensitive and should be
            - a valid 2 letter language code without region such as en, de
            - or with region such as en_us, en_au

          If undefined then defaults to 'en', unless the server has been configured
          with a custom default.

          See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        schema:
          type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        401:
          description: Invalid access token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        415:
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
        default:
          description: Service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
      security:
      - verifyEmailAuth: []
    x-serviceId: support
components:
  schemas:
    AccessToken:
      required:
      - expirationDate
      - refreshable
      - type
      - value
      type: object
      properties:
        value:
          type: string
          description: The token value used for authenticated requests.
        refreshable:
          type: boolean
          description: True if this token can be refreshed, false if not.
        expirationDate:
          type: string
          description: The timestamp this token expires.
          format: date-time
        type:
          type: string
          description: The type of the token.
          enum:
          - UserAccount
          - UserProfile
        accountCreated:
          type: boolean
          description: |
            When a `UserAccount` token is issued during a single-sign-on flow
            a user may have been automatically registered if they didn't
            have an account already. If this occurs then `accountCreated`
            will be `true`.
      x-emoji: ðŸ”‘
    Account:
      required:
      - id
      - marketingEnabled
      - pinEnabled
      - primaryProfileId
      - profiles
      - subscriptionCode
      - trackingEnabled
      type: object
      properties:
        id:
          type: string
          description: The id of the account.
        address:
          $ref: '#/components/schemas/Address'
        emailVerified:
          type: boolean
          description: |
            Whether the email address has been verified.

            Users who receive an emailed verification url click the link to verify their email address.
        firstName:
          type: string
          description: The first name of the account holder.
        lastName:
          type: string
          description: The last name of the account holder.
        trackingEnabled:
          type: boolean
          description: Whether usage tracking is associated with the account or anonymous.
        pinEnabled:
          type: boolean
          description: When an account level pin is defined this will be true.
        marketingEnabled:
          type: boolean
          description: Whether the account has opted in or out of marketing material.
        primaryProfileId:
          type: string
          description: The id of the primary profile.
        usedFreeTrial:
          type: boolean
          description: Whether the account has used up their free trial period of
            a plan.
        minRatingPlaybackGuard:
          type: string
          description: |
            The classification rating defining the minimum rating level a user should be
            forced to enter the account pin code for playback. Anything at this rating
            level or above will require the pin for playback.

            e.g. AUOFLC-MA15+

            If you want to disable this guard pass an empty string or `null`.
        defaultPaymentMethodId:
          type: string
          description: The id of the payment method to use by default for account
            transactions.
        defaultPaymentInstrumentId:
          type: string
          description: |
            The id of the payment instrument to use by default for account transactions.

             **DEPRECATED** The property `defaultPaymentMethodId` is now preferred.
          x-deprecated: Replaced with defaultPaymentMethodId
        subscriptions:
          type: array
          description: The list of subscriptions, if any, the account has signed up
            to.
          items:
            $ref: '#/components/schemas/Subscription'
        subscriptionCode:
          type: string
          description: |
            The active subscription code for an account.

            The value of this should be passed to any endpoints accepting a `sub` query parameter.
        profiles:
          type: array
          description: The list of profiles under this account.
          items:
            $ref: '#/components/schemas/ProfileSummary'
        entitlements:
          type: array
          description: The list of entitlements to playback specific items.
          items:
            $ref: '#/components/schemas/Entitlement'
        segments:
          type: array
          description: The segments an account has been placed under
          items:
            type: string
        isFirstTimeSubscriber:
          type: boolean
          description: Whether the account has the very first subscription.
      x-emoji: ðŸ‘¤
    AccountDevices:
      required:
      - devices
      - maxRegistered
      type: object
      properties:
        devices:
          type: array
          description: The array of registered playack devices.
          items:
            $ref: '#/components/schemas/Device'
        maxRegistered:
          type: integer
          description: |
            The maximum number of playback devices that can be registered
            under an account at a single time.

            If there is no maximum defined this value will be `-1`.
          format: int32
        registrationWindow:
          $ref: '#/components/schemas/DeviceRegistrationWindow'
        deregistrationWindow:
          $ref: '#/components/schemas/DeviceRegistrationWindow'
    AccountNonce:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: The nonce value.
    AccountTokenByCodeRequest:
      required:
      - code
      - id
      - scopes
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the device e.g. serial number.
        code:
          type: string
          description: The generated device authorization code.
        scopes:
          type: array
          description: The scope(s) of the token(s) required.
          items:
            type: string
            enum:
            - Catalog
            - Commerce
            - Settings
            - Playback
    AccountTokenRequest:
      required:
      - email
      - password
      - scopes
      type: object
      properties:
        email:
          type: string
          description: The email associated with the account.
        password:
          type: string
          description: The password associated with the account.
        scopes:
          type: array
          description: |
            The scope(s) of the tokens required.
            For each scope listed an Account and Profile token of that scope will be returned
          items:
            type: string
            enum:
            - Catalog
            - Commerce
            - Settings
            - Playback
        cookieType:
          type: string
          description: |
            If you specify a cookie type then a content filter cookie will be returned
            along with the token(s). This is only intended for web based clients which
            need to pass the cookies to a server to render a page based on the user's
            content filters e.g subscription code.

            If type `Session` the cookie will be session based.
            If type `Persistent` the cookie will have a medium term lifespan.
            If undefined no cookies will be set.
          enum:
          - Session
          - Persistent
      example:
        email: ""
        password: ""
        scopes:
        - Catalog
    AccountUpdateRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        firstName:
          type: string
          description: The first name of the account holder.
        lastName:
          type: string
          description: The last name of the account holder.
        trackingEnabled:
          type: boolean
          description: Whether usage tracking is associated with an account or anonymous.
        defaultPaymentMethodId:
          type: string
          description: The id of the payment method to use by default for account
            transactions.
        defaultPaymentInstrumentId:
          type: string
          description: |
            The id of the payment instrument to use by default for account transactions.

            **DEPRECATED** The property `defaultPaymentMethodId` is now preferred.
          x-deprecated: Replaced with defaultPaymentMethodId
        minRatingPlaybackGuard:
          type: string
          description: |
            The classification rating defining the minimum rating level a user should be
            forced to enter the account pin code for playback. Anything at this rating
            level or above will require the pin for playback.

            e.g. AUOFLC-MA15+

            If you want to disable this guard pass an empty string or `null`.
        segments:
          type: array
          description: The segments an account should be placed under
          items:
            type: string
    AddPaymentMethodRequest:
      required:
      - token
      - type
      type: object
      properties:
        token:
          type: string
          description: |
            The payment provider token representing a payment method, obtained by
            submitting payment method details to your third party provider.
        type:
          type: string
          description: The type of payment method.
          enum:
          - Card
        makeDefault:
          type: boolean
          description: "Whether this payment method should become the account default\
            \ when \nmaking purchases.\n\nNote that if this is the first payment method\
            \ of type Card being added to an\naccount then it will become the default\
            \ whether this property is true or false.\n"
    Address:
      type: object
      properties:
        addressLine1:
          type: string
          description: The first line of the street address.
        addressLine2:
          type: string
          description: The second line of the street address.
        city:
          type: string
          description: The city name.
        country:
          type: string
          description: The country name or code.
        postcode:
          type: string
          description: The postal or zip code.
        state:
          type: string
          description: The state name or abbreviation.
      x-emoji: "ðŸ\x8f "
    AppConfig:
      type: object
      properties:
        classification:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Classification'
          description: The map of classification ratings.
        subscription:
          $ref: '#/components/schemas/AppConfigSubscription'
        playback:
          $ref: '#/components/schemas/AppConfigPlayback'
        general:
          $ref: '#/components/schemas/AppConfigGeneral'
        navigation:
          $ref: '#/components/schemas/Navigation'
        sitemap:
          type: array
          items:
            $ref: '#/components/schemas/PageSummary'
        display:
          $ref: '#/components/schemas/AppConfigDisplay'
        i18n:
          $ref: '#/components/schemas/AppConfigI18n'
        linear:
          $ref: '#/components/schemas/AppConfigLinear'
      x-emoji: "âš™ï¸\x8f"
    AppConfigDisplay:
      required:
      - themes
      type: object
      properties:
        themes:
          type: array
          description: An array of globally configured themes.
          items:
            $ref: '#/components/schemas/Theme'
    AppConfigGeneral:
      type: object
      properties:
        websiteUrl:
          type: string
          description: The url of the primary website.
          format: uri
        gaToken:
          type: string
          description: A Google Analytics token to track applicaton user events.
        stripeKey:
          type: string
          description: The public Stripe key to use for payment transactions.
        facebookAppId:
          type: string
          description: The Facebook application id associated with an environment.
        itemImageTypes:
          type: object
          additionalProperties:
            type: string
          description: A map of default item image types where the key is the item
            types.
        currencyCode:
          type: string
          description: The currency code to target.
        customFields:
          type: object
          properties: {}
          description: A map of custom configuration fields.
        maxUserRating:
          type: integer
          description: The maximum value allowed for user ratings.
          format: int32
        mandatorySignIn:
          type: boolean
          description: Whether to require sign in for customers to access content.
        defaultTimeZone:
          type: string
          description: The default time zone of the site. e.g. "Etc/GMT"
    AppConfigI18n:
      required:
      - languages
      type: object
      properties:
        languages:
          type: array
          description: An array of available languages.
          items:
            $ref: '#/components/schemas/Language'
    AppConfigLinear:
      type: object
      properties:
        viewingWindowDaysAfter:
          type: integer
          description: Number of available upcoming day schedules.
          format: int32
        viewingWindowDaysBefore:
          type: integer
          description: Number of available day schedules in the past.
          format: int32
        scheduleCacheMaxAgeMinutes:
          type: integer
          description: The maximum minutes of schedule cache time.
          format: int32
    AppConfigPlayback:
      required:
      - chainPlayCountdown
      - chainPlaySqueezeback
      - chainPlayTimeout
      - heartbeatFrequency
      - viewEventPoints
      type: object
      properties:
        heartbeatFrequency:
          type: integer
          description: How often a heartbeat should be renewed during playback.
          format: int32
        viewEventPoints:
          type: array
          description: |
            An array of percentage points in which to fire off plabyack view events.
            For example a value of 0.5 would indicate that an event should be
            fired when the user is half way through the video.
            Often known as quartiles when four equaly spread event points.
          items:
            maximum: 1
            minimum: 0
            type: number
        chainPlaySqueezeback:
          type: integer
          description: |
            The number of seconds before the end of playback when the current video
            should be minimized and user options are presented within the video player.

            If set to 0 there will be no squeezeback.
          format: int32
        chainPlayTimeout:
          type: integer
          description: |
            The number of minutes of user inactivity before autoplay is paused.

            If set to 0 there will be no autoplay timeout.
          format: int32
        chainPlayCountdown:
          type: integer
          description: |
            The number of seconds before autoplay of next video.

            If set to 0 there will be no autoplay.
          format: int32
    AppConfigSubscription:
      type: object
      properties:
        plans:
          type: array
          description: The available public plans a user can subscribe to.
          items:
            $ref: '#/components/schemas/Plan'
    Bookmark:
      required:
      - creationDate
      - itemId
      type: object
      properties:
        itemId:
          type: string
          description: The id of the item bookmarked.
        creationDate:
          type: string
          description: The date the bookmark was created.
          format: date-time
      x-emoji: ðŸ”–
    BtPlanListItem:
      required:
      - ctaText
      - currency
      - description
      - headerText
      - heroText
      - id
      - longText
      - nickname
      - product
      - trialPeriodDays
      type: object
      properties:
        id:
          type: string
          description: The identifier of a plan.
        nickname:
          type: string
          description: The title of a plan.
        product:
          type: string
          description: The product of a plan.
        currency:
          type: string
          description: The currency a plan is offered in.
        amount:
          type: number
          description: The price of a plan. If a free plan then undefined.
          format: float
        interval:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        intervalCount:
          type: integer
          description: Given the `interval` this is how frequently it will run. e.g.
            every 2 weeks.
          format: int32
        trialPeriodDays:
          type: integer
          description: How many days a trial period runs for a plan. Only valid if
            `hasTrialPeriod` is true.
          format: int32
        description:
          type: string
          description: The textual description.
        heroText:
          type: string
          description: The textual description.
        ctaText:
          type: string
          description: The textual description.
        headerText:
          type: string
          description: The textual description.
        longText:
          type: string
          description: The textual description.
        termsAndConditionsStripe:
          type: string
        termsAndConditionsItunes:
          type: string
        ees07Title:
          type: string
        ees07PlanTitle:
          type: string
        ees07PlanDescription:
          type: string
        noThanksText:
          type: string
        switchingText:
          type: string
      x-emoji: ðŸ’³
    BtPlans:
      required:
      - plans
      type: object
      properties:
        plans:
          type: array
          description: The list of available plans.
          items:
            $ref: '#/components/schemas/BtPlanListItem'
    BtValidateTokenResponse:
      type: object
    ChangePasswordRequest:
      required:
      - password
      - profileToken
      type: object
      properties:
        password:
          type: string
          description: The new password for the account.
        profileToken:
          type: string
          description: The ITV profile token.
    ChangePinRequest:
      required:
      - pin
      type: object
      properties:
        pin:
          type: string
          description: The new pin to set.
    Classification:
      allOf:
      - $ref: '#/components/schemas/ClassificationSummary'
      - required:
        - images
        - level
        - system
        type: object
        properties:
          advisoryText:
            type: string
            description: Parental advisort text.
          level:
            type: integer
            description: |
              The level of this classification when compared with its siblings.
              A higher level means a greater restriction.
              Each classification in a system should have a unique level.
            format: int32
          system:
            type: string
            description: The parent system code of the classification.
          images:
            type: object
            additionalProperties:
              type: string
              format: uri
    ClassificationSummary:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
          description: The unique code for a classification.
        name:
          type: string
          description: The name of the classification for display.
      x-emoji: ðŸ”ž
    ContinueWatchingListData:
      type: object
      properties:
        itemInclusions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ContinueWatchingListDataExpansion'
          description: |
            Object where keys are itemIds for the items in the list and values are objects
            containing additional items (either episode/season/show) that were requested
            in the "include" query option.

            For example if you request the ContinueWatching list with "season" items in
            the list, you can specify `include=episode` and then the specific next episode
            will be returned in this object.
      description: List data for ContinueWatching List
    ContinueWatchingListDataExpansion:
      type: object
      properties:
        episode:
          $ref: '#/components/schemas/ItemSummary'
        season:
          $ref: '#/components/schemas/ItemSummary'
        show:
          $ref: '#/components/schemas/ItemSummary'
    Credit:
      allOf:
      - $ref: '#/components/schemas/Person'
      - required:
        - role
        type: object
        properties:
          role:
            type: string
            description: The type of role the credit performed, e.g. actor.
            enum:
            - actor
            - associateproducer
            - coactor
            - director
            - executiveproducer
            - filminglocation
            - guest
            - narrator
            - other
            - presenter
            - producer
            - productmanager
            - thememusicby
            - voice
            - writer
          character:
            type: string
            description: The name of the character.
    Device:
      required:
      - id
      - name
      - registrationDate
      - type
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this device e.g. serial number.
        name:
          type: string
          description: The human recognisable name for this device.
        registrationDate:
          type: string
          description: The date this device was registered.
          format: date-time
        type:
          type: string
          description: The device type e.g. web_browser.
      x-emoji: ðŸ“±
    DeviceAuthorizationCode:
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: The generated device authorization code.
    DeviceRegistrationRequest:
      required:
      - id
      - name
      - type
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this device e.g. serial number.
        name:
          type: string
          description: A human recognisable name for this device.
        type:
          type: string
          description: The device type e.g. web_browser.
    DeviceRegistrationWindow:
      required:
      - endDate
      - limit
      - periodDays
      - remaining
      - startDate
      type: object
      properties:
        periodDays:
          type: integer
          description: The number of days a de/registration period runs for.
          format: int32
        limit:
          type: integer
          description: The maximum de/registrations that can be made in a period.
          format: int32
        remaining:
          type: integer
          description: The remaining de/registrations that can be made in the current
            period.
          format: int32
        startDate:
          type: string
          description: |
            The start date of the current period.

            This is based on the earliest device de/registrations in the past N days, where
            N is defined by `periodDays`.

            If no device has been de/registered then start date will be from the current date.
          format: date-time
        endDate:
          type: string
          description: |
            The end date of the current period.

            This is based on the value of `startDate` plus the number of days defined by  `periodDays`.
          format: date-time
    EeBtEligibility:
      required:
      - eligible
      type: object
      properties:
        plan:
          type: string
          description: The identifier of a plan.
        source:
          type: string
          description: Stripe etc.
        eligible:
          type: boolean
          description: Whether or not user is eligible
    EeCreatePinRequest:
      required:
      - accessToken
      - msisdn
      type: object
      properties:
        msisdn:
          type: string
          description: The msisdn.
        accessToken:
          type: string
          description: EE API authorization Token received from GET /ee/token/create.
        trackingHeader:
          type: string
          description: trackingHeader
      example:
        msisdn: "447931234567"
        accessToken: wxg0fG4GQjBQVjAT0AhKxSkrxFbs
        trackingHeader: 1234E682-2C74-46A4-B8B3-5BBD3B3E165D
    EeCreatePinResponse:
      required:
      - pinReference
      - trackingHeader
      type: object
      properties:
        pinReference:
          type: string
          description: The pinReference.
        trackingHeader:
          type: string
          description: trackingHeader
    EeCreateTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: The authentication token for later use to call EE endpoints.
        tokenType:
          type: string
        expiresIn:
          type: number
    EeIdentityRequest:
      required:
      - accessToken
      - sessionId
      type: object
      properties:
        sessionId:
          type: string
          description: The sessionId returned in the ee/session response.
        accessToken:
          type: string
          description: EE API authorization Token received from GET /ee/token/create.
      example:
        sessionId: 7897E682-2C74-46A4-B8B3-5BBD3B3E165D
        accessToken: wxg0fG4GQjBQVjAT0AhKxSkrxFbs
    EeIdentityResponse:
      required:
      - msisdn
      - trackingHeader
      type: object
      properties:
        msisdn:
          type: string
          description: The msisdn.
        brand:
          type: string
          description: The operator brand.
        brandCode:
          type: string
          description: The brand code.
        trackingHeader:
          type: string
          description: trackingHeader
    EeOfferItem:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The identifier of an offer.
      x-emoji: ðŸ’³
    EeOffersRequest:
      required:
      - accessToken
      - msisdn
      type: object
      properties:
        msisdn:
          type: string
          description: The msisdn.
        accessToken:
          type: string
          description: EE API authorization Token received from GET /ee/token/create.
        trackingHeader:
          type: string
          description: trackingHeader.
      example:
        msisdn: "447931234567"
        accessToken: wxg0fG4GQjBQVjAT0AhKxSkrxFbs
        trackingHeader: 1234E682-2C74-46A4-B8B3-5BBD3B3E165D
    EeOffersResponse:
      required:
      - eligibleOffers
      type: object
      properties:
        eligibleOffers:
          type: array
          description: The list of eligible offers.
          items:
            $ref: '#/components/schemas/EeOfferItem'
    EePlanListItem:
      required:
      - ctaText
      - currency
      - description
      - headerText
      - heroText
      - id
      - longText
      - nickname
      - product
      - trialPeriodDays
      type: object
      properties:
        id:
          type: string
          description: The identifier of a plan.
        nickname:
          type: string
          description: The title of a plan.
        product:
          type: string
          description: The product of a plan.
        currency:
          type: string
          description: The currency a plan is offered in.
        amount:
          type: number
          description: The price of a plan. If a free plan then undefined.
          format: float
        interval:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        intervalCount:
          type: integer
          description: Given the `interval` this is how frequently it will run. e.g.
            every 2 weeks.
          format: int32
        trialPeriodDays:
          type: integer
          description: How many days a trial period runs for a plan. Only valid if
            `hasTrialPeriod` is true.
          format: int32
        description:
          type: string
          description: The textual description.
        heroText:
          type: string
          description: The textual description.
        ctaText:
          type: string
          description: The textual description.
        headerText:
          type: string
          description: The textual description.
        longText:
          type: string
          description: The textual description.
      x-emoji: ðŸ’³
    EePlans:
      required:
      - plans
      type: object
      properties:
        plans:
          type: array
          description: The list of available plans.
          items:
            $ref: '#/components/schemas/EePlanListItem'
    EeSessionIdRequest:
      required:
      - accessToken
      - clientIP
      type: object
      properties:
        clientIP:
          type: string
          description: The IP address of the requesting device.
        accessToken:
          type: string
          description: EE API authorization Token received from GET /ee/token/create.
      example:
        clientIP: 123.456.789
        accessToken: xxxDDxBoHnNG1qYWutsRqE0dHxxx
    EeSessionIdResponse:
      required:
      - sessionId
      type: object
      properties:
        sessionId:
          type: string
          description: The assigned SessionId.
    EeValidatePinRequest:
      required:
      - accessToken
      - pin
      - pinReference
      type: object
      properties:
        pinReference:
          type: string
          description: The pinReference.
        pin:
          type: string
          description: The pin entered by a user. 6 digits
        accessToken:
          type: string
          description: EE API authorization Token received from GET /ee/token/create.
        trackingHeader:
          type: string
          description: Tracking header to be able to search logs for a specific user
            requests. If not provided it will be generated. FE should store it for
            later user.
      example:
        pinReference: "9897222307534"
        pin: "123456"
        accessToken: wxg0fG4GQjBQVjAT0AhKxSkrxFbs
        trackingHeader: 1234E682-2C74-46A4-B8B3-5BBD3B3E165D
    EeValidatePinResponse:
      required:
      - trackingHeader
      type: object
      properties:
        pinValid:
          type: string
          description: The validation status.
        trackingHeader:
          type: string
          description: trackingHeader
    Entitlement:
      allOf:
      - $ref: '#/components/schemas/OfferRights'
      - type: object
        properties:
          activationDate:
            type: string
            description: The date of activation. If no date is defined the entitlement
              has not be activated.
            format: date-time
          expirationDate:
            type: string
            description: The date the entitlement expires.
            format: date-time
          creationDate:
            type: string
            description: The date the entitlement was created.
            format: date-time
          playCount:
            type: integer
            description: How many times the media has been played.
            format: int32
          remainingDownloads:
            type: integer
            description: How many more downloads of this media are available.
            format: int32
          itemId:
            type: string
            description: The id of the item this entitlement is for.
          itemType:
            type: string
            description: The type of item this entitlement is for.
            enum:
            - movie
            - show
            - season
            - episode
            - program
            - link
            - trailer
            - channel
            - customAsset
            x-enumEmoji:
              movie: ðŸŽ¬
              show: ðŸ“º
              season: ðŸ“º
              episode: ðŸ“º
              program: ðŸŽŸ
              link: ðŸ”—
              trailer: ðŸ–¥
              channel: ðŸ“º
          planId:
            type: string
            description: The id of the plan this entitlement is for.
          mediaDuration:
            type: integer
            description: The duration of the entitled media.
            format: int32
          classification:
            $ref: '#/components/schemas/ClassificationSummary'
        x-emoji: ðŸŽŸ
    ExclusionRule:
      type: object
      properties:
        description:
          type: string
        device:
          type: string
          description: The device type that the exclusion rules apply to.
        excludeAirplay:
          type: boolean
          description: Prevent airplay from an apple device.
        excludeChromecast:
          type: boolean
          description: Prevent chromecasting.
        excludeDelivery:
          type: string
          enum:
          - Stream
          - Download
          - StreamOrDownload
          - ProgressiveDownload
          - None
        excludeMinResolution:
          type: string
          enum:
          - SD
          - HD-720
          - HD-1080
          - HD-4K
          - External
          - Unknown
      description: Defines playback exclusion rules for an Offer or Entitlement.
      x-emoji: "â›”ï¸\x8f"
    ItemClipFile:
      required:
      - deliveryType
      - drm
      - format
      - height
      - language
      - name
      - resolution
      - url
      - width
      type: object
      properties:
        name:
          type: string
          description: The name of the media file.
        deliveryType:
          type: string
          description: The way in which the media file is delivered.
          enum:
          - Stream
          - Progressive
          - Download
        url:
          type: string
          description: The url to access the media file.
          format: uri
        drm:
          type: string
          description: The type of drm used to encrypt the media. 'None' if unencrypted.
        format:
          type: string
          description: The format the media was encoded in.
        resolution:
          type: string
          description: The resolution of the video media.
          enum:
          - SD
          - HD-720
          - HD-1080
          - HD-4K
          - External
          - Unknown
        width:
          type: integer
          description: The width of the video media.
          format: int32
        height:
          type: integer
          description: The height of the video media.
          format: int32
        channels:
          type: integer
          description: The number of audio channels.
          format: int32
        language:
          type: string
          description: The language code for the media, e.g. 'en'.
      x-emoji: ðŸ“€
    ItemClipFiles:
      required:
      - clips
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for an Item
        clips:
          type: array
          description: Array of item clip file.
          items:
            $ref: '#/components/schemas/ItemClipFile'
    ItemClipFilesList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: A list of items
          items:
            $ref: '#/components/schemas/ItemClipFiles'
      description: A list of items with its clip files.
      x-emoji: ðŸ“š
    ItemCustomMetadata:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: The name of the custom metadata.
        value:
          type: string
          description: The value of the custom metadata.
      description: Custom metadata associated with an item.
    ItemDetail:
      allOf:
      - $ref: '#/components/schemas/ItemSummary'
      - type: object
        properties:
          copyright:
            type: string
            description: Copyright information about this item
          distributor:
            type: string
            description: The distributor of this item.
          description:
            type: string
            description: The description of this item.
          customMetadata:
            type: array
            description: |
              An ordered list of custom name-value-pair item metadata.

              Usually displayed on an item detail page.
            items:
              $ref: '#/components/schemas/ItemCustomMetadata'
          genrePaths:
            type: array
            description: |
              An array of genre paths mapping to the values within the `genres` array from ItemSummary.
            items:
              type: string
          location:
            type: string
            description: |
              The optional location (e.g. city) of an event.
              Specific to a Program item type.
          venue:
            type: string
            description: |
              The optional venue of an event.
              Specific to a Program item type.
          eventDate:
            type: string
            description: |
              The optional date of an event.
              Specific to a Program item type.
            format: date-time
          credits:
            type: array
            description: A list of credits associated with this item.
            items:
              $ref: '#/components/schemas/Credit'
          seasons:
            $ref: '#/components/schemas/ItemList'
          episodes:
            $ref: '#/components/schemas/ItemList'
          season:
            $ref: '#/components/schemas/ItemDetail'
          show:
            $ref: '#/components/schemas/ItemDetail'
          trailers:
            type: array
            description: A list of trailers associated with this item.
            items:
              $ref: '#/components/schemas/ItemSummary'
    ItemDownloadable:
      required:
      - downloadable
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for an Item
        downloadable:
          type: boolean
          description: is the item downloadable?
      discriminator:
        propertyName: type
      x-emoji: ðŸ“˜
    ItemDownloadableList:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: A list of items
          items:
            $ref: '#/components/schemas/ItemDownloadable'
      description: A list of items downloadable data.
      x-emoji: ðŸ“š
    ItemDownloadableRequest:
      required:
      - ids
      type: object
      properties:
        ids:
          type: string
          description: Comma-separated list of AXIS item ids.
      example:
        ids: 1234,2345,3456
    ItemList:
      required:
      - id
      - items
      - paging
      - path
      - size
      type: object
      properties:
        id:
          type: string
          description: The id of this list
        title:
          type: string
          description: The title of this list
        description:
          type: string
          description: A full description of this list.
        shortDescription:
          type: string
          description: A short description of this list.
        tagline:
          type: string
          description: The tagline of the item.
        path:
          type: string
          description: The path of this list
        itemTypes:
          type: array
          description: The types of items in the list
          items:
            type: string
            enum:
            - movie
            - show
            - season
            - episode
            - program
            - link
            - trailer
            - channel
            - customAsset
            x-enumEmoji:
              movie: ðŸŽ¬
              show: ðŸ“º
              season: ðŸ“º
              episode: ðŸ“º
              program: ðŸŽŸ
              link: ðŸ”—
              trailer: ðŸ–¥
              channel: ðŸ“º
        size:
          type: integer
          description: The total size of the list
          format: int32
        items:
          type: array
          description: A list of items
          items:
            $ref: '#/components/schemas/ItemSummary'
        images:
          type: object
          additionalProperties:
            type: string
            format: uri
        parameter:
          type: string
          description: |-
            If this list is parameterized, then this contains the parameter of the list in the format `name:value`.
            For example the Movies Genre list will take a parameter `genre` with a given value. e.g. `genre:action` or `genre:drama`.
        paging:
          $ref: '#/components/schemas/Pagination'
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for a list.
        themes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
        listData:
          $ref: '#/components/schemas/ListData'
      description: A pageable list of items.
      x-emoji: ðŸ“š
    ItemPurchase:
      required:
      - id
      - ownership
      - resolution
      - title
      - type
      type: object
      properties:
        id:
          type: string
          description: The identifier of the purchased item.
        ownership:
          type: string
          description: The ownership of the purchased item.
          enum:
          - Subscription
          - Free
          - Rent
          - Own
          - None
        resolution:
          type: string
          description: The resolution of the purchased item.
          enum:
          - SD
          - HD-720
          - HD-1080
          - HD-4K
          - External
          - Unknown
        title:
          type: string
          description: The title of the purchased item.
        type:
          type: string
          description: The type of item purchased.
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
      x-emoji: ðŸ’°
    ItemSchedule:
      required:
      - channelId
      - endDate
      - id
      - startDate
      type: object
      properties:
        id:
          type: string
        channelId:
          type: string
          description: The id of the channel item this schedule belongs to.
        startDate:
          type: string
          description: The date and time this schedule starts.
          format: date-time
        endDate:
          type: string
          description: The date and time this schedule ends.
          format: date-time
        repeat:
          type: boolean
          description: True if this has been aired previously on the same channel.
        live:
          type: boolean
          description: True if this is a live event.
        featured:
          type: boolean
          description: True if this is a featured item schedule.
        blackout:
          type: boolean
          description: True if this schedule represents time when the channel is completely
            off air.
      x-emoji: "â\x8f³"
    ItemScheduleList:
      required:
      - channelId
      - endDate
      - schedules
      - startDate
      type: object
      properties:
        channelId:
          type: string
          description: The id of the channel the schedules belong to.
        startDate:
          type: string
          description: The date and time this list of schedules starts.
          format: date-time
        endDate:
          type: string
          description: The date and time this list of schedules ends.
          format: date-time
        schedules:
          type: array
          description: The list of item schedules.
          items:
            $ref: '#/components/schemas/ItemSchedule'
    ItemSummary:
      required:
      - id
      - path
      - title
      - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for an Item
        type:
          type: string
          description: The type of item
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        subtype:
          type: string
          description: |
            Subtype of the item. Mainly used to identify different types when `type`
            is `customAsset`
        title:
          type: string
          description: The display title of the item.
        shortDescription:
          type: string
          description: A truncated description of the item
        tagline:
          type: string
          description: The tagline of the item
        classification:
          $ref: '#/components/schemas/ClassificationSummary'
        advisoryText:
          type: string
          description: Advisory text about this item, related to the classification
        path:
          type: string
          description: The path to the detail page of this item. Can be used to load
            the item detail page via the /page endpoint.
        watchPath:
          type: string
          description: The path to watch this item, if the item is a watchable type,
            e.g. a `movie`, `program` and `episode`.
        scopes:
          type: array
          description: The scopes for this item
          items:
            type: string
        releaseYear:
          type: integer
          description: The year this item was released
          format: int32
        episodeCount:
          type: integer
          description: The number of episodes in the season, if the item is a season.
          format: int32
        availableEpisodeCount:
          type: integer
          description: The number of available episodes in the season, if the item
            is a season.
          format: int32
        availableSeasonCount:
          type: integer
          description: The number of available seasons in the show, if the item is
            a show.
          format: int32
        availableSpecialCount:
          type: integer
          description: The number of available specials in the item.
          format: int32
        seasonNumber:
          type: integer
          description: The number of a season, if the item is a season.
          format: int32
        episodeNumber:
          type: integer
          description: The number of an episode, if the item is an episode.
          format: int32
        episodeName:
          type: string
          description: The full name of an episode.
        showId:
          type: string
          description: The identifier of the show this item belongs to, if the item
            is a season or episode.
        showTitle:
          type: string
        seasonId:
          type: string
          description: The identifier of the season this item belongs to, if the item
            is an episode.
        channelShortCode:
          type: string
          description: The channel short code, if the item is a channel.
        hasClosedCaptions:
          type: boolean
          description: Whether closed captioning is available.
        averageUserRating:
          minimum: 0
          type: number
          description: |
            The average user rating.
            When based on user ratings from our system this will be out of 10.
          format: int32
        badge:
          type: string
          description: The badge this item has.
        genres:
          type: array
          description: The array of genres this item belongs to.
          items:
            type: string
        duration:
          minimum: 0
          type: integer
          description: The duration of the media in seconds.
          format: int32
        customId:
          type: string
          description: |
            A custom identifier for this item.
            For example the id for this item under a different content system.
        offers:
          type: array
          description: The array of available offers for this item.
          items:
            $ref: '#/components/schemas/Offer'
        images:
          type: object
          additionalProperties:
            type: string
            format: uri
        themes:
          type: array
          description: Gets themes associated with the item
          items:
            $ref: '#/components/schemas/Theme'
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for an item.
      discriminator:
        propertyName: type
      x-emoji: ðŸ“˜
    ItvAssignBtTokenRequest:
      required:
      - profileToken
      - token
      type: object
      properties:
        token:
          type: string
          description: The validated userToken.
        profileToken:
          type: string
          description: The ITV profile token
    ItvAssignMsisdnRequest:
      required:
      - eeProductId
      - msisdn
      - profileToken
      - trackingHeader
      type: object
      properties:
        msisdn:
          type: string
          description: The validated msisdn.
        profileToken:
          type: string
          description: The ITV profile token
        trackingHeader:
          type: string
          description: trackingHeader
        eeProductId:
          type: string
          description: Product id from /ee/offers
    ItvBillingHistory:
      required:
      - payment_history
      type: object
      properties:
        payment_history:
          type: array
          description: The array of objects with subscription payment details.
          items:
            $ref: '#/components/schemas/ItvBillingHistoryRecord'
      x-emoji: ðŸ’³
    ItvBillingHistoryRecord:
      required:
      - card
      - charge
      - invoice
      - subscription
      type: object
      properties:
        card:
          type: object
          properties: {}
          description: The card info.
        subscription:
          type: object
          properties: {}
          description: The object with subscription payment details.
        invoice:
          type: object
          properties: {}
          description: The object with invoice details.
        charge:
          type: object
          properties: {}
          description: The amount charged.
      x-emoji: ðŸ’³
    ItvBillingHistoryRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
    ItvCancelSubscriptionRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
    ItvCardDetails:
      required:
      - card_type
      - exp_month
      - exp_year
      - last4
      type: object
      properties:
        card_type:
          type: string
          description: The payment card type (Visa/Mastercard/etc).
        last4:
          type: string
          description: The last 4 digit of card number.
        exp_month:
          type: integer
          description: Expiry date month.
          format: int32
        exp_year:
          type: integer
          description: Expiry date year.
          format: int32
      x-emoji: ðŸ’³
    ItvChangeCardDetailsRequest:
      required:
      - cardToken
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
        cardToken:
          type: string
          description: The credit card token.
    ItvChangeEmailRequest:
      required:
      - email
      - profileToken
      type: object
      properties:
        email:
          type: string
          description: New email address for account/profile.
        profileToken:
          type: string
          description: The ITV profile token.
    ItvChangeMarketingRequest:
      required:
      - emailOptIn
      - profileToken
      type: object
      properties:
        emailOptIn:
          type: boolean
          description: Updated marketing preferences for account/profile.
        profileToken:
          type: string
          description: The ITV profile token.
    ItvCurrentSubscription:
      required:
      - cancelAtPeriodEnd
      - collectionMethod
      - created
      - currentPeriodEnd
      - currentPeriodStart
      - plan
      - status
      type: object
      properties:
        collectionMethod:
          type: string
          description: The description of payment collection method.
        cancelAtPeriodEnd:
          type: boolean
          description: The cancellation period end flag.
        created:
          type: integer
          description: The creation timestamp.
          format: int32
        currentPeriodEnd:
          type: integer
          description: The end of period timestamp.
          format: int32
        currentPeriodStart:
          type: integer
          description: The start of period timestamp.
          format: int32
        plan:
          type: object
          properties: {}
          description: The plan used during subsribing.
        status:
          type: string
          description: The status of subscription.
      x-emoji: ðŸ’°
    ItvDeleteAccountRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
    ItvEntitlement:
      required:
      - expiry
      - plan
      - source
      - subscriptionId
      type: object
      properties:
        card_type:
          type: string
          description: Start of subscription.
          format: date-time
        expiry:
          type: string
          description: Expiry of subscription.
          format: date-time
        source:
          type: string
          description: Source platform of purchase.
        subscriptionId:
          type: string
          description: Id of subscription.
        plan:
          type: object
          properties: {}
          description: Purchased plan data.
      x-emoji: ðŸ’³
    ItvEntitlementCancelation:
      required:
      - cancelled_at
      - itvId
      - source
      - subscriptionId
      type: object
      properties:
        itvId:
          type: string
          description: Itv internal id.
        source:
          type: string
          description: Source platform of cancelation.
        cancelled_at:
          type: string
          description: Cancelation datetime.
          format: date-time
        subscriptionId:
          type: string
          description: Id of subscription.
      x-emoji: ðŸ’³
    ItvEntitlementCurrent:
      required:
      - source
      type: object
      properties:
        source:
          type: string
          description: "one of â€œitunesâ€\x9d, â€œstripeâ€\x9d, â€œamazonâ€\x9d,\
            \ â€œgoogleâ€\x9d"
    ItvEntitlementPlan:
      required:
      - cost
      - interval
      - trialLength
      - type
      type: object
      properties:
        type:
          type: string
          description: Type of the plan.
        interval:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        cost:
          type: integer
          description: Source platform of purchase.
          format: int32
        trialLength:
          type: integer
          description: Given the `interval` this is how frequently it will run. e.g.
            every 2 weeks.
          format: int32
      x-emoji: ðŸ’³
    ItvEntitlementsHistory:
      required:
      - cancellations
      - entitlements
      type: object
      properties:
        entitlements:
          type: array
          description: The results of availability checks.
          items:
            $ref: '#/components/schemas/ItvEntitlement'
        cancellations:
          type: array
          description: The results of availability checks.
          items:
            $ref: '#/components/schemas/ItvEntitlementCancelation'
      x-emoji: ðŸ’³
    ItvFeatureFlag:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Is the feature enabled?
        flag:
          type: string
          description: Feature flag data.
      x-emoji: ðŸ’³
    ItvGetCardDetailsRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
    ItvGetDiscountResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The if of a discount for a user.
        nickname:
          type: string
          description: Discount nickname.
        longDescription:
          type: string
          description: Long description
        shortDescription:
          type: string
          description: Short description
        headline:
          type: string
          description: Headline
        description:
          type: string
          description: Description
        currency:
          type: string
          description: Payment currency.
        offerdurationperiod:
          type: string
          description: How long the descount will be valid for.
        initialCost:
          type: number
          description: The initial cost.
      x-emoji: ðŸ’³
    ItvGooglePaySubscriptionRequest:
      required:
      - purchaseToken
      - subscriptionItem
      type: object
      properties:
        purchaseToken:
          type: string
          description: the unique identifier for this purchase
        subscriptionItem:
          type: string
          description: the SKU of the item from the play console
    ItvHadEntitlement:
      required:
      - hasHadEntitlements
      type: object
      properties:
        hasHadEntitlements:
          type: boolean
          description: whether the user has been previously entitlement
    ItvPinAuthRequest:
      required:
      - pin
      type: object
      properties:
        pin:
          type: string
          description: The 4-digit parental control pin.
        scopes:
          type: array
          description: The scope(s) of the token(s) required.
          items:
            type: string
            enum:
            - Catalog
            - Commerce
            - Settings
            - Playback
        cookieType:
          type: string
          description: |
            If you specify a cookie type then a content filter cookie will be returned
            along with the token(s). This is only intended for web based clients which
            need to pass the cookies to a server to render a page based on the user's
            content filters e.g subscription code.

            If type `Session` the cookie will be session based.
            If type `Persistent` the cookie will have a medium term lifespan.
            If undefined no cookies will be set.
          enum:
          - Session
          - Persistent
    ItvPlanListItem:
      required:
      - amount
      - currency
      - description
      - id
      - interval
      - intervalCount
      - nickname
      - product
      type: object
      properties:
        id:
          type: string
          description: The identifier of a plan.
        nickname:
          type: string
          description: The title of a plan.
        amount:
          type: number
          description: The price of a plan. If a free plan then undefined.
          format: float
        currency:
          type: string
          description: The currency a plan is offered in.
        interval:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        intervalCount:
          type: integer
          description: Given the `interval` this is how frequently it will run. e.g.
            every 2 weeks.
          format: int32
        trialPeriodDays:
          type: integer
          description: How many days a trial period runs for a plan. Only valid if
            `hasTrialPeriod` is true.
          format: int32
        product:
          type: string
          description: The product description.
        description:
          type: string
          description: The textual description.
        switchingText:
          type: string
          description: The text to switch for.
        savingLabel:
          type: string
          description: The saving label.
      x-emoji: ðŸ’³
    ItvPlans:
      required:
      - plans
      type: object
      properties:
        plans:
          type: array
          description: The list of available plans.
          items:
            $ref: '#/components/schemas/ItvPlanListItem'
    ItvProfileToken:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
      x-emoji: ðŸ”‘
    ItvProfileTokenRequest:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: The password.
    ItvPurchase:
      required:
      - planId
      type: object
      properties:
        planId:
          type: string
          description: The identifier of subscription plan.
        subscriptionId:
          type: string
          description: The identifier of subscription in payment system.
        customerId:
          type: string
          description: The identifier of user in payment system.
      x-emoji: ðŸ’°
    ItvPurchaseRequest:
      required:
      - cardToken
      - planId
      - profileToken
      type: object
      properties:
        planId:
          type: string
          description: The identifier of the plan to purchase.
        profileToken:
          type: string
          description: The ITV profile token.
        cardToken:
          type: string
          description: The credit card token.
        voucher:
          type: string
          description: A coupon/voucher for a discount.
    ItvPurchaseStrongRequest:
      required:
      - planId
      - profileToken
      type: object
      properties:
        planId:
          type: string
          description: The identifier of the plan to purchase.
        profileToken:
          type: string
          description: The ITV profile token.
        paymentMethodId:
          type: string
          description: A paymentMethodId from Stripe.
        voucher:
          type: string
          description: A coupon/voucher for a discount.
        paymentMethodFromToken:
          type: string
          description: A paymentMethodFromToken.
    ItvPurchaseStrongResponse:
      type: object
      properties:
        planId:
          type: string
          description: The identifier of subscription plan.
        subscriptionId:
          type: string
          description: The identifier of subscription in payment system.
        customerId:
          type: string
          description: The identifier of user in payment system.
        intentId:
          type: string
          description: IntentId.
        intentType:
          type: string
          description: intentType.
        clientSecret:
          type: string
          description: clientSecret.
        status:
          type: string
          description: Status.
      x-emoji: ðŸ’°
    ItvPurchaseWithOfferRequest:
      required:
      - couponId
      - planId
      - profileToken
      type: object
      properties:
        planId:
          type: string
          description: The identifier of the plan to purchase.
        profileToken:
          type: string
          description: The ITV profile token.
        paymentMethodId:
          type: string
          description: A paymentMethodId from Stripe.
        couponId:
          type: string
          description: A coupon/voucher for a discount. Can be retrieved from GET
            itv/voucher/{platform} endpoint
        paymentMethodFromToken:
          type: string
          description: A paymentMethodFromToken.
    ItvPurchaseWithOfferResponse:
      type: object
      properties:
        subscriptionId:
          type: string
          description: The identifier of subscription in payment system.
        customerId:
          type: string
          description: The identifier of user in payment system.
        intentId:
          type: string
          description: IntentId.
        intentType:
          type: string
          description: intentType.
        clientSecret:
          type: string
          description: clientSecret.
        status:
          type: string
          description: Status.
        paymentMethodId:
          type: string
          description: Payment Method ID
      x-emoji: ðŸ’°
    ItvRecsConfig:
      required:
      - rec_id
      - segment
      type: object
      properties:
        segment:
          type: string
          description: The segment of the recommendation
        rec_id:
          type: string
          description: recommendation ID
      description: Recommendation config.
      x-emoji: ðŸ“š
    ItvRecsConfigList:
      required:
      - default
      - mappings
      type: object
      properties:
        default:
          type: string
          description: The default recommendation id for fallback purpose
        mappings:
          type: array
          description: A list of segmentation tags and recommendation IDs
          items:
            $ref: '#/components/schemas/ItvRecsConfig'
      description: A list of recommendation configs.
      x-emoji: ðŸ“š
    ItvRokuTransactionRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
    ItvSubscriptionFullPriceRenewal:
      required:
      - fullPriceRenewal
      - reason
      type: object
      properties:
        fullPriceRenewal:
          type: boolean
          description: full price renewal state.
        reason:
          type: string
          description: reason of full price renewal state.
    ItvSubscriptionState:
      required:
      - effective_entitlements
      - failed_availability_checks
      - purchased
      - source
      type: object
      properties:
        failed_availability_checks:
          type: array
          description: The results of availability checks.
          items:
            type: string
        effective_entitlements:
          type: array
          description: The array of entitlement objects.
          items:
            $ref: '#/components/schemas/ItvEntitlement'
        source:
          type: string
          description: The payment provider (stripe/itunes)
        purchased:
          type: array
          description: The array of entitlement names.
          items:
            type: string
      x-emoji: ðŸ’³
    ItvSubscriptionStatusResponse:
      required:
      - is_active
      type: object
      properties:
        is_active:
          type: boolean
          description: Defines whether last payment intent was successful or not.
    ItvUpdateIntentStrongRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
        paymentMethodId:
          type: string
          description: The paymentMethodId from Stripe.
        paymentMethodFromToken:
          type: string
          description: A paymentMethodFromToken.
    ItvUpdateIntentStrongResponse:
      type: object
      properties:
        intentId:
          type: string
          description: IntentId.
        intentType:
          type: string
          description: IntentType.
        clientSecret:
          type: string
          description: ClientSecret.
        status:
          type: string
          description: Status.
      x-emoji: ðŸ’°
    ItvUpdatePaymentStrongRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
        paymentMethodId:
          type: string
          description: The paymentMethodId from Stripe.
        paymentMethodFromToken:
          type: string
          description: A paymentMethodFromToken.
    ItvUpdateProfileRequest:
      required:
      - profileToken
      type: object
      properties:
        profileToken:
          type: string
          description: The ITV profile token.
        email:
          type: string
          description: The email address.
        postcode:
          type: string
          description: The postal code.
        dateOfBirth:
          type: string
          description: The date of birth.
        lastName:
          type: string
          description: First name.
        firstName:
          type: string
          description: Last name.
        title:
          type: string
          description: The title.
    ItvUpgradePlanRequest:
      required:
      - planId
      type: object
      properties:
        planId:
          type: string
          description: The identifier of the plan to purchase.
    ItvVoucher:
      required:
      - display
      - id
      - links
      - offerType
      type: object
      properties:
        id:
          type: string
          description: The coupon/voucher.
        offerType:
          type: string
          description: The voucher offer type.
          enum:
          - stripe
          - talon one
        display:
          $ref: '#/components/schemas/ItvVoucherDisplay'
        links:
          $ref: '#/components/schemas/ItvVoucherLinks'
      x-emoji: ðŸ’°
    ItvVoucherDisplay:
      type: object
      properties:
        discountPrice:
          type: string
          description: Discount price.
        shortDescription:
          type: string
          description: Short description.
        longDescription:
          type: string
          description: Long description.
        headlineLabel:
          type: string
          description: Headline label.
        percentOff:
          type: number
          description: Percent off.
          format: float
        currency:
          type: string
          description: Currency.
        duration:
          type: string
          description: Duration.
        durationInMonths:
          type: number
          description: Duration in months.
          format: integer
        initialCost:
          type: number
          description: InitialCost.
          format: float
        savingLabel:
          type: string
          description: SavingLabel.
    ItvVoucherLinks:
      required:
      - redeem
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/ItvVoucherLinksHref'
        redeem:
          $ref: '#/components/schemas/ItvVoucherLinksHref'
    ItvVoucherLinksHref:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          description: The voucher link.
    ItvVoucherRequest:
      required:
      - voucher
      type: object
      properties:
        voucher:
          type: string
          description: The voucher.
    Language:
      required:
      - code
      - label
      - title
      type: object
      properties:
        code:
          type: string
          description: |
            The ISO language code of the language e.g. "en-US".
            See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        label:
          type: string
          description: Display label for the language.
        title:
          type: string
          description: Display title for the language.
      x-emoji: ðŸŒŽ
    ListData:
      type: object
      properties:
        ContinueWatching:
          $ref: '#/components/schemas/ContinueWatchingListData'
      description: |
        Extra data to accompany ItemList content. The (single) key in the object is
        the list name and the data changes depending on the list
    MediaFile:
      required:
      - deliveryType
      - drm
      - format
      - height
      - language
      - name
      - resolution
      - url
      - width
      type: object
      properties:
        name:
          type: string
          description: The name of the media file.
        deliveryType:
          type: string
          description: The way in which the media file is delivered.
          enum:
          - Stream
          - Progressive
          - Download
        url:
          type: string
          description: The url to access the media file.
          format: uri
        drm:
          type: string
          description: The type of drm used to encrypt the media. 'None' if unencrypted.
        format:
          type: string
          description: The format the media was encoded in.
        resolution:
          type: string
          description: The resolution of the video media.
          enum:
          - SD
          - HD-720
          - HD-1080
          - HD-4K
          - External
          - Unknown
        width:
          type: integer
          description: The width of the video media.
          format: int32
        height:
          type: integer
          description: The height of the video media.
          format: int32
        channels:
          type: integer
          description: The number of audio channels.
          format: int32
        language:
          type: string
          description: The language code for the media, e.g. 'en'.
      x-emoji: ðŸ“€
    NavContent:
      type: object
      properties:
        title:
          type: string
          description: The title of the embedded navigation content.
        list:
          $ref: '#/components/schemas/ItemList'
        imageType:
          type: string
          description: |
            The image type to target when rendering items of the list.

            e.g wallpaper, poster, hero3x1, logo.
    NavEntry:
      required:
      - depth
      type: object
      properties:
        depth:
          minimum: 0
          type: integer
          description: The depth of the NavEntry (top level is 0)
          format: int32
        label:
          type: string
          description: The text label for this nav entry.
        icon:
          type: string
          description: The icon for this nav entry.
        path:
          type: string
          description: |
            The path this nav entry links to.
            May be undefined if the nav entry is not clickable e.g. a nav heading.
            If the value begins with `http` then it's an external url.
        content:
          $ref: '#/components/schemas/NavContent'
        children:
          type: array
          description: Child nav entries.
          items:
            $ref: '#/components/schemas/NavEntry'
        featured:
          type: boolean
          description: |
            True if this is a featured menu item.

            Featured menu items may have a more prominent presentation than others in the navigation.
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for a nav entry.
    Navigation:
      required:
      - header
      type: object
      properties:
        header:
          type: array
          description: The header navigation.
          items:
            $ref: '#/components/schemas/NavEntry'
        mobile:
          $ref: '#/components/schemas/NavEntry'
        footer:
          $ref: '#/components/schemas/NavEntry'
        account:
          $ref: '#/components/schemas/NavEntry'
        copyright:
          type: string
          description: Copyright information.
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for navigation.
    NextPlaybackItem:
      required:
      - sourceItemId
      type: object
      properties:
        sourceItemId:
          type: string
          description: The id of the item used to determine the next item to play.
        firstWatchedDate:
          type: string
          description: |
            Time when the item corresponding to the itemId passed in by the client was
            first watched by the user. Will be `undefined` if the user has never
            watched the item.

            It can be used to identify the scenario where the user has never watched a
            show and we are suggesting they watch the first episode (i.e. it is
            missing in this scenario)

            **This will only be populated when a `showId` is passed in**
          format: date-time
        lastWatchedDate:
          type: string
          description: |
            Time when the item corresponding to the itemId passed in by the client was
            last watched by the user. Will be `undefined` if the user has never
            watched the item.

            It can be used to identify the scenario where the user has never watched a
            show and we are suggesting they watch the first episode (i.e. it is
            missing in this scenario)

            **This will only be populated when a `showId` is passed in**
          format: date-time
        suggestionType:
          type: string
          description: |
            Field indicating the type or reason behind the suggestion.

            Id Type   | Show Watched Status| Value            | Description
            ----------|--------------------|------------------|---------------------------------
            showId    | Unwatched          | StartWatching    |
            showId    | Completely watched | RestartWatching  |
            showId    | Partly watched     | ContinueWatching | Suggested episode partly watched
            showId    | Partly watched     | Sequential       | Suggested episode unwatched
            episodeId | Any                | Sequential       | Next episode in show
          enum:
          - StartWatching
          - ContinueWatching
          - RestartWatching
          - Sequential
          - None
        next:
          $ref: '#/components/schemas/ItemDetail'
    Offer:
      allOf:
      - $ref: '#/components/schemas/OfferRights'
      - required:
        - availability
        - price
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          price:
            type: number
            format: float
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          availability:
            type: string
            enum:
            - Available
            - ComingSoon
          subscriptionCode:
            type: string
            description: The code of the subscription this offer is offered under,
              if any.
          customFields:
            type: object
            properties: {}
            description: A map of custom fields defined by a curator for an offer.
        x-emoji: ðŸ’°
    OfferRights:
      required:
      - deliveryType
      - ownership
      - resolution
      - scopes
      type: object
      properties:
        deliveryType:
          type: string
          enum:
          - Stream
          - Download
          - StreamOrDownload
          - ProgressiveDownload
          - None
        scopes:
          type: array
          items:
            type: string
        resolution:
          type: string
          enum:
          - SD
          - HD-720
          - HD-1080
          - HD-4K
          - External
          - Unknown
        ownership:
          type: string
          enum:
          - Subscription
          - Free
          - Rent
          - Own
          - None
        maxPlays:
          type: integer
          description: The maximum number of allowed plays.
          format: int32
        maxDownloads:
          type: integer
          description: The maximum number of allowed downloads.
          format: int32
        rentalPeriod:
          type: integer
          description: The length of time in minutes which the rental will last once
            purchased.
          format: int32
        playPeriod:
          type: integer
          description: The length of time in minutes which the rental will last once
            played for the first time.
          format: int32
        exclusionRules:
          type: array
          description: Any specific playback exclusion rules.
          items:
            $ref: '#/components/schemas/ExclusionRule'
      description: The base type for both Offer and Entitlement.
      x-emoji: ðŸŽŸ
    Page:
      allOf:
      - $ref: '#/components/schemas/PageSummary'
      - required:
        - entries
        type: object
        properties:
          metadata:
            $ref: '#/components/schemas/PageMetadata'
          entries:
            type: array
            description: Entries of a page
            items:
              $ref: '#/components/schemas/PageEntry'
          customFields:
            type: object
            properties: {}
            description: A map of custom fields defined by a curator for a page.
          item:
            $ref: '#/components/schemas/ItemDetail'
          list:
            $ref: '#/components/schemas/ItemList'
          themes:
            type: array
            items:
              $ref: '#/components/schemas/Theme'
    PageEntry:
      required:
      - id
      - template
      - title
      - type
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for a page entry.
        type:
          type: string
          description: The type of PageEntry. Used to help identify what type of content
            will be presented.
          enum:
          - ItemEntry
          - ItemDetailEntry
          - ListEntry
          - ListDetailEntry
          - UserEntry
          - TextEntry
          - ImageEntry
          - CustomEntry
          - PeopleEntry
          x-enumEmoji:
            ItemEntry: ðŸ“˜
            ItemDetailEntry: ðŸ“˜
            ListEntry: ðŸ“š
            ListDetailEntry: ðŸ“š
            UserEntry: ðŸ‘¤
            TextEntry: "ðŸ“\x9d"
            ImageEntry: ðŸŒ…
            CustomEntry: "âš™ï¸\x8f"
            PeopleEntry: ðŸ‘±
        title:
          type: string
          description: The name of the Page Entry.
        template:
          type: string
          description: Template type used to present the content of the PageEntry.
        item:
          $ref: '#/components/schemas/ItemSummary'
        list:
          $ref: '#/components/schemas/ItemList'
        text:
          type: string
          description: If 'type' is 'TextEntry' then this is the text to be represented.
        people:
          type: array
          description: If 'type' is 'PeopleEntry' then this is the array of people
            to present.
          items:
            $ref: '#/components/schemas/Person'
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for a page entry.
        images:
          type: object
          additionalProperties:
            type: string
            format: uri
          description: |
            The images for the page entry if any.

            For example the images of an `ImageEntry`.
      description: |
        Represents an entry of a Page.
        Defines what specific piece of content should be presented e.g. an Item or ItemList.
        Also defines what visual template should be used to render that content.
      x-emoji: ðŸ“‘
    PageMetadata:
      type: object
      properties:
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        segments:
          type: array
          items:
            type: string
      description: Metadata associated with a page. Primarily intended for SEO usage.
    PageSummary:
      required:
      - id
      - isStatic
      - isSystemPage
      - path
      - template
      - title
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the page.
        title:
          type: string
          description: Title of the page.
        path:
          type: string
          description: Unique path for the page.
        key:
          type: string
          description: Key used to lookup a known page.
        template:
          type: string
          description: Identifier for of the page template to render this page.
        isStatic:
          type: boolean
          description: |
            True if this page is static and doesn't have any dynamic content to load.

            Static pages don't need to go back to the page endpoint to load page content
            instead the page summary loaded with the sitemap should be enough to determine
            the page template type and render based on this.
        isSystemPage:
          type: boolean
          description: |
            True if this page is a system page type.

            **DEPRECATED** This property doesn't have any real use in client applications
            anymore so shouldn't be used. It especially shouldn't be used to determine if
            a page is static or not. Use the `isStatic` property instead.
          x-deprecated: Replaced with isStatic
      x-emoji: ðŸ“ƒ
    Pagination:
      required:
      - page
      - total
      type: object
      properties:
        next:
          type: string
          description: Path to load next page of data, or null if not available
        previous:
          type: string
          description: Path to load previous page of data, or null if not available.
        page:
          minimum: 0
          type: integer
          description: |
            The current page number.

            A value of 0 indicates that the fist page has not yet been loaded. This is
            useful when wanting to return the paging metadata to indicate how to
            load in the first page.
          format: int32
        size:
          minimum: -1
          type: integer
          description: |
            The current page size.

            A value of -1 indicates that the size has not yet been determined. This may
            arise when embedding secure list pagination info in a page which must be cached
            by a CDN. For example a Bookmarks list.
          format: int32
        total:
          minimum: -1
          type: integer
          description: |
            The total number of pages available given the current page size.

            A value of -1 indicates that the total has not yet been determined. This may
            arise when embedding secure list pagination info in a page which must be cached
            by a CDN. For example a Bookmarks list.
          format: int32
        authorization:
          $ref: '#/components/schemas/PaginationAuth'
        options:
          $ref: '#/components/schemas/PaginationOptions'
    PaginationAuth:
      required:
      - scope
      - type
      type: object
      properties:
        type:
          type: string
          description: The token type required to load the list.
          enum:
          - UserAccount
          - UserProfile
        scope:
          type: string
          description: The token scope required.
          enum:
          - Catalog
          - Commerce
          - Settings
    PaginationOptions:
      type: object
      properties:
        pageSize:
          type: integer
          description: The number of items to return in a list page.
          format: int32
        order:
          type: string
          description: The applied sort order if any.
          enum:
          - asc
          - desc
        orderBy:
          type: string
          description: The applied sort ordering property if any.
          enum:
          - a-z
          - release-year
          - date-added
        maxRating:
          type: string
          description: The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'.
        itemType:
          type: string
          description: Specific item type filter.
          enum:
          - movie
          - show
          - season
          - episode
          - program
          - link
          - trailer
          - channel
          - customAsset
          x-enumEmoji:
            movie: ðŸŽ¬
            show: ðŸ“º
            season: ðŸ“º
            episode: ðŸ“º
            program: ðŸŽŸ
            link: ðŸ”—
            trailer: ðŸ–¥
            channel: ðŸ“º
        completed:
          type: boolean
          description: |
            Items filtered by whether they've been fully watched or not.

            Only available on the `/account/profile/watched/list` endpoint currently.
    PasswordResetEmailRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: The email address of the primary account profile to reset the
            password for.
    PasswordResetRequest:
      required:
      - password
      - resetToken
      type: object
      properties:
        resetToken:
          type: string
          description: The ITV reset token.
        password:
          type: string
          description: The new password for the account.
    PaymentMethod:
      required:
      - description
      - id
      - type
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of a payment method.
        description:
          type: string
          description: |
            A short description of a payment method.

            If the payment method is of type `Wallet` this will be "My Wallet"

            For `Card` type payment methods the format of this description may differ
            depending on the payment gateway in use. In the case of Stripe, this will
            be in the format "Visa (**** 4242, exp 08/19)"
        type:
          type: string
          description: The type of payment method.
          enum:
          - Card
          - Wallet
        brand:
          type: string
          description: The brand of the card if the payment method is a card.
          enum:
          - Visa
          - MasterCard
          - AmericanExpress
          - Other
        balance:
          type: number
          description: The balance of the wallet if the payment method is a wallet.
          format: float
        currency:
          type: string
          description: The currency code of the wallet if the payment method is a
            wallet.
        expiryMonth:
          type: number
          description: The expiry month of the card if the payment method is a card.
          format: int32
        expiryYear:
          type: number
          description: The expiry year of the card if the payment method is a card.
          format: int32
        lastDigits:
          type: number
          description: |
            The last digits of the card if the payment method is a card.
            Depending on the payment gateway in use this value may be undefined.
          format: int32
      x-emoji: ðŸ’³
    Person:
      required:
      - name
      - path
      type: object
      properties:
        name:
          type: string
          description: The name of the person.
        path:
          type: string
          description: The path to the person
      x-emoji: ðŸ‘±
    Plan:
      required:
      - alias
      - benefits
      - billingPeriodFrequency
      - billingPeriodType
      - currency
      - hasTrialPeriod
      - id
      - isActive
      - isFeatured
      - isPrivate
      - revenueType
      - subscriptionCode
      - tagline
      - termsAndConditions
      - title
      - trialPeriodDays
      - type
      type: object
      properties:
        id:
          type: string
          description: The identifier of a plan.
        title:
          type: string
          description: The title of a plan.
        tagline:
          type: string
          description: The short tagline for a plan.
        type:
          type: string
          description: The type of plan.
          enum:
          - Free
          - Subscription
        isFeatured:
          type: boolean
          description: True if a plan should be highlighted as featured, false if
            not.
        isActive:
          type: boolean
          description: True if a plan is active, false if its retired.
        isPrivate:
          type: boolean
          description: True if a plan should not be presented in the primary plan
            options, false if not.
        revenueType:
          type: string
          description: The revenue type a plan targets.
          enum:
          - TVOD
          - SVOD
        subscriptionCode:
          type: string
          description: The subscription code a plan targets.
        alias:
          type: string
          description: An alias for a plan.
        benefits:
          type: array
          description: The list of benefits to display for a plan.
          items:
            type: string
        billingPeriodType:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        billingPeriodFrequency:
          type: integer
          description: Given the `billingPeriodType` this is how frequently it will
            run. e.g. every 2 weeks.
          format: int32
        hasTrialPeriod:
          type: boolean
          description: True if a plan has a trial period, false if not.
        trialPeriodDays:
          type: integer
          description: How many days a trial period runs for a plan. Only valid if
            `hasTrialPeriod` is true.
          format: int32
        termsAndConditions:
          type: string
          description: The terms and conditions for a plan.
        price:
          type: number
          description: The price of a plan. If a free plan then undefined.
          format: float
        currency:
          type: string
          description: The currency a plan is offered in.
        customFields:
          type: object
          properties: {}
          description: A map of custom fields defined by a curator for a plan.
      x-emoji: ðŸ’³
    PlanPurchase:
      required:
      - title
      - type
      type: object
      properties:
        id:
          type: string
          description: The identifier of the purchased plan.
        price:
          type: number
          description: The price of the purchased plan.
          format: float
        subscriptionId:
          type: string
          description: The identifier of the subscription membership to the plan.
        title:
          type: string
          description: The title of the purchased plan.
        type:
          type: string
          description: The type of plan purchased.
          enum:
          - Free
          - Subscription
      x-emoji: ðŸ’°
    ProfileCreationRequest:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The unique name of the profile.
        pinEnabled:
          type: boolean
          description: |
            Whether an account pin is required to enter the profile.

            If no account pin is defined this has no impact.
          default: false
        purchaseEnabled:
          type: boolean
          description: Whether the profile can make purchases with the account payment
            options.
          default: true
        segments:
          type: array
          description: The segments a profile should be placed under
          items:
            type: string
        languageCode:
          type: string
          description: |
            The code of the preferred language for the profile.
            Must be a valid ISO language code e.g. "en-US" and must match the code of
            one of the languages specified in the app config.
            See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    ProfileDetail:
      allOf:
      - $ref: '#/components/schemas/ProfileSummary'
      - required:
        - bookmarked
        - rated
        - watched
        type: object
        properties:
          watched:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/Watched'
            description: A map of watched itemIds => last watched position
          rated:
            type: object
            additionalProperties:
              type: integer
              format: int32
            description: A map of rated itemIds => rating out of 10
          bookmarked:
            type: object
            additionalProperties:
              type: string
              format: date-time
            description: A map of bookmarked itemIds => created date
    ProfileSummary:
      required:
      - id
      - isActive
      - marketingEnabled
      - name
      - pinEnabled
      - purchaseEnabled
      - segments
      type: object
      properties:
        id:
          type: string
          description: The id of the profile.
        name:
          type: string
          description: The unique name of the profile.
        pinEnabled:
          type: boolean
          description: Whether a pin is required to enter the profile.
        purchaseEnabled:
          type: boolean
          description: Whether the profile can make purchases with the account payment
            options.
        color:
          type: string
          description: Hex color value assigned to the profile.
        segments:
          type: array
          description: The segments a profile has been placed under
          items:
            type: string
        isActive:
          type: boolean
          description: |
            Whether the profile is active or not.

            **DEPRECATED** - Always true. Inactive profiles are no longer returned.
          x-deprecated: Inactive profiles are no longer returned
        marketingEnabled:
          type: boolean
          description: |
            Whether the profile has opted in or out of marketing material.

            **DEPRECATED** - Marketing material is no longer tied to profiles, only account. See `Account.marketingEnabled`.
          x-deprecated: Has moved to Account.marketingEnabled
        maxRatingContentFilter:
          $ref: '#/components/schemas/ClassificationSummary'
        minRatingPlaybackGuard:
          $ref: '#/components/schemas/ClassificationSummary'
        languageCode:
          type: string
          description: |
            The code of the preferred language for the profile.
            Must be a valid ISO language code e.g. "en-US" and must match the code of
            one of the languages specified in the app config.
            See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
        heroWithAudio:
          type: boolean
          description: Gets the Hero row clip auto playback audio enabled
        heroAutoplay:
          type: boolean
          description: Gets the Hero row clip auto playback enabled
      x-emoji: ðŸ‘¥
    ProfileTokenRequest:
      required:
      - profileId
      - scopes
      type: object
      properties:
        profileId:
          type: string
          description: The id of the profile the token should grant access rights
            to.
        pin:
          type: string
          description: The pin associated with this profile, if any.
        scopes:
          type: array
          description: The scope(s) of the token(s) required.
          items:
            type: string
            enum:
            - Catalog
            - Commerce
            - Settings
        cookieType:
          type: string
          description: |
            If you specify a cookie type then a content filter cookie will be returned
            along with the token(s). This is only intended for web based clients which
            need to pass the cookies to a server to render a page based on the user's
            content filters e.g subscription code.

            If type `Session` the cookie will be session based.
            If type `Persistent` the cookie will have a medium term lifespan.
            If undefined no cookies will be set.
          enum:
          - Session
          - Persistent
    ProfileUpdateRequest:
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The unique name of the profile.
        pinEnabled:
          type: boolean
          description: |
            Whether an account pin is required to enter the profile.

            If no account pin is defined this has no impact.
        purchaseEnabled:
          type: boolean
          description: Whether the profile can make purchases with the account payment
            options.
        heroWithAudio:
          type: boolean
          description: Sets the Hero row clip auto playback audio enabled
        heroAutoplay:
          type: boolean
          description: Sets the Hero row clip auto playback enabled
        segments:
          type: array
          description: The segments a profile should be placed under
          items:
            type: string
        languageCode:
          type: string
          description: |
            The code of the preferred language for the profile.
            Must be a valid ISO language code e.g. "en-US" and must match the code of
            one of the languages specified in the app config.
            See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    Purchase:
      required:
      - creationDate
      - currency
      - id
      - total
      type: object
      properties:
        id:
          type: string
          description: The identifier of the purchase.
        authorizationDate:
          type: string
          description: The date the purchase was authorized.
          format: date-time
        creationDate:
          type: string
          description: The date the purchase was created.
          format: date-time
        currency:
          type: string
          description: The currency code used to make the purchase.
        item:
          $ref: '#/components/schemas/ItemPurchase'
        paymentMethodId:
          type: string
          description: The identifier of the payment method used to make the purchase.
        plan:
          $ref: '#/components/schemas/PlanPurchase'
        total:
          type: number
          description: The total cost of the purchase.
          format: float
      x-emoji: ðŸ’°
    PurchaseRequest:
      type: object
      properties:
        itemId:
          type: string
          description: |
            The identifier of the item to purchase.
            Both `itemId` and `offerId` are required for item purchases.
        offerId:
          type: string
          description: |
            The identifier of the item offer to purchase.
            Both `itemId` and `offerId` are required for item purchases.
        planId:
          type: string
          description: The identifier of the plan to purchase.
        paymentMethodId:
          type: string
          description: |
            The identifier of the payment method to use.
            If omitted, or if purchasing a plan, the default payment method will be used.
    RegistrationRequest:
      required:
      - email
      - password
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        pin:
          type: string
          description: The primary account pin.
        marketing:
          type: boolean
          description: Whether to receive marketing material or not. Default to true.
          default: true
        segments:
          type: array
          description: The segments to apply to the primary profile.
          items:
            type: string
        languageCode:
          type: string
          description: |
            The code of the preferred language for the primary profile.
            Must be a valid ISO language code e.g. "en-US" and must match the code of
            one of the languages specified in the app config.
            See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    RokuPlanListItem:
      required:
      - amount
      - currency
      - description
      - interval
      - intervalCount
      - nickname
      - product
      - productCode
      - savingLabel
      - trialPeriodDays
      type: object
      properties:
        productCode:
          type: string
          description: The identifier of a plan.
        nickname:
          type: string
          description: The title of a plan.
        product:
          type: string
          description: The product of a plan.
        currency:
          type: string
          description: The currency a plan is offered in.
        amount:
          type: number
          description: The price of a plan. If a free plan then undefined.
          format: float
        interval:
          type: string
          description: The type of billing period used.
          enum:
          - day
          - week
          - month
          - year
          - none
        intervalCount:
          type: integer
          description: Given the `interval` this is how frequently it will run. e.g.
            every 2 weeks.
          format: int32
        trialPeriodDays:
          type: integer
          description: How many days a trial period runs for a plan. Only valid if
            `hasTrialPeriod` is true.
          format: int32
        description:
          type: string
          description: The textual description.
        savingLabel:
          type: string
          description: NA.
    RokuPlans:
      required:
      - plans
      - termsAndConditions
      type: object
      properties:
        plans:
          type: array
          description: The list of available plans.
          items:
            $ref: '#/components/schemas/RokuPlanListItem'
        termsAndConditions:
          type: string
          description: Details of terms and conditions of the plan.
    SamsungPreview:
      required:
      - sections
      type: object
      properties:
        expires:
          type: integer
          description: |
            For public preview only
            If specified, the time at which the preview content is updated.
            The time is at most 1 week into the future. By default, the preview
            content is updated every 10 minutes, whenever the TV is switched on,
            or the JSON file changes.
          format: int64
        expires_only:
          type: boolean
          description: |
            For public preview only
            If this value is "true", the preview content is updated only at
            the time specified by the "expires" parameter.
          default: false
        sections:
          type: array
          description: Preview sections
          items:
            $ref: '#/components/schemas/SamsungPreviewSection'
    SamsungPreviewSection:
      required:
      - tiles
      type: object
      properties:
        title:
          type: string
          description: Section title
        position:
          type: integer
          description: Section position. If specified, sections are shown in ascending
            position order.
          format: int32
        tiles:
          type: array
          description: Tiles within the section
          items:
            $ref: '#/components/schemas/SamsungPreviewSectionTile'
    SamsungPreviewSectionTile:
      required:
      - action_data
      - image_ratio
      - image_url
      - is_playable
      type: object
      properties:
        title:
          type: string
          description: Tile title
        subtitle:
          type: string
          description: Tile subtitle
        image_url:
          type: string
          description: Thumbnail image URL
          format: uri
        image_ratio:
          type: string
          description: |
            Thumbnail image aspect ratio
              "16:9"
              "4:3"
              "1:1" (default)
              "2:3"
              The thumbnail height is fixed at 250 px on presentation.
        action_data:
          type: string
          description: Data to send to the application when the tile is clicked
        is_playable:
          type: boolean
          description: If "true", a "Play" icon is shown over the thumbnail image
        display_from:
          type: string
          description: Time to begin showing the tile
          format: date-time
        display_until:
          type: string
          description: Time to stop showing the tile
          format: date-time
        position:
          type: integer
          description: Section position. If specified, sections are shown in ascending
            position order
          format: int32
    SearchResults:
      required:
      - term
      - total
      type: object
      properties:
        term:
          type: string
          description: The search term.
        total:
          minimum: 0
          type: integer
          description: The total number of results.
          format: int32
        items:
          $ref: '#/components/schemas/ItemList'
        movies:
          $ref: '#/components/schemas/ItemList'
        tv:
          $ref: '#/components/schemas/ItemList'
        other:
          $ref: '#/components/schemas/ItemList'
        people:
          type: array
          description: The list of people relevant to the search term.
          items:
            $ref: '#/components/schemas/Person'
      x-emoji: "ðŸ”\x8d"
    ServiceError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: A description of the error.
        code:
          type: integer
          description: An optional code classifying the error. Should be taken in
            the context of the http status code.
          format: int32
      x-emoji: ðŸ”´
    SingleSignOnRequest:
      required:
      - provider
      - token
      type: object
      properties:
        provider:
          type: string
          description: The third party single-sign-on provider.
          enum:
          - Facebook
        token:
          type: string
          description: A token from the third party single-sign-on provider e.g. an
            identity token from Facebook.
        scopes:
          type: array
          description: |
            The scope(s) of the tokens required.
            For each scope listed an Account and Profile token of that scope will be returned.
          items:
            type: string
            enum:
            - Catalog
            - Commerce
            - Settings
            - Playback
        cookieType:
          type: string
          description: |
            If you specify a cookie type then a content filter cookie will be returned
            along with the token(s). This is only intended for web based clients which
            need to pass the cookies to a server to render a page based on the user's
            content filters e.g subscription code.

            If type `Session` the cookie will be session based.
            If type `Persistent` the cookie will have a medium term lifespan.
            If undefined no cookies will be set.
          enum:
          - Session
          - Persistent
        linkAccounts:
          type: boolean
          description: "When a user attempts to sign in using single-sign-on, we may\
            \ find an account created\npreviously through the manual sign up flow\
            \ with the same email. If this is the\ncase then an option to link the\
            \ two accounts can be made available.\n\nIf this flag is set to true then\
            \ accounts will be linked automatically.\n\nIf this flag is not set or\
            \ set to false and an existing account is found \nthen an http 401 with\
            \ subcode `6001` will be returned. Client apps can then present the\n\
            option to link the accounts. If the user decides to accept, then the same\
            \ call\ncan be repeated with this flag set to true.\n"
    Subscription:
      required:
      - code
      - isTrialPeriod
      - planId
      - startDate
      - status
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the subscription.
        code:
          type: string
          description: The unique subscription code.
        startDate:
          type: string
          description: The start date of a subscription.
          format: date-time
        endDate:
          type: string
          description: |
            The end date of a subscription.

            After this date the subscription will become expired. If this is a recurring
            subscription which has not been cancelled then the account holder will be
            automatically charged and a new subscription will be activated.

            Some subscriptions may not have an end date, in which case this
            property will not exist.
          format: date-time
        isTrialPeriod:
          type: boolean
          description: True if a subscription is in its trial period, false if not.
        planId:
          type: string
          description: The plan a subscription belongs to.
        status:
          type: string
          description: The status of a subscription.
          enum:
          - Active
          - Cancelled
          - Lapsed
          - Expired
          - None
      x-emoji: ðŸ’³
    SubscriptionDetails:
      required:
      - itvData_purchased
      type: object
      properties:
        itvData_purchased:
          type: object
          properties: {}
          description: The ITV purchased subscription data.
      x-emoji: ðŸ”‘
    Theme:
      required:
      - colors
      - type
      type: object
      properties:
        colors:
          type: array
          description: The list of colors defined for the theme.
          items:
            $ref: '#/components/schemas/ThemeColor'
        type:
          type: string
          description: The type of theme.
          enum:
          - Background
          - Text
          - Custom
      x-emoji: ðŸŽ¨
    ThemeColor:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: The name of the theme color.
        opacity:
          maximum: 1
          minimum: 0
          type: number
          description: |
            The opacity of the theme color from 0 to 1.

            When omitted, no opacity level is to be applied to the color, or in other words we
            assume the color has an opacity of 1
          format: float
        value:
          type: string
          description: The hex value of the theme color.
      x-emoji: ðŸŽ¨
    TokenRefreshRequest:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: The token to refresh.
        cookieType:
          type: string
          description: |
            If you specify a cookie type then a content filter cookie will be returned
            along with the token(s). This is only intended for web based clients which
            need to pass the cookies to a server to render a page based on the user's
            content filters e.g subscription code.

            If type `Session` the cookie will be session based.
            If type `Persistent` the cookie will have a medium term lifespan.
            If undefined no cookies will be set.
          enum:
          - Session
          - Persistent
    UserRating:
      required:
      - itemId
      - rating
      type: object
      properties:
        itemId:
          type: string
          description: The id of the item rated.
        rating:
          maximum: 1E+1
          minimum: 1
          type: integer
          description: The rating out of 10
          format: int32
      x-emoji: "â­\x90ï¸\x8f"
    Watched:
      required:
      - firstWatchedDate
      - lastWatchedDate
      - position
      type: object
      properties:
        itemId:
          type: string
          description: The id of the item watched.
        position:
          type: integer
          description: The last playhead position watched for the item.
          format: int32
        firstWatchedDate:
          type: string
          format: date-time
        lastWatchedDate:
          type: string
          format: date-time
        isFullyWatched:
          type: boolean
          description: True - if the item is fully watched, False - otherwise.
          default: false
      x-emoji: ðŸ‘€
  parameters:
    Device:
      name: device
      in: query
      description: The type of device the content is targeting.
      schema:
        type: string
        default: web_browser
    FeatureFlags:
      name: ff
      in: query
      description: |
        The set of opt in feature flags which cause breaking changes to responses.

        While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
        may need to evolve over this time.

        These feature flags allow clients to select which response formats they expect and avoid breaking
        clients as these formats evolve under the current major version.

        ### Flags

        - `all` - Enable all flags. Useful for testing. _Don't use in production_.
        - `idp` - Dynamic item detail pages with schedulable rows.
        - `ldp` - Dynamic list detail pages with schedulable rows.
        - `hb` - Hubble formatted image urls.
        - `rpt` - Updated resume point threshold logic.
        - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
        - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
        - `cd` - Custom Destination support.
        - `sis` - Specials into show chainplay.

        See the `feature-flags.md` for available flag details.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - all
          - idp
          - ldp
          - hb
          - rpt
          - cas
          - lrl
          - cd
          - sis
    ItemType:
      name: item_type
      in: query
      description: The item type to filter by. Defaults to unspecified.
      schema:
        type: string
        enum:
        - movie
        - show
        - season
        - episode
        - program
        - link
        - trailer
        - channel
        - customAsset
        x-enumEmoji:
          movie: ðŸŽ¬
          show: ðŸ“º
          season: ðŸ“º
          episode: ðŸ“º
          program: ðŸŽŸ
          link: ðŸ”—
          trailer: ðŸ–¥
          channel: ðŸ“º
      x-enumEmoji:
        movie: ðŸŽ¬
        show: ðŸ“º
        season: ðŸ“º
        episode: ðŸ“º
        program: ðŸŽŸ
        link: ðŸ”—
        trailer: ðŸ–¥
        channel: ðŸ“º
    Language:
      name: lang
      in: query
      description: |
        Language code for the preferred language to be returned in the response.

        Parameter value is case-insensitive and should be
          - a valid 2 letter language code without region such as en, de
          - or with region such as en_us, en_au

        If undefined then defaults to 'en', unless the server has been configured
        with a custom default.

        See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
      schema:
        type: string
    ListOrder:
      name: order
      in: query
      description: The list sort order, either 'asc' or 'desc'.
      schema:
        type: string
        default: desc
        enum:
        - asc
        - desc
    ListOrderBy:
      name: order_by
      in: query
      description: What to order by.
      schema:
        type: string
        enum:
        - a-z
        - release-year
        - date-added
    MediaFileDelivery:
      name: delivery
      in: query
      description: The video delivery type you require.
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - stream
          - progressive
          - download
    MediaFileFormats:
      name: formats
      in: query
      description: |
        The set of media file formats that the device supports, in the order of preference.

        When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.

        `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.

        When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - mp4
          - mpd
          - hls
          - external
    MediaFileResolution:
      name: resolution
      in: query
      description: The maximum resolution the device to playback the media can present.
      required: true
      schema:
        type: string
        enum:
        - HD-4K
        - HD-1080
        - HD-720
        - SD
        - External
    Segments:
      name: segments
      in: query
      description: The list of segments to filter the response by.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    Subscription:
      name: sub
      in: query
      description: The active subscription code.
      schema:
        type: string
  securitySchemes:
    accountAuth:
      type: oauth2
      description: Account JWT token
      flows:
        password:
          tokenUrl: /account/authorization
          scopes:
            Catalog: Access all read only content
            Commerce: Perform account level transactions
            Settings: Modify account settings
            Playback: Allow playback of restricted content
    profileAuth:
      type: oauth2
      description: Profile JWT token
      flows:
        password:
          tokenUrl: /account/profile/authorization
          scopes:
            Catalog: Modify profile preferences and activity (bookmarks, watch list)
    resetPasswordAuth:
      type: apiKey
      name: authorization
      in: header
    verifyEmailAuth:
      type: apiKey
      name: authorization
      in: header
