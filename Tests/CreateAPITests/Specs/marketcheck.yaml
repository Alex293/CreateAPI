openapi: 3.0.1
info:
  title: Marketcheck APIs
  description: One API serving data spanned across multiple verticals
  version: "2.01"
servers:
- url: https://marketcheck-prod.apigee.net/v2
security:
- authorizeEndpoint: []
paths:
  /predict/car/price:
    get:
      tags:
      - Cars Market API
      summary: Predict car price based on it's specifications
      description: Predict car price based on it's specifications
      operationId: predictCarPrice
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: query
        description: Predict price for a VIN
        schema:
          type: string
      - name: car_type
        in: query
        description: Car condition
        required: true
        schema:
          type: string
          enum:
          - used
          - new
      - name: year
        in: query
        description: Car manufacturing year
        schema:
          type: integer
      - name: make
        in: query
        description: Car's make
        schema:
          type: string
      - name: model
        in: query
        description: Car's model
        schema:
          type: string
      - name: trim
        in: query
        description: Car's trim
        schema:
          type: string
      - name: is_certified
        in: query
        description: Boolean to indicate car is certified or not
        schema:
          type: boolean
      - name: carfax_1_owner
        in: query
        description: Boolean to indicate car is carfax one owner or not
        schema:
          type: boolean
      - name: carfax_clean_title
        in: query
        description: Boolean to indicate car has clean title or not
        schema:
          type: boolean
      - name: base_exterior_color
        in: query
        description: Base exterior color of the car
        schema:
          type: string
      - name: base_interior_color
        in: query
        description: Base interior color of the car
        schema:
          type: string
      - name: transmission
        in: query
        description: Transmission on the car
        schema:
          type: string
          enum:
          - Manual
          - Automatic
      - name: drivetrain
        in: query
        description: Drivetrain on the car
        schema:
          type: string
          enum:
          - 4WD
          - AWD
          - FWD
          - RWD
      - name: engine_size
        in: query
        description: Engine Size of the car
        schema:
          type: number
      - name: engine_block
        in: query
        description: Engine Block of the car
        schema:
          type: string
          enum:
          - I
          - V
          - H
      - name: cylinders
        in: query
        description: Number of cylinders in the vehicle
        schema:
          type: integer
      - name: doors
        in: query
        description: Number of doors in the vehicle
        schema:
          type: integer
      - name: highway_mpg
        in: query
        description: Highway mileage
        schema:
          type: integer
      - name: city_mpg
        in: query
        description: City mileage of the car
        schema:
          type: integer
      - name: latitude
        in: query
        description: Latitude component of the location
        schema:
          type: number
      - name: longitude
        in: query
        description: Longitude component of the location
        schema:
          type: number
      - name: miles
        in: query
        description: miles vehicle has driven in total
        schema:
          type: integer
      responses:
        200:
          description: Predicted price of the car along with it's specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricePrediction'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: market
  /search/car/uk/active:
    get:
      tags:
      - Car Search
      summary: Gets active car listings in UK for the given search criteria
      description: Search cars for sale in UK
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: postal_code
        in: query
        description: To filter listing on postal code around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: postal_code
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: postal_code
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used
        schema:
          type: string
          enum:
          - new
          - used
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: variant
        in: query
        description: To filter listing on their variant
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: variant
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: variant
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: uk
          enum:
          - uk
          - england
          - scotland
          - northan ireland
          - wales
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: county
        in: query
        description: To filter listing on county in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: county
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: county
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: co2_emissions
        in: query
        description: CO2 emissions
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: co2_emissions
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: co2_emissions
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: insurance_group
        in: query
        description: Insurance Group
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: insurance_group
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: insurance_group
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_registration_mark
        in: query
        description: Vehicle Registration Mark
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_registration_mark
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_registration_mark
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_registration_date_range
        in: query
        description: Vehicle registration date range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_registration_date_range
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_registration_date_range
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: num_owners
        in: query
        description: Number of owners. Range to be given in the format - min-max e.g.
          1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: num_owners
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: num_owners
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5
            defaultMin: 1
      responses:
        200:
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/active:
    get:
      tags:
      - Car Search
      summary: Gets active car listings for the given search criteria
      description: "This endpoint is the meat of the API and serves many purposes.\
        \ This API produces a list of currently active cars from the market for the\
        \ given search criteria. The API results are limited to allow pagination upto\
        \ 10000 rows. \n The search API facilitates the following use cases - \n1.\
        \ Search Cars around a given geo-point within a given radius \n2. Search cars\
        \ for a specific year / make / model or combination of these \n3. Search cars\
        \ matching multiple year, make, model combinatins in the same search request\n\
        4. Filter results by most car specification attributes\n5. Search for similar\
        \ cars by VIN or Taxonomy VIN \n6. Filter cars within a given price / miles\
        \ / days on market (dom) range\n7. Specify a sort order for the results on\
        \ price / miles / dom / listed date \n8. Search cars for a given City / State\
        \ combination \n9. Get Facets to build the search drill downs \n10. Get Market\
        \ averages for price/miles/dom for your search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: mm
        in: query
        description: Make-Model concatenated string. To help passing the results of
          auto-complete API on mm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: mm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: mm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymm
        in: query
        description: Year-Make-Model concatenated string. To help passing the results
          of auto-complete API on ymm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: ymm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: ymm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: source
        in: query
        description: To filter listing on their source only for widget requests
        schema:
          type: string
          x-field-config:
            widgetExclusive: true
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          widgetExclusive: true
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/fsbo/active:
    get:
      tags:
      - Car Search
      summary: Gets active private party car listings for the given search criteria
      description: "This API produces a list of currently active FSBO cars from the\
        \ market for the given search criteria. The API results are limited to allow\
        \ pagination upto 5000 rows. \n The search API facilitates the following use\
        \ cases - \n1. Search Cars around a given geo-point within a given radius\
        \ \n2. Search cars for a specific year / make / model or combination of these\
        \ \n3. Search cars matching multiple year, make, model combinatins in the\
        \ same search request\n4. Filter results by most car specification attributes\n\
        5. Search for similar cars by VIN or Taxonomy VIN \n6. Filter cars within\
        \ a given price / miles / days on market (dom) range\n7. Specify a sort order\
        \ for the results on price / miles / dom / listed date \n8. Search cars for\
        \ a given City / State combination \n9. Get Facets to build the search drill\
        \ downs \n10. Get Market averages for price/miles/dom for your search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: mm
        in: query
        description: Make-Model concatenated string. To help passing the results of
          auto-complete API on mm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: mm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: mm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymm
        in: query
        description: Year-Make-Model concatenated string. To help passing the results
          of auto-complete API on ymm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: ymm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: ymm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source only for widget requests
        schema:
          type: string
          x-field-config:
            widgetExclusive: true
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          widgetExclusive: true
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: List of all FSBO cars listings matching the search & filter
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/auction/active:
    get:
      tags:
      - Car Search
      summary: Gets active auction car listings for the given search criteria
      description: "This API produces a list of currently active auction cars from\
        \ the market for the given search criteria. The API results are limited to\
        \ allow pagination upto 5000 rows. \n The search API facilitates the following\
        \ use cases - \n1. Search Cars around a given geo-point within a given radius\
        \ \n2. Search cars for a specific year / make / model or combination of these\
        \ \n3. Search cars matching multiple year, make, model combinatins in the\
        \ same search request\n4. Filter results by most car specification attributes\n\
        5. Search for similar cars by VIN or Taxonomy VIN \n6. Filter cars within\
        \ a given price / miles / days on market (dom) range\n7. Specify a sort order\
        \ for the results on price / miles / dom / listed date \n8. Search cars for\
        \ a given City / State combination \n9. Get Facets to build the search drill\
        \ downs \n10. Get Market averages for price/miles/dom for your search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: mm
        in: query
        description: Make-Model concatenated string. To help passing the results of
          auto-complete API on mm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: mm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: mm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymm
        in: query
        description: Year-Make-Model concatenated string. To help passing the results
          of auto-complete API on ymm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: ymm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: ymm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source only for widget requests
        schema:
          type: string
          x-field-config:
            widgetExclusive: true
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          widgetExclusive: true
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: List of all auction cars listings matching the search & filter
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/auto-complete:
    get:
      tags:
      - Car Search
      summary: API for auto-completion of inputs
      description: Auto-complete the inputs of your end users
      operationId: autoComplete
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Field name for which you want auto-completion
        required: true
        schema:
          type: string
          format: string
          enum:
          - ymm
          - mm
          - make
          - model
          - trim
          - body_type
          - body_subtype
          - vehicle_type
          - transmission
          - drivetrain
          - fuel_type
          - exterior_color
          - interior_color
          - engine
          - engine_size
          - engine_block
          - state
          - city
      - name: input
        in: query
        description: Input entered so far
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source only for widget requests
        schema:
          type: string
          x-field-config:
            widgetExclusive: true
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          widgetExclusive: true
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used
        schema:
          type: string
          enum:
          - new
          - used
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_non_vin_listings
        in: query
        description: Flag to indicate whether to include non vin listing terms in
          results or not. Default is false to avoid un-normalised terms from non vin
          listings out of results
        schema:
          type: string
          default: "false"
          enum:
          - "true"
          - "false"
          x-field-config:
            isConfigurable: true
            targetAlias: is_non_vin_listing_is
            isMultiValued: false
            transformConstraints:
            - transformer: boolToFlag
              type: string
            operator: equals
        x-field-config:
          isConfigurable: true
          targetAlias: is_non_vin_listing_is
          isMultiValued: false
          transformConstraints:
          - transformer: boolToFlag
            type: string
          operator: equals
      - name: ignore_case
        in: query
        description: Boolean variable to indicate ignore case of current input
        schema:
          type: boolean
          default: true
      - name: term_counts
        in: query
        description: Boolean variable to indicate wheather to include term counts
          as well in response
        schema:
          type: boolean
          default: false
      - name: sort_by
        in: query
        description: Sort the response, either by index or count(default)
        schema:
          type: string
          default: index
          enum:
          - index
          - count
      - name: seller_type
        in: query
        description: seller type for autocomplete
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /listing/car/{id}:
    get:
      tags:
      - Car Search
      summary: Listing by id
      description: Get a particular dealer listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/{id}/media:
    get:
      tags:
      - Car Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingMedia for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/{id}/extra:
    get:
      tags:
      - Car Search
      summary: Long text Listings attributes for Listing with the given id
      description: Get listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/uk/{id}:
    get:
      tags:
      - Car Search
      summary: Listing by id
      description: Get a particular dealer listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/uk/{id}/media:
    get:
      tags:
      - Car Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingMedia for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/uk/{id}/extra:
    get:
      tags:
      - Car Search
      summary: Long text Listings attributes for Listing with the given id
      description: Get listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/fsbo/{id}:
    get:
      tags:
      - Car Search
      summary: Listing by id
      description: Get a particular private party listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/fsbo/{id}/media:
    get:
      tags:
      - Car Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingMedia for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/fsbo/{id}/extra:
    get:
      tags:
      - Car Search
      summary: Long text Listings attributes for Listing with the given id
      description: Get listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/auction/{id}:
    get:
      tags:
      - Car Search
      summary: Listing by id
      description: Get a particular auction listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/auction/{id}/media:
    get:
      tags:
      - Car Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingMedia for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/car/auction/{id}/extra:
    get:
      tags:
      - Car Search
      summary: Long text Listings attributes for Listing with the given id
      description: Get listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/recents:
    get:
      tags:
      - Car Search
      summary: Gets Recent car listings for the given search criteria
      description: This API produces a list of recently active (past 90 days) cars
        from the market for the given search criteria
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: dealer_name
        in: query
        description: Filter listings on dealer_name
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_name
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_name
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealership_group_name
        in: query
        description: Name of the dealership group to search for
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dealership_group_name_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealership_group_name_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sold
        in: query
        description: sold parameter to fetch only sold listings
        schema:
          type: boolean
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      - name: expired
        in: query
        description: Boolean falg to either fetch only the expired listings or active
          ones
        schema:
          type: string
          enum:
          - "true"
          - "false"
          x-field-config:
            isConfigurable: true
            targetAlias: is_expired_listing
            isMultiValued: false
            transformConstraints:
            - transformer: boolToFlag
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: is_expired_listing
          isMultiValued: false
          transformConstraints:
          - transformer: boolToFlag
            type: string
          operator: in
      responses:
        200:
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /car/dealer/inventory/active:
    get:
      tags:
      - Car Search
      summary: Get dealers active inventory
      description: Get dealers active inventory
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year_range
        in: query
        description: Year range to filter listings with the year in the range given.
          Range to be given in the format - min-max e.g. 2019-2021
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2100
              defaultMin: 1900
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: mm
        in: query
        description: Make-Model concatenated string. To help passing the results of
          auto-complete API on mm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: mm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: mm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymm
        in: query
        description: Year-Make-Model concatenated string. To help passing the results
          of auto-complete API on ymm field, use this parameter and pass in the selected
          value as is
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: ymm
            isMultiValued: false
            operator: equals
            transformConstraints:
            - transformer: caseTransformer
              type: string
        x-field-config:
          isConfigurable: true
          targetAlias: ymm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_name
        in: query
        description: Filter listings on dealer_name
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_name
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_name
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealership_group_name
        in: query
        description: Name of the dealership group to search for
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dealership_group_name_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealership_group_name_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: include_relevant_links
        in: query
        description: To include_relevant_links. Default is true
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/car/incentive/oem:
    get:
      tags:
      - OEM Incentive Search
      summary: Gets oem incentive listings for the given search criteria
      description: "This endpoint is the meat of the API and serves many purposes.\
        \ This API produces a list of currently active oem incentive from the market\
        \ for the given search criteria. The API results are limited to allow pagination\
        \ upto 10000 rows. \n The search API facilitates the following use cases -\
        \ \n1. Search Cars around a given geo-point within a given radius \n2. Search\
        \ cars for a specific year / make / model or combination of these \n3. Search\
        \ cars matching multiple year, make, model combinatins in the same search\
        \ request\n4. Filter results by most car specification attributes\n5. Search\
        \ for similar cars by VIN or Taxonomy VIN \n6. Filter cars within a given\
        \ price / miles / days on market (dom) range\n7. Specify a sort order for\
        \ the results on price / miles / dom / listed date \n8. Search cars for a\
        \ given City / State combination \n9. Get Facets to build the search drill\
        \ downs \n10. Get Market averages for price/miles/dom for your search"
      operationId: oemSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: offer_type
        in: query
        description: The type of the incentive
        schema:
          type: string
          enum:
          - lease
          - finance
          - cash
          x-field-config:
            isConfigurable: true
            targetAlias: offer_type
            isMultiValued: false
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: offer_type
          isMultiValued: false
          operator: in
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msrp
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000000
              defaultMin: 500
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000000
            defaultMin: 500
      - name: apr
        in: query
        description: APR range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: apr
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseFloat
              type: integer
              defaultMax: 20
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: apr
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseFloat
            type: integer
            defaultMax: 20
            defaultMin: 0
      - name: monthly
        in: query
        description: To filter listing on Monthly payment amount, usually populated
          in Lease offers
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: monthly
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: monthly
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 100
      - name: monthly_per_thousand
        in: query
        description: To filter listing on monthly amount to be paid by customer for
          every $1000 financed at the advertised APR rate
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: monthly_per_thousand
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: monthly_per_thousand
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: down_payment
        in: query
        description: To filter listing on down payment offer on car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: down_payment
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: down_payment
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2000
            defaultMin: 0
      - name: due_at_signing
        in: query
        description: To filter listing on total amount due at signing, that usually
          includes first month payment, down payment, acquisition fee etc
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: due_at_signing
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 2000
              defaultMin: 500
        x-field-config:
          isConfigurable: true
          targetAlias: due_at_signing
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2000
            defaultMin: 500
      - name: security_deposit
        in: query
        description: To filter listing on security deposit required for the offer
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: security_deposit
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: security_deposit
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
          operator: in
      - name: disposition_fee
        in: query
        description: To filter listing on disposition fee of the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: disposition_fee
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: disposition_fee
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 0
      - name: acquisition_fee
        in: query
        description: To filter listing on acquisition fee of the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: acquisition_fee
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: acquisition_fee
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 0
      - name: duration
        in: query
        description: To filter listing on offer duration in months
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: duration
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: duration
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100
            defaultMin: 0
      - name: dealer_contribution
        in: query
        description: To filter listing on any contribution from dealer's side
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_contribution
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_contribution
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: mileage_charge
        in: query
        description: Mileage Charge Range range to filter listings with the msrp in
          the range given. Range to be given in the format - min-max e.g. 100-1000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: mileage_charge
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseFloat
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: mileage_charge
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseFloat
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: mileage_charge_limit
        in: query
        description: To filter listing on mileage charge limit the offer is valid
          up to under the default clauses
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: mileage_charge_limit
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: mileage_charge_limit
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 0
      - name: cashback_amount
        in: query
        description: To filter listing on cashback amounts listed in offer
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cashback_amount
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: cashback_amount
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 0
      - name: cashback_target_group
        in: query
        description: To filter listing on the demographic or any other entity for
          whom this cashback offer is for. Not all target groups are identified but
          the most common ones are tagged like Military, Grad students Current owners
          etc
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cashback_target_group
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cashback_target_group
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: lease_end_purchase_option
        in: query
        description: To filter listing on amount at the lease end to pay for buying
          the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_end_purchase_option
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: lease_end_purchase_option
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 0
      - name: net_capitalised_cost
        in: query
        description: To filter listing on net capitalised cost of the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: net_capitalised_cost
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: net_capitalised_cost
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 0
      - name: gross_capitalised_cost
        in: query
        description: To filter listing on gross capitalised cost of the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: gross_capitalised_cost
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: gross_capitalised_cost
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: total_monthly_payment
        in: query
        description: To filter listing on gross capitalised cost of the car
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: total_monthly_payment
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: total_monthly_payment
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: search_text
        in: query
        description: To search a substring across entire document
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: long_text_copy_field
            isMultiValued: false
            operator: equals
        x-field-config:
          isConfigurable: true
          targetAlias: long_text_copy_field
          isMultiValued: false
          operator: equals
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      responses:
        200:
          description: List of all oem incentive listings matching the search & filter
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /car/recall/{vin}:
    get:
      tags:
      - Recall Search
      summary: Recall info by vin
      description: Get a particular recall information for a vin
      operationId: getRecallHistory
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: path
        description: The VIN to identify the car. Must be a valid 17 char VIN
        required: true
        schema:
          minLength: 10
          type: string
          format: string
      - name: page
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 1.
        schema:
          type: number
          format: number
      responses:
        200:
          description: Reacll info for the given vin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: history
  /search/motorcycle/active:
    get:
      tags:
      - Motorcycle Search
      summary: Gets active motorcycle listings for the given search criteria
      description: "This endpoint provides search on motorcycle inventory. This API\
        \ produces a list of currently active motorcycles from the market for the\
        \ given search criteria. The API results are limited to allow pagination upto\
        \ 5000 rows. \n The search API facilitates the following use cases - \n1.\
        \ Search motorcycles around a given geo-point within a given radius \n2. Search\
        \ motorcycles for a specific year / make / model or combination of these \n\
        3. Search motorcycles matching multiple year, make, model combinatins in the\
        \ same search request\n4. Filter results by most motorcycle specification\
        \ attributes\n5. Search for similar motorcycles by VIN or Taxonomy VIN \n\
        6. Filter motorcycles within a given price / miles range\n7. Specify a sort\
        \ order for the results on price / miles / listed date \n8. Search motorcycles\
        \ for a given City / State combination \n9. Get Facets to build the search\
        \ drill downs \n10. Get Market averages for price/miles for your search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: search_text
        in: query
        description: To search a substring across entire document
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: long_text_copy_field
            isMultiValued: false
            operator: equals
        x-field-config:
          isConfigurable: true
          targetAlias: long_text_copy_field
          isMultiValued: false
          operator: equals
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: taxonomy_vin
        in: query
        description: Taxonomy VIN of the motorcycle
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: taxonomy_vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 10
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: taxonomy_vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 10
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: color
        in: query
        description: Color of the vehicle
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      responses:
        200:
          description: List of all motorcycles listings matching the search & filter
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotorcycleSearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/motorcycle/auto-complete:
    get:
      tags:
      - Motorcycle Search
      summary: API for auto-completion of inputs
      description: Auto-complete the inputs of your end users
      operationId: autoComplete
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Field name for which you want auto-completion
        required: true
        schema:
          type: string
          format: string
          enum:
          - make
          - model
          - trim
          - body_type
          - vehicle_type
          - transmission
          - drivetrain
          - fuel_type
          - color
          - engine
          - state
          - city
      - name: input
        in: query
        description: Input entered so far
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: color
        in: query
        description: Color of the vehicle
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ignore_case
        in: query
        description: Boolean variable to indicate ignore case of current input
        schema:
          type: boolean
          default: true
      - name: term_counts
        in: query
        description: Boolean variable to indicate wheather to include term counts
          as well in response
        schema:
          type: boolean
          default: false
      - name: sort_by
        in: query
        description: Sort the response, either by index or count(default)
        schema:
          type: string
          default: index
          enum:
          - index
          - count
      - name: seller_type
        in: query
        description: seller type for autocomplete
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /listing/motorcycle/{id}:
    get:
      tags:
      - Motorcycle Search
      summary: Motorcycle listing by id
      description: Get a particular Motorcycle listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Motorcycle listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MotorcycleListing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/motorcycle/{id}/media:
    get:
      tags:
      - Motorcycle Search
      summary: Motorcycle listing media by id
      description: Get Motorcycle listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Motorcycle listing media for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/motorcycle/{id}/extra:
    get:
      tags:
      - Motorcycle Search
      summary: Long text Motorcycle Listings attributes for Listing with the given
        id
      description: Get Motorcycle listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Motorcycle ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/rv/active:
    get:
      tags:
      - RV Search
      summary: Gets active RV listings for the given search criteria
      description: "This endpoint provides search on RV inventory. This API produces\
        \ a list of currently active RV from the market for the given search criteria.\
        \ The API results are limited to allow pagination upto 5000 rows. \n The search\
        \ API facilitates the following use cases - \n1. Search RV around a given\
        \ geo-point within a given radius \n2. Search RV for a specific year / make\
        \ / model or combination of these \n3. Search RV matching multiple year, make,\
        \ model combinatins in the same search request\n4. Filter results by most\
        \ RV specification attributes\n5. Filter RV within a given price / miles range\n\
        6. Specify a sort order for the results on price / miles / listed date \n\
        7. Search RV for a given City / State combination \n8. Get Facets to build\
        \ the search drill downs \n9. Get Market averages for price/miles for your\
        \ search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: search_text
        in: query
        description: To search a substring across entire document
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: long_text_copy_field
            isMultiValued: false
            operator: equals
        x-field-config:
          isConfigurable: true
          targetAlias: long_text_copy_field
          isMultiValued: false
          operator: equals
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model_o
        in: query
        description: To filter listings on their model orig (as described on the webpage)
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model_o
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model_o
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: dealer_name
        in: query
        description: Filter listings on dealer_name
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_name
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_name
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: class
        in: query
        description: Filter RV listings on class
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: class
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: class
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      responses:
        200:
          description: List of all RV listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RVSearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/rv/auto-complete:
    get:
      tags:
      - RV Search
      summary: API for auto-completion of inputs
      description: Auto-complete the inputs of your end users
      operationId: autoComplete
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Field name for which you want auto-completion
        required: true
        schema:
          type: string
          format: string
          enum:
          - make
          - model
          - trim
          - class
          - transmission
          - fuel_type
          - exterior_color
          - interior_color
          - engine
          - state
          - city
      - name: input
        in: query
        description: Input entered so far
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: color
        in: query
        description: Color of the vehicle
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ignore_case
        in: query
        description: Boolean variable to indicate ignore case of current input
        schema:
          type: boolean
          default: true
      - name: term_counts
        in: query
        description: Boolean variable to indicate wheather to include term counts
          as well in response
        schema:
          type: boolean
          default: false
      - name: sort_by
        in: query
        description: Sort the response, either by index or count(default)
        schema:
          type: string
          default: index
          enum:
          - index
          - count
      - name: seller_type
        in: query
        description: seller type for autocomplete
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /listing/rv/{id}:
    get:
      tags:
      - RV Search
      summary: RV listing by id
      description: Get a particular RV listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: RV listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RVListing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/rv/{id}/media:
    get:
      tags:
      - RV Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Listing Media for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/rv/{id}/extra:
    get:
      tags:
      - RV Search
      summary: Long text RV Listings attributes for Listing with the given id
      description: Get RV listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: RV ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/heavy-equipment/active:
    get:
      tags:
      - Heavy Equipment Search
      summary: Gets active heavy equipment listings for the given search criteria
      description: "This endpoint provides search on heavy equipment inventory. This\
        \ API produces a list of currently active heavy equipments from the market\
        \ for the given search criteria. The API results are limited to allow pagination\
        \ upto 5000 rows. \n The search API facilitates the following use cases -\
        \ \n1. Search heavy equipments around a given geo-point within a given radius\
        \ \n2. Search heavy equipments for a specific year / make / model or combination\
        \ of these \n3. Search heavy equipments matching multiple year, make, model\
        \ combinatins in the same search request\n4. Filter results by most heavy\
        \ equipment specification attributes\n5. Filter heavy equipments within a\
        \ given price / miles range\n6. Specify a sort order for the results on price\
        \ / miles / listed date \n7. Search heavy equipments for a given City / State\
        \ combination \n8. Get Facets to build the search drill downs \n9. Get Market\
        \ averages for price/miles for your search"
      operationId: search
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: search_text
        in: query
        description: To search a substring across entire document
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: long_text_copy_field
            isMultiValued: false
            operator: equals
        x-field-config:
          isConfigurable: true
          targetAlias: long_text_copy_field
          isMultiValued: false
          operator: equals
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: dealer_name
        in: query
        description: Filter listings on dealer_name
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_name
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_name
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: category
        in: query
        description: To filter heavy equipments on their category
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: category
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: category
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sub_category
        in: query
        description: To filter heavy equipments on their sub-category
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: sub_category
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: sub_category
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: hours_used_range
        in: query
        description: Hours used range to filter heavy equipments with the their usage
          in the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: hours_used
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: hours_used
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      responses:
        200:
          description: List of all heavy equipment listings matching the search &
            filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeavyEquipmentsSearchResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /search/heavy-equipment/auto-complete:
    get:
      tags:
      - Heavy Equipment Search
      summary: API for auto-completion of inputs
      description: Auto-complete the inputs of your end users
      operationId: autoComplete
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Field name for which you want auto-completion
        required: true
        schema:
          type: string
          format: string
          enum:
          - make
          - model
          - trim
          - body_type
          - transmission
          - drivetrain
          - fuel_type
          - exterior_color
          - interior_color
          - engine
          - category
          - sub_category
          - state
          - city
      - name: input
        in: query
        description: Input entered so far
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: color
        in: query
        description: Color of the vehicle
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ignore_case
        in: query
        description: Boolean variable to indicate ignore case of current input
        schema:
          type: boolean
          default: true
      - name: term_counts
        in: query
        description: Boolean variable to indicate wheather to include term counts
          as well in response
        schema:
          type: boolean
          default: false
      - name: sort_by
        in: query
        description: Sort the response, either by index or count(default)
        schema:
          type: string
          default: index
          enum:
          - index
          - count
      - name: seller_type
        in: query
        description: seller type for autocomplete
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: seller_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seller_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /listing/heavy-equipment/{id}:
    get:
      tags:
      - Heavy Equipment Search
      summary: Heavy equipment listing by id
      description: Get a particular Heavy equipment listing by its id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Heavy equipment listing for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeavyEquipmentsListing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/heavy-equipment/{id}/media:
    get:
      tags:
      - Heavy Equipment Search
      summary: Listing media by id
      description: Get listing media (photo, photos) by id
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Listing Media for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingMedia'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /listing/heavy-equipment/{id}/extra:
    get:
      tags:
      - Heavy Equipment Search
      summary: Long text Heavy equipment Listings attributes for Listing with the
        given id
      description: Get Heavy equipment listing options, features, seller comments
      operationId: getListing
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Listing id to get all the listing attributes
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: Heavy equipment ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingExtraAttributes'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /image/cache/car/{listingID}/{imageID}:
    get:
      tags:
      - Car Cached Image
      summary: Fetch cached image
      description: Fetch the cached car image
      operationId: getCachedImage
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: listingID
        in: path
        description: ID of the listing to fetch cached images for
        required: true
        schema:
          type: string
      - name: imageID
        in: path
        description: ID of the image to fetch
        required: true
        schema:
          type: string
      responses:
        200:
          description: Cached image of the car
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheImageResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /history/car/{vin}:
    get:
      tags:
      - Cars History API
      summary: Get a cars online listing history
      description: The history API returns online listing history for a car identified
        by its VIN. History listings are sorted in the descending order of the listing
        date / last seen date
      operationId: getCarHistory
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: path
        description: The VIN to identify the car. Must be a valid 17 char VIN
        required: true
        schema:
          minLength: 10
          type: string
          format: string
      - name: fields
        in: query
        description: List of fields to fetch, in case the default fields list in the
          response is to be trimmed down
        schema:
          type: string
          format: string
      - name: page
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 1.
        schema:
          type: number
          format: number
      - name: include_duplicates
        in: query
        description: Flag to indicate whether to include duplicate historical records
          as well in the response
        schema:
          type: boolean
      responses:
        200:
          description: Online listing history for the given vin
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalListing'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: history
  /crm_check/car/{vin}:
    get:
      tags:
      - CRM Cleanse API
      summary: CRM check of a particular vin
      description: Check whether particular vin has had a listing after stipulated
        date or not
      operationId: crmCheck
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: path
        description: The VIN to identify the car. Must be a valid 17 char VIN
        required: true
        schema:
          minLength: 10
          type: string
          format: string
      - name: sale_date
        in: query
        description: sale date to check whether after this listing has appeared or
          not. Must be 8 character long, with YYYYMMDD format
        required: true
        schema:
          minLength: 8
          type: string
          format: string
      responses:
        200:
          description: CRM check for given vin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CRMResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: history
  /decode/car/epi/{vin}/specs:
    get:
      tags:
      - VIN Decoder API
      summary: EPI VIN Decoder
      description: Get the basic information on specifications for a car identified
        by a valid VIN from EPI's decoder
      operationId: decodeViaEPI
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: path
        description: The VIN to identify the car. Must be a valid 17 char VIN
        required: true
        schema:
          minLength: 10
          type: string
          format: string
      responses:
        200:
          description: Basic sepcifications details about the car
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: vin_decoder
  /decode/car/{vin}/specs:
    get:
      tags:
      - VIN Decoder API
      summary: VIN Decoder
      description: Get the basic information on specifications for a car identified
        by a valid VIN
      operationId: decode
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: path
        description: The VIN to identify the car. Must be a valid 17 char VIN
        required: true
        schema:
          minLength: 10
          type: string
          format: string
      responses:
        200:
          description: Basic sepcifications details about the car
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: vin_decoder
  /specs/car/auto-complete:
    get:
      tags:
      - VIN Decoder API
      summary: API for auto-completion of inputs based on taxonomy
      description: Auto-complete the inputs of your end users, not from active set
        but from taxonomy (decoder database)
      operationId: autoComplete
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Field name for which you want auto-completion
        required: true
        schema:
          type: string
          format: string
          enum:
          - make
          - model
          - trim
          - body_type
          - body_subtype
          - vehicle_type
          - transmission
          - drivetrain
          - fuel_type
          - engine
          - engine_size
          - engine_block
      - name: input
        in: query
        description: Input entered so far
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ignore_case
        in: query
        description: Boolean variable to indicate ignore case of current input
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecsAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /specs/car/terms:
    get:
      tags:
      - VIN Decoder API
      summary: API for getting terms from taxonomy
      description: Facets on taxonomy
      operationId: getTaxonomyTerms
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: field
        in: query
        description: Comma separated list of fields to get terms for
        required: true
        schema:
          type: string
          format: string
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: List of unique terms for specified fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecsAutoCompleteResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: vin_decoder
  /dealer/car/{id}:
    get:
      tags:
      - Dealer API
      summary: Dealer by id
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Dealer id to get all the dealer info attributes
        required: true
        schema:
          type: string
          format: string
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /dealer/car/uk/{id}:
    get:
      tags:
      - Dealer API
      summary: Dealer by id
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Dealer id to get all the dealer info attributes
        required: true
        schema:
          type: string
          format: string
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /dealer/motorcycle/{id}:
    get:
      tags:
      - Dealer API
      summary: Dealer by id
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Dealer id to get all the dealer info attributes
        required: true
        schema:
          type: string
          format: string
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /dealer/rv/{id}:
    get:
      tags:
      - Dealer API
      summary: Dealer by id
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Dealer id to get all the dealer info attributes
        required: true
        schema:
          type: string
          format: string
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /dealer/heavy-equipment/{id}:
    get:
      tags:
      - Dealer API
      summary: Dealer by id
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: id
        in: path
        description: Dealer id to get all the dealer info attributes
        required: true
        schema:
          type: string
          format: string
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dealer'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: search
  /dealers/car:
    get:
      tags:
      - Dealer API
      summary: Find car dealers around
      description: The dealers API returns a list of dealers around a given point
        and radius.
      operationId: dealerSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          enum:
          - US
          - CA
          - us
          - ca
          - uk
          - england
          - scotland
          - northan ireland
          - wales
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: listing_count_range
        in: query
        description: To filter dealers based on their inventory size. Range can be
          given in the format - min-max e.g. 50-100
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: listing_count
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      - name: inventory_url
        in: query
        description: inventory_url of dealer to be searched
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: website
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      responses:
        200:
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealersResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /dealers/car/uk:
    get:
      tags:
      - Dealer API
      summary: Find car dealers around
      description: The dealers API returns a list of dealers around a given point
        and radius.
      operationId: dealerSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          enum:
          - US
          - CA
          - us
          - ca
          - uk
          - england
          - scotland
          - northan ireland
          - wales
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: county
        in: query
        description: To filter listing on county in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: listing_count_range
        in: query
        description: To filter dealers based on their inventory size. Range can be
          given in the format - min-max e.g. 50-100
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: listing_count
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      - name: inventory_url
        in: query
        description: inventory_url of dealer to be searched
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: website
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: postal_code
        in: query
        description: To filter listing on postal code around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      responses:
        200:
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealersResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /dealers/motorcycle:
    get:
      tags:
      - Dealer API
      summary: Find car dealers around
      description: The dealers API returns a list of dealers around a given point
        and radius.
      operationId: dealerSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          enum:
          - US
          - CA
          - us
          - ca
          - uk
          - england
          - scotland
          - northan ireland
          - wales
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: listing_count_range
        in: query
        description: To filter dealers based on their inventory size. Range can be
          given in the format - min-max e.g. 50-100
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: listing_count
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      - name: inventory_url
        in: query
        description: inventory_url of dealer to be searched
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: website
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      responses:
        200:
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealersResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /dealers/rv:
    get:
      tags:
      - Dealer API
      summary: Find car dealers around
      description: The dealers API returns a list of dealers around a given point
        and radius.
      operationId: dealerSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          enum:
          - US
          - CA
          - us
          - ca
          - uk
          - england
          - scotland
          - northan ireland
          - wales
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: listing_count_range
        in: query
        description: To filter dealers based on their inventory size. Range can be
          given in the format - min-max e.g. 50-100
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: listing_count
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      - name: inventory_url
        in: query
        description: inventory_url of dealer to be searched
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: website
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      responses:
        200:
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealersResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /dealers/heavy-equipment:
    get:
      tags:
      - Dealer API
      summary: Find car dealers around
      description: The dealers API returns a list of dealers around a given point
        and radius.
      operationId: dealerSearch
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          enum:
          - US
          - CA
          - us
          - ca
          - uk
          - england
          - scotland
          - northan ireland
          - wales
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: listing_count_range
        in: query
        description: To filter dealers based on their inventory size. Range can be
          given in the format - min-max e.g. 50-100
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: listing_count
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 500
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      - name: inventory_url
        in: query
        description: inventory_url of dealer to be searched
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: website
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: provider
        in: query
        description: boolean param to include site providers name in response
        schema:
          type: boolean
          default: false
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      responses:
        200:
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealersResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    x-swagger-router-controller: search
  /mds/car:
    get:
      tags:
      - Cars Market API
      summary: Market Days Supply
      description: Get the basic information on specifications for a car identified
        by a valid VIN
      operationId: getMDS
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: vin
        in: query
        description: VIN to decode
        schema:
          minLength: 10
          type: string
          format: string
      - name: exact
        in: query
        description: Exact parameter
        schema:
          type: boolean
          default: false
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: debug
        in: query
        description: Debug parameter
        schema:
          type: boolean
          default: false
      - name: include_sold
        in: query
        description: To fetch sold vins
        schema:
          type: boolean
          default: false
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          x-field-config:
            isConfigurable: true
            targetAlias: country
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_id
        in: query
        description: Dealer id to filter the listings.
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: seed_id
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      - name: source
        in: query
        description: To filter listing on their source
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: source
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: urlTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dealership_group_name
        in: query
        description: Name of the dealership group to search for
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dealership_group_name_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealership_group_name_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      responses:
        200:
          description: Provides Market Days supply for year make model or trim combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mds'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: mds
  /sales/car:
    get:
      tags:
      - Cars Market API
      summary: Get sales count by make, model, year, trim or taxonomy vin
      description: Get a sales count for city, state or national level by make, model,
        year, trim or taxonomy vin
      operationId: getSalesCount
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: car_type
        in: query
        description: Inventory type for which sales count is to be searched, default
          is used
        schema:
          type: string
          format: string
          default: used
          enum:
          - new
          - used
      - name: make
        in: query
        description: Make for which sales count is to be searched
        schema:
          type: string
          format: string
      - name: mm
        in: query
        description: Make-Model for which sales count is to be searched, pipe seperated
          like mm=ford|f-150
        schema:
          type: string
          format: string
      - name: ymm
        in: query
        description: Year-Make-Model for which sales count is to be searched, pipe
          seperated like ymm=2015|ford|f-150
        schema:
          type: string
          format: string
      - name: ymmt
        in: query
        description: Year-Make-Model-Trim for which sales count is to be searched,
          pipe seperated like ymmt=2015|ford|f-150|platinum
        schema:
          type: string
          format: string
      - name: taxonomy_vin
        in: query
        description: taxonomy_vin for which sales count is to be searched
        schema:
          type: string
          format: string
      - name: state
        in: query
        description: State level sales count
        schema:
          type: string
          format: string
      - name: city_state
        in: query
        description: City level sales count, pipe seperated like city_state=jacksonville|FL
        schema:
          type: string
          format: string
      - name: vin
        in: query
        description: VIN that will be transformed to taxonomy_vin
        schema:
          type: string
          format: string
      - name: country
        in: query
        description: Country for which the sales records are to be searched
        schema:
          type: string
          default: us
          enum:
          - us
          - ca
          - US
          - CA
      responses:
        200:
          description: Sales count for given parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: market
  /popular/cars:
    get:
      tags:
      - Cars Market API
      summary: Get make model wise top 50 popular cars on national, state, city level
      description: Get make model wise top 50 popular cars on national, state, city
        level
      operationId: getPopularCars
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: state
        in: query
        description: State level sales count
        schema:
          type: string
          format: string
      - name: city_state
        in: query
        description: City level sales count, pipe seperated like city_state=jacksonville|FL
        schema:
          type: string
          format: string
      - name: car_type
        in: query
        description: Inventory type for which popular count is to be searched
        required: true
        schema:
          type: string
          format: string
          enum:
          - new
          - used
      - name: country
        in: query
        description: Country for which the popular cars are to be searched
        schema:
          type: string
          default: us
          enum:
          - us
          - ca
          - US
          - CA
      responses:
        200:
          description: List of most popular top 50 cars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopularCars'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: market
  /stats/car:
    get:
      tags:
      - Cars Market API
      summary: Price, Miles and Days on Market stats
      description: National, state and city level stats for price, miles and dom
      operationId: getDailyStats
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: country
        in: query
        description: Country for which the stats are to be searched
        schema:
          type: string
          format: string
          default: us
          enum:
          - us
          - ca
      - name: car_type
        in: query
        description: Inventory type for which stats are to be searched, default is
          used
        schema:
          type: string
          format: string
          default: used
          enum:
          - new
          - used
      - name: ymm
        in: query
        description: Year, Make, Model of the car, Separated by pipe e.g. ymm=2015|ford|f-150
        schema:
          type: string
          format: string
      - name: ymmt
        in: query
        description: Year, Make, Model, Trim of the car, Separated by pipe e.g. ymmt=2015|ford|f-150|platinum
        schema:
          type: string
          format: string
      - name: taxonomy_vin
        in: query
        description: Taxonomy vin for referance to find stats of similar cars
        schema:
          type: string
          format: string
      - name: vin
        in: query
        description: VIN that will be transformed to taxonomy_vin
        schema:
          type: string
          format: string
      - name: state
        in: query
        description: State level stats
        schema:
          type: string
          format: string
      - name: city_state
        in: query
        description: City level stats, pipe seperated like city_state=jacksonville|FL
        schema:
          type: string
          format: string
      responses:
        200:
          description: Data with Market averages and stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyStats'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: market
  /search/car/active/rank:
    post:
      tags:
      - Rank Car Listings
      summary: Compute relative rank for car listings.
      description: Computer rank for car listings based on inputs provided.Weights
        for ranking parameters can also be provided.
      operationId: searchAndRankCar
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      - name: latitude
        in: query
        description: Latitude component of location
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Longitude component of location
        schema:
          type: number
          format: double
      - name: radius
        in: query
        description: Radius around the search location (Unit - Miles)
        schema:
          maximum: 7000
          minimum: 0
          type: integer
          format: int32
      - name: zip
        in: query
        description: To filter listing on ZIP around which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: zip
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: include_lease
        in: query
        description: Boolean param to search for listings that include leasing options
          in them
        schema:
          type: boolean
      - name: include_finance
        in: query
        description: Boolean param to search for listings that include finance options
          in them
        schema:
          type: boolean
      - name: lease_term
        in: query
        description: Search listings with exact lease term, or inside a range with
          min and max seperated by a dash like lease_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: lease_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: lease_down_payment
        in: query
        description: Search listings with exact down payment in lease offers, or inside
          a range with min and max seperated by a dash like lease_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 5000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      - name: lease_emp
        in: query
        description: Search listings with lease offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like lease_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: l_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 100
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      - name: finance_loan_term
        in: query
        description: Search listings with exact finance loan term, or inside a range
          with min and max seperated by a dash like finance_loan_term=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_term_is
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 48
              defaultMin: 12
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      - name: finance_loan_apr
        in: query
        description: Search listings with finance offers exactly matching loans Annual
          Percentage Rate, or inside a range with min and max seperated by a dash
          like finance_loan_apr=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: loan_apr_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 12
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      - name: finance_emp
        in: query
        description: Search listings with finance offers exactly matching Estimated
          Monthly Payment(EMI), or inside a range with min and max seperated by a
          dash like finance_emp=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_emi_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 3000
              defaultMin: 10
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      - name: finance_down_payment
        in: query
        description: Search listings with exact down payment in finance offers, or
          inside a range with min and max seperated by a dash like finance_down_payment=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 10000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      - name: finance_down_payment_per
        in: query
        description: Search listings with exact down payment percentage in finance
          offers, or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: f_down_pay_per_fs
            isMultiValued: false
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 20
              defaultMin: 1
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      - name: car_type
        in: query
        description: Car type. Allowed values are - new / used / certified
        schema:
          type: string
          enum:
          - new
          - used
          - certified
      - name: carfax_1_owner
        in: query
        description: Indicates whether car has had only one owner or not
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: carfax_clean_title
        in: query
        description: Indicates whether car has clean ownership records
        schema:
          type: string
          enum:
          - "true"
          - "false"
      - name: year
        in: query
        description: To filter listing on their year
        schema:
          minLength: 4
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: year
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              max: 2121
              min: 1800
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      - name: make
        in: query
        description: To filter listings on their make
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: make
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: model
        in: query
        description: To filter listings on their model
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: model
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim
        in: query
        description: To filter listing on their trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vin
        in: query
        description: To filter listing on their VIN
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vin
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 17
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      - name: body_type
        in: query
        description: To filter listing on their body type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: body_subtype
        in: query
        description: Body subtype to filter the listings on. Valid filter values are
          those that our Search facets API returns for unique body subtypes. You can
          pass in multiple body subtype values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: body_subtype
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vehicle_type
        in: query
        description: To filter listing on their vehicle type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: vehicle_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: vins
        in: query
        description: Comma separated list of 17 digit vins to search the matching
          cars for. Only 10 VINs allowed per request. If the request contains more
          than 10 VINs the first 10 VINs will be considered. Could be used as a More
          Like This or Similar Vehicles search for the given VINs. Ths vins parameter
          is an alternative to taxonomy_vins or ymmt parameters available with the
          search API. vins and taxonomy_vins parameters could be used to filter our
          cars with the exact build represented by the vins or taxonomy_vins whereas
          ymmt is a top level filter that does not filter cars by the build attributes
          like doors, drivetrain, cylinders, body type, body subtype, vehicle type
          etc
        schema:
          type: string
      - name: taxonomy_vins
        in: query
        description: Comma separated list of 10 letters excert from the 17 letter
          VIN. The 10 letters to be picked up from the 17 letter VIN are - first 8
          letters and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182
          the taxonomy vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build
          of a car and could be used to filter our cars of a particular build. This
          is an alternative to the vin or ymmt parameters to the search API.
        schema:
          type: string
      - name: ymmt
        in: query
        description: Comma separated list of Year, Make, Model, Trim combinations.
          Each combination needs to have the year,make,model, trim values separated
          by a pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
          6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
          or 'year|make|model' or '|make|model|' combinations. Individual year / make
          / model filters provied with the API calls will take precedence over the
          Year, Make, Model, Trim combinations. The Make, Model, Trim values must
          be valid values as per the Marketcheck Vin Decoder. If you are using a separate
          vin decoder then look at using the 'vins' or 'taxonomy_vins' parameter to
          the search api instead the year|make|model|trim combinations.
        schema:
          type: string
      - name: match
        in: query
        description: Comma separated list of Year, Make, Model, Trim fields. For example
          - year,make,model,trim fields for which user wants to do an exact match
        schema:
          type: string
      - name: cylinders
        in: query
        description: To filter listing on their cylinders
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: cylinders
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: transmission
        in: query
        description: To filter listing on their transmission
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: transmission
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: doors
        in: query
        description: Doors to filter the cars on. Valid filter values are those that
          our Search facets API returns for unique doors. You can pass in multiple
          doors values comma separated
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: doors_is
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: parseInt
              type: integer
              min: 1
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      - name: drivetrain
        in: query
        description: To filter listing on their drivetrain
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: drivetrain
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: exterior_color
        in: query
        description: Exterior color to match. Valid filter values are those that our
          Search facets API returns for unique exterior colors. You can pass in multiple
          exterior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: interior_color
        in: query
        description: Interior color to match. Valid filter values are those that our
          Search facets API returns for unique interior colors. You can pass in multiple
          interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_exterior_color
        in: query
        description: Base exterior color to match. Valid filter values are those that
          our Search facets API returns for unique base exterior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_exterior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: base_interior_color
        in: query
        description: Base interior color to match. Valid filter values are those that
          our Search facets API returns for unique base interior colors. You can pass
          in multiple base interior color values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: base_interior_color
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine
        in: query
        description: To filter listing on their engine
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_size
        in: query
        description: Engine Size to match. Valid filter values are those that our
          Search facets API returns for unique engine size. You can pass in multiple
          engine size values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_size
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_aspiration
        in: query
        description: Engine Aspiration to match. Valid filter values are those that
          our Search facets API returns for unique Engine Aspirations. You can pass
          in multiple Engine aspirations values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_aspiration
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: engine_block
        in: query
        description: Engine Block to match. Valid filter values are those that our
          Search facets API returns for unique Engine Block. You can pass in multiple
          Engine Block values comma separated
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: engine_block_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: highway_mpg_range
        in: query
        description: Highway mileage range to filter listings with the mileage in
          the range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: highway_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: city_mpg_range
        in: query
        description: City mileage range to filter listings with the mileage in the
          range given. Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: city_mpg
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 1000
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      - name: miles_range
        in: query
        description: Miles range to filter listings with miles in the given range.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          default: 1-
          x-field-config:
            isConfigurable: true
            targetAlias: miles
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: price_range
        in: query
        description: Price range to filter listings with the price in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          default: 1-
          x-field-config:
            isConfigurable: true
            targetAlias: price
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: msrp_range
        in: query
        description: MSRP range to filter listings with the msrp in the range given.
          Range to be given in the format - min-max e.g. 1000-5000
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: msrp
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 100000
              defaultMin: 1000
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      - name: dom_range
        in: query
        description: Days on Market range to filter cars with the DOM within the given
          range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: sort_by
        in: query
        description: Sort by field. Default sort field is distance from the given
          point
        schema:
          type: string
          format: string
      - name: sort_order
        in: query
        description: Sort order - asc or desc. Default sort order is asc
        schema:
          type: string
          format: string
          enum:
          - asc
          - desc
          - ASC
          - DESC
      - name: rows
        in: query
        description: Number of results to return. Default is 10. Max is 50
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 10
      - name: start
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 0. Pagination is allowed only till first 10000 results for the search
          and sort criteria. The page value can be only between 1 to 10000/rows
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: include_non_vin_listings
        in: query
        description: To include non vin listings. Default is false
        schema:
          type: boolean
          default: false
      - name: msa_code
        in: query
        description: To filter listing on msa code in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: msa_code
            isMultiValued: true
            separator: ','
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      - name: facets
        in: query
        description: The comma separated list of fields for which facets are requested.
          Facets could be requested in addition to the listings for the search. Please
          note - The API calls with lots of facet fields may take longer to respond.
        schema:
          type: string
      - name: range_facets
        in: query
        description: The comma separated list of numeric fields for which range facets
          are requested. Range facets could be requested in addition to the listings
          for the search. Please note - The API calls with lots of range facet fields
          may take longer to respond.
        schema:
          type: string
      - name: facet_sort
        in: query
        description: Control sort order of facets with this parameter with default
          sort being on count, Other available sort is alphabetical sort, which can
          be obtained by using index as value for this param
        schema:
          type: string
          default: count
          enum:
          - count
          - index
      - name: stats
        in: query
        description: The list of fields for which stats need to be generated based
          on the matching listings for the search criteria. The stats consists of
          mean, max, average and count of listings based on which the stats are calculated
          for the field. Stats could be requested in addition to the listings for
          the search. Please note - The API calls with the stats fields may take longer
          to respond.
        schema:
          type: string
      - name: country
        in: query
        description: To filter listing on Country in which they are listed
        schema:
          type: string
          default: US
          enum:
          - US
          - CA
          - us
          - ca
          - all
          - ALL
      - name: plot
        in: query
        description: If plot has value true results in around 25k coordinates with
          limited fields to plot respective graph
        schema:
          type: boolean
      - name: nodedup
        in: query
        description: If nodedup is set to true then API will give results without
          is_searchable i.e multiple listings for single vin
        schema:
          type: boolean
      - name: dedup
        in: query
        description: If dedup is set to true then will give results with is_searchable
          irrespecive of dealer_id or source
        schema:
          type: boolean
      - name: owned
        in: query
        description: Used in combination with dealer_id or source, when true returns
          the listings actually owned by dealer himself
        schema:
          type: boolean
      - name: state
        in: query
        description: To filter listing on State in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: state
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
              maxLength: 2
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      - name: city
        in: query
        description: To filter listing on City in which they are listed
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: city
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_o
        in: query
        description: Filter listings on web scraped trim
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_orig
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: trim_r
        in: query
        description: Filter trim on custom possible matches
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: trim_r_ss
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dom_active_range
        in: query
        description: Active Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_active_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: dom_180_range
        in: query
        description: Last 180 Days on Market range to filter cars with the DOM within
          the given range. Range to be given in the format - min-max e.g. 10-50
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: dom_180_is
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseInt
              type: integer
              defaultMax: 30
              defaultMin: 0
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      - name: exclude_certified
        in: query
        description: Boolean param to exclude certified cars from search results
        schema:
          type: boolean
      - name: fuel_type
        in: query
        description: To filter listing on their fuel type
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: fuel_type
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: dealer_type
        in: query
        description: Filter based on dealer type independant or franchise
        schema:
          type: string
          enum:
          - franchise
          - independent
          x-field-config:
            isConfigurable: true
            targetAlias: dealer_type
            isMultiValued: false
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: photo_links
        in: query
        description: A boolean indicating whether to include only those listings that
          have photo_links in search results, And discard those that don't have them
        schema:
          type: boolean
      - name: stock_no
        in: query
        description: To filter listing on their stock number on lot
        schema:
          type: string
          x-field-config:
            isConfigurable: true
            targetAlias: stock_no
            isMultiValued: true
            separator: ','
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: last_seen_range
        in: query
        description: Last seen date range to filter listings with the last seen in
          the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
          20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_range
        in: query
        description: First seen date range to filter listings with the first seen
          in the range given. Range to be given in the format [YYYYMMDD] - min-max
          e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_source_range
        in: query
        description: First seen at source date range to filter listings with the first
          seen at source in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: first_seen_at_mc_range
        in: query
        description: First seen at MC date range to filter listings with the first
          seen at MC in the range given. Range to be given in the format [YYYYMMDD]
          - min-max e.g. 20190523-20190623
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      - name: last_seen_days
        in: query
        description: Last seen days range to filter listings with the last seen in
          the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: status_date
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_days
        in: query
        description: First seen days range to filter listings with the first seen
          in the range given. Range to be given in the format - min-max e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: scraped_at
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_source_days
        in: query
        description: First seen at source days range to filter listings with the first
          seen at source in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: relisted_at_date_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: first_seen_at_mc_days
        in: query
        description: First seen at MC days range to filter listings with the first
          seen at MC in the range given. Range to be given in the format - min-max
          e.g. 25-12
        schema:
          type: string
          format: string
          x-field-config:
            isConfigurable: true
            targetAlias: first_scraped_at_dts
            isMultiValued: false
            operator: between
            separator: '-'
            transformConstraints:
            - transformer: parseDate
              type: date
              nowBound: true
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      - name: inventory_type
        in: query
        description: To filter listing on their condition. Either used or new
        schema:
          type: string
          enum:
          - used
          - new
          x-field-config:
            isConfigurable: true
            targetAlias: inventory_type
            isMultiValued: false
            transformConstraints:
            - transformer: caseTransformer
              type: string
            operator: in
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      - name: page
        in: query
        description: Page number to fetch the results for the given criteria. Default
          is 1.
        schema:
          type: number
          format: number
      requestBody:
        description: Inputs needed for ranking a group of car listings
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CarRankRequest'
        required: true
      responses:
        200:
          description: Rank listings based on inputs provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarRankResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
    x-swagger-router-controller: search
  /search/car/active/rank/listings:
    post:
      tags:
      - Rank Car Listings
      summary: Compute relative rank for car listings.
      description: Computer rank for car listings based on inputs provided.Weights
        for ranking parameters can also be provided.
      operationId: rankCar
      parameters:
      - name: api_key
        in: query
        description: The API Authentication Key. Mandatory with all API calls.
        schema:
          type: string
      - name: append_api_key
        in: query
        description: Flag on whether to include api_key in response API urls (if any)
        schema:
          type: boolean
          default: true
      requestBody:
        description: Inputs needed for ranking a group of car listings
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CarRankRequest'
        required: true
      responses:
        200:
          description: Rank listings based on inputs provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarRankResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
    x-swagger-router-controller: search
components:
  schemas:
    CacheImageResponse:
      type: string
      description: Cached JPEG image
      format: binary
    HeavyEquipmentsSearchResponse:
      type: object
      properties:
        num_found:
          type: integer
          description: The number of listings found
        listings:
          type: array
          items:
            $ref: '#/components/schemas/HeavyEquipmentsBaseListing'
        facets:
          type: object
          properties: {}
        stats:
          type: object
          properties: {}
        range_facets:
          type: object
          properties: {}
      description: Heavy Equipments search query response
    HeavyEquipmentsBaseListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the heavy equipment
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the heavy equipment
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the heavy equipment
        msrp:
          type: integer
          description: MSRP for the heavy equipment
        dp_url:
          type: string
          description: Details Page url of the specific heavy equipment
        exterior_color:
          type: string
          description: Exterior color of the heavy equipment
        interior_color:
          type: string
          description: Interior color of the heavy equipment
        seller_type:
          type: string
          description: Seller type for the heavy equipment
        inventory_type:
          type: string
          description: Inventory type of heavy equipment
        stock_no:
          type: string
          description: Stock number of heavy equipment in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/HeavyEquipmentsBuild'
        dist:
          type: number
          description: Distance of the quipments's location from the specified user
            lcoation
          format: double
      description: Base heavy equipment listing
    HeavyEquipmentsBuild:
      type: object
      properties:
        year:
          type: integer
          description: Year of the heavy equipment
        make:
          type: string
          description: Heavy equipment Make
        model:
          type: string
          description: Heavy equipment model
        trim:
          type: string
          description: Trim of the heavy equipment
        body_type:
          type: string
          description: Body type of the heavy equipment
        condition:
          type: string
          description: Heavy equipment condition
        category:
          type: string
          description: Heavy equipment category
        sub_category:
          type: string
          description: Heavy equipment sub_category
        transmission:
          type: string
          description: Transmission of the heavy equipment
        drivetrain:
          type: string
          description: Drivetrain of the heavy equipment
        fuel_type:
          type: string
          description: Fuel type of the heavy equipment
        engine:
          type: string
          description: Engine of the heavy equipment
      description: Describes the Heavy Equipments specification
    HeavyEquipmentsListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the heavy equipment
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the heavy equipment
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the heavy equipment
        msrp:
          type: integer
          description: MSRP for the heavy equipment
        dp_url:
          type: string
          description: Details Page url of the specific heavy equipment
        exterior_color:
          type: string
          description: Exterior color of the heavy equipment
        interior_color:
          type: string
          description: Interior color of the heavy equipment
        seller_type:
          type: string
          description: Seller type for the heavy equipment
        inventory_type:
          type: string
          description: Inventory type of heavy equipment
        stock_no:
          type: string
          description: Stock number of heavy equipment in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        extra:
          $ref: '#/components/schemas/ListingNestExtraAttributes'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/RVBuild'
      description: Represents a full list of attributes available with Marketcheck
        for a car
    RVSearchResponse:
      type: object
      properties:
        num_found:
          type: integer
          description: The number of listings found
        listings:
          type: array
          items:
            $ref: '#/components/schemas/RVBaseListing'
        facets:
          type: object
          properties: {}
        stats:
          type: object
          properties: {}
        range_facets:
          type: object
          properties: {}
      description: RV search query response
    RVBaseListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the RV
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the RV
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the RV
        msrp:
          type: integer
          description: MSRP for the RV
        dp_url:
          type: string
          description: Details Page url of the specific RV
        exterior_color:
          type: string
          description: Exterior color of the RV
        interior_color:
          type: string
          description: Interior color of the RV
        seller_type:
          type: string
          description: Seller type for the RV
        inventory_type:
          type: string
          description: Inventory type of RV
        stock_no:
          type: string
          description: Stock number of RV in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/RVBuild'
        dist:
          type: number
          description: Distance of the RV's location from the specified user lcoation
          format: double
      description: Base RV listing
    RVBuild:
      type: object
      properties:
        year:
          type: integer
          description: Year of the RV
        make:
          type: string
          description: RV Make
        model:
          type: string
          description: RV model
        class:
          type: string
          description: Class of the RV
        slideouts:
          type: string
          description: Slideouts of the RV
        sleeps:
          type: string
          description: Sleeps of the RV
        transmission:
          type: string
          description: Transmission of the RV
        fuel_type:
          type: string
          description: Fuel type of the RV
        engine:
          type: string
          description: Engine of the RV
        area:
          type: string
          description: Area of the RV
        length:
          type: string
          description: Length of the RV
        made_in:
          type: string
          description: Made in of the RV
        gvwr:
          type: string
          description: Gross Vehicle Weight Ratio of RV
      description: Describes the RV specification
    RVListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the RV
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the RV
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the RV
        msrp:
          type: integer
          description: MSRP for the RV
        dp_url:
          type: string
          description: Details Page url of the specific RV
        exterior_color:
          type: string
          description: Exterior color of the RV
        interior_color:
          type: string
          description: Interior color of the RV
        seller_type:
          type: string
          description: Seller type for the RV
        inventory_type:
          type: string
          description: Inventory type of RV
        stock_no:
          type: string
          description: Stock number of RV in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        extra:
          $ref: '#/components/schemas/ListingNestExtraAttributes'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/RVBuild'
      description: Represents a full list of attributes available with Marketcheck
        for a car
    MotorcycleSearchResponse:
      type: object
      properties:
        num_found:
          type: integer
          description: The number of listings found
        listings:
          type: array
          items:
            $ref: '#/components/schemas/MotorcycleBaseListing'
        facets:
          type: object
          properties: {}
        stats:
          type: object
          properties: {}
        range_facets:
          type: object
          properties: {}
      description: Motorcycle search query response
    MotorcycleBaseListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the Motorcycle
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the motorcycle
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the motorcycle
        msrp:
          type: integer
          description: MSRP for the motorcycle
        dp_url:
          type: string
          description: Details Page url of the specific motorcycle
        color:
          type: string
          description: Color of the motorcycle
        seller_type:
          type: string
          description: Seller type for the motorcycle
        inventory_type:
          type: string
          description: Inventory type of motorcycle
        stock_no:
          type: string
          description: Stock number of motorcycle in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/MotorcycleBuild'
        dist:
          type: number
          description: Distance of the motorcycle's location from the specified user
            lcoation
          format: double
      description: Base motorcycle listing
    MotorcycleBuild:
      type: object
      properties:
        year:
          type: integer
          description: Year of the motorcycle
        make:
          type: string
          description: Motorcycle Make
        model:
          type: string
          description: Motorcycle model
        trim:
          type: string
          description: Trim of the motorcycle
        body_type:
          type: string
          description: Body type of the motorcycle
        vehicle_type:
          type: string
          description: Vehicle type of the motorcycle
        transmission:
          type: string
          description: Transmission of the motorcycle
        drivetrain:
          type: string
          description: Drivetrain of the motorcycle
        fuel_type:
          type: string
          description: Fuel type of the motorcycle
        engine:
          type: string
          description: Engine of the motorcycle
        cylinders:
          type: integer
          description: No of cylinders of the motorcycle
        made_in:
          type: string
          description: Made in of the motorcycle
        dry_weight:
          type: string
          description: Dry weight of motorcycle
      description: Describes the Motorcycle specification
    MotorcycleListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the Motorcycle
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the motorcycle
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the motorcycle
        msrp:
          type: integer
          description: MSRP for the motorcycle
        dp_url:
          type: string
          description: Details Page url of the specific motorcycle
        color:
          type: string
          description: Color of the motorcycle
        seller_type:
          type: string
          description: Seller type for the motorcycle
        inventory_type:
          type: string
          description: Inventory type of motorcycle
        stock_no:
          type: string
          description: Stock number of motorcycle in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        source:
          type: string
          description: Source domain of the listing
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        extra:
          $ref: '#/components/schemas/ListingNestExtraAttributes'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/MotorcycleBuild'
      description: Represents a full list of attributes available with Marketcheck
        for a car
    SearchResponse:
      type: object
      properties:
        num_found:
          type: integer
          description: The number of listings found
        listings:
          type: array
          items:
            $ref: '#/components/schemas/BaseListing'
        facets:
          type: object
          properties: {}
        stats:
          type: object
          properties: {}
        range_facets:
          type: object
          properties: {}
      description: Search query response
    SearchAutoCompleteResponse:
      type: object
      properties:
        terms:
          type: array
          items:
            type: object
            properties:
              item:
                type: string
                description: The actual term that either has prefix or contains given
                  input
              count:
                type: integer
                description: The number of listings with item as value for given field
      description: Search auto complete query response
    SpecsAutoCompleteResponse:
      type: object
      properties:
        terms:
          type: array
          items:
            type: string
            description: The actual term that either has prefix or contains given
              input
      description: Specs auto complete query response
    Listing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        rank:
          type: integer
          description: Relative rank of the listing determined by ranking service
        score:
          type: number
          description: Score of the ranked listing as per the ranking criteria determined
            by ranking service
          format: double
        vin:
          type: string
          description: VIN for the car
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the car
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the car
        msrp:
          type: integer
          description: MSRP for the car
        data_source:
          type: string
          description: Data source of the listing
        is_certified:
          type: integer
          description: Certified car
        vdp_url:
          type: string
          description: Vehicle Details Page url of the specific car
        carfax_1_owner:
          type: boolean
          description: Flag to indicate whether listing is carfax_1_owner
        carfax_clean_title:
          type: boolean
          description: Flag to indicate whether listing is carfax_clean_title
        exterior_color:
          type: string
          description: Exterior color of the car
        interior_color:
          type: string
          description: Interior color of the car
        dom:
          type: integer
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
        dom_180:
          type: integer
          description: Days on Market value for the car based on current and last
            6 month listings found in the Marketcheck database for this car
        dom_active:
          type: integer
          description: Days on Market value for the car based on current and last
            30 days listings found in the Marketcheck database for this car
        seller_type:
          type: string
          description: Seller type for the car
        inventory_type:
          type: string
          description: Inventory type of car
        stock_no:
          type: string
          description: Stock number of car in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: integer
          description: Listing last seen at date timestamp
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        first_seen_at_source:
          type: integer
          description: Listing first seen at source relisted timestamp
        first_seen_at_source_date:
          type: string
          description: Listing first seen at source relisted date
        first_seen_at_mc:
          type: integer
          description: Listing first seen at first scraped at MC timestamp
        first_seen_at_mc_date:
          type: string
          description: Listing first seen at first scraped at MC date
        ref_price:
          type: string
          description: Last reported price for the car. If the asking price value
            is not or is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of last_price_dt
            date
        ref_price_dt:
          type: integer
          description: The date at which the last price was reported online. This
            is earlier to last_seen_date
        ref_miles:
          type: string
          description: Last Odometer reading / reported miles usage for the car. If
            the asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the source
            website as of last_miles_dt date
        ref_miles_dt:
          type: integer
          description: The date at which the last miles was reported online. This
            is earlier to last_seen_date
        source:
          type: string
          description: Source domain of the listing
        financing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingFinance'
        leasing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingLease'
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        extra:
          $ref: '#/components/schemas/ListingNestExtraAttributes'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/Build'
      description: Represents a full list of attributes available with Marketcheck
        for a car
    BaseListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        vin:
          type: string
          description: VIN for the car
        heading:
          type: string
          description: Listing title as displayed on the source website
        price:
          type: integer
          description: Asking price for the car
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the car
        msrp:
          type: integer
          description: MSRP for the car
        data_source:
          type: string
          description: Data source of the listing
        is_certified:
          type: integer
          description: Certified car
        vdp_url:
          type: string
          description: Vehicle Details Page url of the specific car
        carfax_1_owner:
          type: boolean
          description: Flag to indicate whether listing is carfax_1_owner
        carfax_clean_title:
          type: boolean
          description: Flag to indicate whether listing is carfax_clean_title
        exterior_color:
          type: string
          description: Exterior color of the car
        interior_color:
          type: string
          description: Interior color of the car
        dom:
          type: integer
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
        dom_180:
          type: integer
          description: Days on Market value for the car based on current and last
            6 month listings found in the Marketcheck database for this car
        dom_active:
          type: integer
          description: Days on Market value for the car based on current and last
            30 days listings found in the Marketcheck database for this car
        seller_type:
          type: string
          description: Seller type for the car
        inventory_type:
          type: string
          description: Inventory type of car
        stock_no:
          type: string
          description: Stock number of car in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: number
          description: Listing last seen at date timestamp
          format: integer
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        ref_price:
          type: string
          description: Last reported price for the car. If the asking price value
            is not or is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of last_price_dt
            date
        ref_price_dt:
          type: integer
          description: The date at which the last price was reported online. This
            is earlier to last_seen_date
        ref_miles:
          type: string
          description: Last Odometer reading / reported miles usage for the car. If
            the asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the source
            website as of last_miles_dt date
        ref_miles_dt:
          type: integer
          description: The date at which the last miles was reported online. This
            is earlier to last_seen_date
        source:
          type: string
          description: Source domain of the listing
        model_code:
          type: string
          description: model_code of the listing
        financing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingFinance'
        leasing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingLease'
        media:
          $ref: '#/components/schemas/ListingNestMedia'
        dealer:
          $ref: '#/components/schemas/NestDealer'
        build:
          $ref: '#/components/schemas/Build'
        dist:
          type: number
          description: Distance of the car's location from the specified user lcoation
          format: double
      description: Minimal set of attributes describing a listing
    CarSearchFacets:
      type: object
      properties:
        year:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        make:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        model:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        trim:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        trim_o:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        trim_r:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        body_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        body_subtype:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        vehicle_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        car_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        drivetrain:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        transmission:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        cylinders:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        fuel_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        exterior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        interior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        base_exterior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        base_interior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        city:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        state:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        doors:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine_size:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine_aspiration:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine_block:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        source:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_name_o:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_name:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        dealer_id:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        data_source:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        carfax_1_owner:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        carfax_clean_title:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        dealer_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
    CarSearchRangeFacets:
      type: object
      properties:
        price:
          type: object
          properties: {}
        miles:
          type: object
          properties: {}
        dom:
          type: object
          properties: {}
        dom_180:
          type: object
          properties: {}
        dom_active:
          type: object
          properties: {}
        msrp:
          type: object
          properties: {}
        lease_term:
          type: object
          properties: {}
        lease_emp:
          type: object
          properties: {}
        lease_down_payment:
          type: object
          properties: {}
        finance_loan_term:
          type: object
          properties: {}
        finance_loan_apr:
          type: object
          properties: {}
        finance_emp:
          type: object
          properties: {}
        finance_down_payment:
          type: object
          properties: {}
    CarSearchStats:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/StatsItem'
        miles:
          $ref: '#/components/schemas/StatsItem'
        dom:
          $ref: '#/components/schemas/StatsItem'
        dom_180:
          $ref: '#/components/schemas/StatsItem'
        dom_active:
          $ref: '#/components/schemas/StatsItem'
        msrp:
          $ref: '#/components/schemas/StatsItem'
        lease_term:
          $ref: '#/components/schemas/StatsItem'
        lease_emp:
          $ref: '#/components/schemas/StatsItem'
        lease_down_payment:
          $ref: '#/components/schemas/StatsItem'
        finance_loan_term:
          $ref: '#/components/schemas/StatsItem'
        finance_loan_apr:
          $ref: '#/components/schemas/StatsItem'
        finance_emp:
          $ref: '#/components/schemas/StatsItem'
        finance_down_payment:
          $ref: '#/components/schemas/StatsItem'
        finance_down_payment_per:
          $ref: '#/components/schemas/StatsItem'
    MotorcycleSearchFacets:
      type: object
      properties:
        year:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        make:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        model:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        trim:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        body_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        vehicle_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        inventory_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        drivetrain:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        transmission:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        cylinders:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        fuel_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        city:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        state:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        source:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_name:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        dealer_id:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
    MotorcycleSearchRangeFacets:
      type: object
      properties:
        price:
          type: object
          properties: {}
        miles:
          type: object
          properties: {}
    MotorcycleSearchStats:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/StatsItem'
        miles:
          $ref: '#/components/schemas/StatsItem'
    HeavyEquipmentsSearchRangeFacets:
      type: object
      properties:
        price:
          type: object
          properties: {}
        miles:
          type: object
          properties: {}
        hours_used:
          type: object
          properties: {}
    HeavyEquipmentsSearchFacets:
      type: object
      properties:
        year:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        make:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        model:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        trim:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        body_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        category:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        sub_category:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        inventory_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        drivetrain:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        transmission:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        cylinders:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        fuel_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        exterior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        interior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        city:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        state:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        source:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_name:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        dealer_id:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
    HeavyEquipmentsSearchStats:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/StatsItem'
        miles:
          $ref: '#/components/schemas/StatsItem'
        hours_used:
          $ref: '#/components/schemas/StatsItem'
    RVSearchFacets:
      type: object
      properties:
        year:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        make:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        model:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        class:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        awnings:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        inventory_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        transmission:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        fuel_type:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        length:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        area:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        sleeps:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        slideouts:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        exterior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        interior_color:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        city:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        state:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        engine:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        source:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        seller_name:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
        dealer_id:
          type: array
          items:
            $ref: '#/components/schemas/FacetItem'
    Location:
      type: object
      properties:
        city:
          type: string
          description: City of the listing
        state:
          type: string
          description: State of the listing
        zip:
          type: string
          description: Zip of the listing
        latitude:
          type: number
          description: Latitude component of the location
          format: double
        longitude:
          type: number
          description: Longitude component of the location
          format: double
      description: Represents a location
    HistoricalListing:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        heading:
          type: string
          description: Listing title as displayed on the source website
        vin:
          type: string
          description: VIN for the car
        price:
          type: integer
          description: Asking price for the car
        miles:
          type: integer
          description: Odometer reading / reported miles usage for the car
        msrp:
          type: integer
          description: MSRP for the car
        data_source:
          type: string
          description: Data source of the listing
        is_certified:
          type: integer
          description: Certified car
        is_searchable:
          type: string
          description: Flag to indicate listing is marked searchable or not
        vdp_url:
          type: string
          description: Vehicle Details Page url of the specific car
        carfax_1_owner:
          type: boolean
          description: Flag to indicate whether listing is carfax_1_owner
        carfax_clean_title:
          type: boolean
          description: Flag to indicate whether listing is carfax_clean_title
        exterior_color:
          type: string
          description: Exterior color of the car
        interior_color:
          type: string
          description: Interior color of the car
        dom:
          type: integer
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
        dom_180:
          type: integer
          description: Days on Market value for the car based on current and last
            6 month listings found in the Marketcheck database for this car
        dom_active:
          type: integer
          description: Days on Market value for the car based on current and last
            30 days listings found in the Marketcheck database for this car
        seller_type:
          type: string
          description: Seller type for the car
        inventory_type:
          type: string
          description: Inventory type of car
        stock_no:
          type: string
          description: Stock number of car in dealers inventory
        last_seen_at:
          type: integer
          description: Listing last seen at (most recent) timestamp
        last_seen_at_date:
          type: string
          description: Listing last seen at (most recent) date
        scraped_at:
          type: integer
          description: Listing last seen at date timestamp
        scraped_at_date:
          type: string
          description: Listing last seen at date
        first_seen_at:
          type: integer
          description: Listing first seen at first scraped timestamp
        first_seen_at_date:
          type: string
          description: Listing first seen at first scraped date
        ref_price:
          type: string
          description: Last reported price for the car. If the asking price value
            is not or is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of last_price_dt
            date
        ref_price_dt:
          type: integer
          description: The date at which the last price was reported online. This
            is earlier to last_seen_date
        ref_miles:
          type: string
          description: Last Odometer reading / reported miles usage for the car. If
            the asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the source
            website as of last_miles_dt date
        ref_miles_dt:
          type: integer
          description: The date at which the last miles was reported online. This
            is earlier to last_seen_date
        source:
          type: string
          description: Source domain of the listing
        financing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingFinance'
        leasing_options:
          type: array
          description: Array of all finance offers for this listing
          items:
            $ref: '#/components/schemas/ListingLease'
        trim_r:
          type: string
          description: Trim of the car
        seller_name:
          type: string
          description: Seller name of the listing from the Marketcheck database
        seller_name_o:
          type: string
          description: Seller name of the listing from the Marketcheck database
        street:
          type: string
          description: Street of the listing
        city:
          type: string
          description: City of the listing
        state:
          type: string
          description: State of the listing
        zip:
          type: string
          description: Zip of the listing
        latitude:
          type: string
          description: Latitude of the listing
        longitude:
          type: string
          description: Longitude of the listing
        dealer_id:
          type: integer
          description: Unique MC assigned dealers id for the listing
        status_date:
          type: integer
          description: Timestamp of status date
      description: Represents a car history entry
    ListingVDP:
      type: object
      properties:
        html:
          type: string
          description: The HTML string for the listing web page
        crawled_at:
          type: number
          description: The timestamp indicating the time when the VDP was cached
        vdp_url:
          type: string
          description: The URL of the VDP
      description: Describes the VDP (Vehicle Details Page) HTML object
    SafetyRating:
      type: object
      properties:
        overall_rating:
          type: number
          description: Overall rating of the Listing on scale 1-5
        roll_over_rating:
          type: number
          description: Roll Over rating of the Listing on scale 1-5
        driver_side_rating:
          type: number
          description: Driver Side rating of the Listing on scale 1-5
        driver_front_rating:
          type: number
          description: Driver front rating of the Listing on scale 1-5
        passenger_front_rating:
          type: number
          description: Passenger front rating of the Listing on scale 1-5
      description: Describes the Safety Ratings of current listing
    DealerLandingPage:
      type: object
      properties:
        html:
          type: string
          description: The HTML string for the listing web page
        crawled_at:
          type: number
          description: The timestamp indicating the time when the SRP was cached
        srp_url:
          type: string
          description: The URL of the SRP
      description: Describes the dealer landing page (SRP) HTML object
    Build:
      type: object
      properties:
        year:
          type: integer
          description: Year of the Car
        make:
          type: string
          description: Car Make
        model:
          type: string
          description: Car model
        trim:
          type: string
          description: Trim of the car
        short_trim:
          type: string
          description: Short trim of the car
        body_type:
          type: string
          description: Body type of the car
        body_subtype:
          type: string
          description: Body subtype of the car
        vehicle_type:
          type: string
          description: Vehicle type of the car
        transmission:
          type: string
          description: Transmission of the car
        drivetrain:
          type: string
          description: Drivetrain of the car
        fuel_type:
          type: string
          description: Fuel type of the car
        engine:
          type: string
          description: Engine of the car
        engine_size:
          type: number
          description: Engine size of the car
          format: double
        engine_block:
          type: string
          description: Engine block of the car
        doors:
          type: integer
          description: No of doors of the car
        cylinders:
          type: integer
          description: No of cylinders of the car
        made_in:
          type: string
          description: Made in of the car
        steering_type:
          type: string
          description: Steering type of the car
        antibrake_sys:
          type: string
          description: Antibrake system of the car
        tank_size:
          type: string
          description: Tank size of the car
        overall_height:
          type: string
          description: Overall height of the car
        overall_length:
          type: string
          description: Overall length of the car
        overall_width:
          type: string
          description: Overall width of the car
        std_seating:
          type: string
          description: Std seating of the car
        opt_seating:
          type: string
          description: opt seating of the car
        highway_miles:
          type: string
          description: Highway miles of the car
        city_miles:
          type: string
          description: City miles of the car
        engine_measure:
          type: string
          description: Engine block of the car
        engine_aspiration:
          type: string
          description: Engine aspiration of the car
        trim_r:
          type: string
          description: Trim_r of the car
      description: Describes the Car specification
    Averages:
      type: object
      properties:
        price:
          type: number
          description: Mean price value for the car
        msrp:
          type: number
          description: Mean msrp value for the car
        miles:
          type: number
          description: Mean miles value for the car
        dom:
          type: number
          description: Average Days on Market value for the car based on all listings
            found in the Marketcheck database for this car
        age:
          type: number
          description: Average age of the car
        units:
          type: number
          description: No of units for this car on the market
    ListingFinance:
      type: object
      properties:
        loan_term:
          type: integer
          description: Loan term for this finance offer
        loan_apr:
          type: number
          description: Loan APR for this finance offer
          format: double
        down_payment:
          type: number
          description: Down payment for this finance offer
          format: double
        down_payment_percentage:
          type: number
          description: down payment percentage for this finance offer
          format: double
        estimated_monthly_payment:
          type: number
          description: estimated monthly payment for this finance offer
          format: double
    ListingLease:
      type: object
      properties:
        lease_term:
          type: integer
          description: Lease term for this lease offer
          format: integer
        down_payment:
          type: number
          description: Down payment for this lease offer
          format: double
        estimated_monthly_payment:
          type: number
          description: estimated monthly payment for this lease offer
          format: double
    ListingNestMedia:
      type: object
      properties:
        photo_links:
          type: array
          description: A list of photo urls for the car
          items:
            type: string
    ListingMedia:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        photo_url:
          type: string
          description: Single photo url of the car
        photo_links:
          type: array
          description: A list of photo urls for the car
          items:
            type: string
    ListingNestExtraAttributes:
      type: object
      properties:
        options:
          type: array
          description: Installed Options of the car
          items:
            type: string
        features:
          type: array
          description: List of Features available with the car
          items:
            type: string
        electronics_f:
          type: array
          description: List of electronic features available with the car
          items:
            type: string
        exterior_f:
          type: array
          description: List of exterior features available with the car
          items:
            type: string
        technical_f:
          type: array
          description: List of technical features available with the car
          items:
            type: string
        standard_f:
          type: array
          description: List of standard features available with the car
          items:
            type: string
        dealer_added_f:
          type: array
          description: List of dealer added features available with the car
          items:
            type: string
        interior_f:
          type: array
          description: List of interior features available with the car
          items:
            type: string
        safety_f:
          type: array
          description: List of safety features available with the car
          items:
            type: string
        seller_comments:
          type: string
          description: Seller comments for the car
    ListingExtraAttributes:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier representing a specific listing from the
            Marketcheck database
        options:
          type: array
          description: Installed Options of the car
          items:
            type: string
        features:
          type: array
          description: List of Features available with the car
          items:
            type: string
        electronics_f:
          type: array
          description: List of electronic features available with the car
          items:
            type: string
        exterior_f:
          type: array
          description: List of exterior features available with the car
          items:
            type: string
        technical_f:
          type: array
          description: List of technical features available with the car
          items:
            type: string
        standard_f:
          type: array
          description: List of standard features available with the car
          items:
            type: string
        dealer_added_f:
          type: array
          description: List of dealer added features available with the car
          items:
            type: string
        interior_f:
          type: array
          description: List of interior features available with the car
          items:
            type: string
        safety_f:
          type: array
          description: List of safety features available with the car
          items:
            type: string
        seller_cmts:
          type: string
          description: Seller comment for the car
    ListingDebugAttributes:
      type: object
      properties:
        robot_id:
          type: number
          description: Robot id
        cycle_id:
          type: number
          description: Cycle id
        scraped_at:
          type: string
          description: Scraped date and time
        template_id:
          type: number
          description: Template id
        user_id:
          type: number
          description: User id
        taxonomy_vin:
          type: string
          description: Taxonomy vin
    DealersResponse:
      type: object
      properties:
        num_found:
          type: integer
          description: number of dealers found
        dealers:
          type: array
          items:
            $ref: '#/components/schemas/Dealer'
      description: Dealers Response
    Dealer:
      type: object
      properties:
        id:
          type: string
          description: The unique id associated with the dealer in the Marketcheck
            database
        seller_name:
          type: string
          description: Name of the dealer
        inventory_url:
          type: string
          description: Website of the dealer
        data_source:
          type: string
          description: Datasource of the dealer
        status:
          type: string
          description: Status of the dealer
        street:
          type: string
          description: Street of the dealer
        city:
          type: string
          description: City of the dealer
        state:
          type: string
          description: State of the dealer
        country:
          type: string
          description: country of the dealer
        zip:
          type: string
          description: Zip of the dealer
        latitude:
          type: string
          description: Latutide for the dealer location
        longitude:
          type: string
          description: Longitude for the dealer location
        location_ll:
          type: string
          description: location_ll for the dealer location
        seller_phone:
          type: string
          description: Contact no of the dealer
        seller_email:
          type: string
          description: Contact email of the dealer
        distance:
          type: number
          description: Distance of dealer from given location
          format: double
    NestDealer:
      type: object
      properties:
        id:
          type: integer
          description: The unique id associated with the dealer in the Marketcheck
            database
        name:
          type: string
          description: Name of the dealer
        website:
          type: string
          description: Website of the dealer
        dealer_type:
          type: string
          description: Type of dealer (franchise/independent)
        street:
          type: string
          description: Street of the dealer
        city:
          type: string
          description: City of the dealer
        state:
          type: string
          description: State of the dealer
        country:
          type: string
          description: country of the dealer
        zip:
          type: string
          description: Zip of the dealer
        latitude:
          type: string
          description: Latutide for the dealer location
        longitude:
          type: string
          description: Longitude for the dealer location
        phone:
          type: string
          description: Contact no of the dealer
        seller_email:
          type: string
          description: Contact email of the dealer
    TrendPoint:
      type: object
      properties:
        price:
          type: number
          description: Price
        miles:
          type: number
          description: Miles
        dom:
          type: number
          description: Days on Market
        units:
          type: number
          description: Units
        msrp:
          type: number
          description: MSRP
    ComparisonPoint:
      type: object
      properties:
        similar_vehicles_count:
          type: number
          description: Similar Vehicles Count
        dealer_indicator:
          type: string
          description: Deal Indicator
        vin_price:
          type: number
          description: Price for Vin
        fair_deal_price:
          type: number
          description: Fair Deal Price
    CompetitorsPoint:
      type: object
      properties:
        current_car:
          $ref: '#/components/schemas/CompetitorsCarDetails'
        similar_car_models:
          type: array
          items:
            $ref: '#/components/schemas/CompetitorsSimilarCars'
        same_car_models:
          type: array
          items:
            $ref: '#/components/schemas/CompetitorsSameCars'
    DepreciationPoint:
      type: object
      properties:
        similar_models:
          type: array
          items:
            $ref: '#/components/schemas/DepreciationStats'
    DealerRating:
      type: object
      properties:
        name:
          type: string
          description: Name of the dealer
        street:
          type: string
          description: Street of the dealer
        city:
          type: string
          description: City of the dealer
        state:
          type: string
          description: State of the dealer
        zip:
          type: string
          description: Zip of the dealer
        latitude:
          type: string
          description: Latutide for the dealer location
        longitude:
          type: string
          description: Longitude for the dealer location
        overall_rating:
          type: number
          description: Overall rating of the dealership on scale 1-5
        rating_components:
          type: array
          items:
            $ref: '#/components/schemas/RatingComponents'
    RatingComponents:
      type: object
      properties:
        rating_condition:
          type: string
          description: Specifices rating condition parameter
        actual_rating:
          type: number
          description: rating of car on that condition
    DealerReview:
      type: object
      properties:
        name:
          type: string
          description: Name of the dealer
        street:
          type: string
          description: Street of the dealer
        city:
          type: string
          description: City of the dealer
        state:
          type: string
          description: State of the dealer
        zip:
          type: string
          description: Zip of the dealer
        latitude:
          type: string
          description: Latutide for the dealer location
        longitude:
          type: string
          description: Longitude for the dealer location
        overall_reviews:
          type: number
          description: Overall reviews of the dealership
        review_components:
          type: array
          items:
            $ref: '#/components/schemas/ReviewComponents'
    ReviewComponents:
      type: object
      properties:
        user_name:
          type: string
          description: Name of user who has given review
        user_rating:
          type: number
          description: rating for dealer given by user ranging from 1-5
        actual_review:
          type: string
          description: review of car given by current user
    FuelEfficiency:
      type: object
      properties:
        city_mileage:
          type: string
          description: City Mileage in MPG
        highway_mileage:
          type: string
          description: Highway Mileage in MPG
        combined_mileage:
          type: string
          description: Combined Mileage
        annual_miles:
          type: number
          description: Annual Miles of Car
        monthly_fuel_expense:
          type: number
          description: Monthly fuel expense
    Economy:
      type: object
      properties:
        ghg_emissions_rating:
          type: number
          description: Show vehicle impact on climate change in terms of greeenhouse
            gases. This rating will be in the range of 1 - 10
        ghg_emissions_indicator:
          type: string
          description: Contains text like bad|Good|Very Good| Excellent
        smog_rating:
          type: number
          description: Shows vehicle's emissions of pollutants known to cause smog
            and other forms of air pollution. This rating will be in the range of
            1 - 10
        smog_indicator:
          type: string
          description: Contains text like bad|Good|Very Good| Excellent
    VinReport:
      type: object
      properties:
        icon:
          type: string
          description: icon url
        some_text:
          type: string
          description: Some descriptional text
    CompetitorsCarDetails:
      type: object
      properties:
        name:
          type: string
          description: Current car name
        price:
          type: string
          description: price of car
        miles:
          type: string
          description: mileage of car
        avg_market_value:
          type: string
          description: Estimated market value
    CompetitorsSimilarCars:
      type: object
      properties:
        name:
          type: string
          description: ymm_comb_name
        avg_price:
          type: number
          description: Average price of year make model combination
        avg_miles:
          type: number
          description: Average mileage of year make model combination
        avg_market_value:
          type: number
          description: Average market value of year make model combination
    CompetitorsSameCars:
      type: object
      properties:
        name:
          type: string
          description: ymm_comb_name
        avg_price:
          type: number
          description: Price of year make model combination
        avg_miles:
          type: number
          description: Mileage of year make model combination
        avg_market_value:
          type: number
          description: Estimated market value of year make model combination
    DepreciationStats:
      type: object
      properties:
        name:
          type: string
          description: ymm_comb_name
        current_value:
          type: number
          description: Price of year make model combination
        one_year_from_now:
          type: number
          description: price after one year from now
        one_year_from_now_percent:
          type: number
          description: price depreciation percent after one year from now
        two_year_from_now:
          type: number
          description: price after two year from now
        two_year_from_now_percent:
          type: number
          description: price depreciation percent after two year from now
        five_year_from_now:
          type: number
          description: price after five year from now
        five_year_from_now_percent:
          type: number
          description: price depreciation percent after five year from now
    PlotPoint:
      type: object
      properties:
        price:
          type: number
          description: Price
        miles:
          type: number
          description: Miles
        vin:
          type: string
          description: Vin
        msrp:
          type: number
          description: Msrp
        dom:
          type: number
          description: DOM
        seller_name:
          type: string
          description: Seller name
        id:
          type: string
          description: Listing id
    Mds:
      type: object
      properties:
        mds:
          type: integer
          description: Provides Market days supply count
        total_active_cars_for_ymmt:
          type: integer
          description: Active cars for ymmt combination
        total_cars_sold_in_last_45_days:
          type: integer
          description: Cars sold in last 45 days
        sold_vins:
          type: array
          description: Sold vins array
          items:
            type: string
            description: Sold vins array
        year:
          type: integer
          description: Year of vin provided
        make:
          type: string
          description: Make of vin provided
        model:
          type: string
          description: Model of vin provided
        trim:
          type: string
          description: Trim of vin provided
      description: Describes Market days supply results for year make model trim combination
    FacetItem:
      type: object
      properties:
        item:
          type: string
          description: Facet item
        count:
          type: integer
          description: Facet item count
    RangeFacetItem:
      type: object
      properties:
        counts:
          type: array
          items:
            type: object
            properties:
              lower_bound:
                type: integer
              upper_bound:
                type: integer
              count:
                type: integer
        gap:
          type: integer
          description: The range gap applied for range faceting
        start:
          type: integer
          description: The start of range
        end:
          type: integer
          description: The end of range
        before:
          type: integer
          description: Number of listings that have field value before range start
        after:
          type: integer
          description: Number of listings that have field value after range end
        between:
          type: integer
          description: Number of listings that have field value between range start
            and range end
    StatsItem:
      type: object
      properties:
        min:
          type: integer
          description: Minimum value of the field
        max:
          type: integer
          description: Maximum value of the field
        count:
          type: integer
          description: count
        missing:
          type: integer
          description: count of listings missing particular field
        sum:
          type: integer
          description: Summation of all values of the field
        mean:
          type: number
          description: Mean of the field
        stddev:
          type: number
          description: stddev of the field
        sum_of_squares:
          type: number
          description: sum_of_squares of the field
        median:
          type: number
          description: median of the field
    PopularityItem:
      type: object
      properties:
        text:
          type: string
          description: 'Description for which popularity should be show eg: 2016 ford
            F-150 Lariat vs All Other Cars'
        left:
          type: number
          description: Left side rating for above description (2016 ford F-150 Lariat)
        right:
          type: number
          description: Right side rating for above description (All Other Cars)
        difference:
          type: number
          description: Difference depending upon left and right analysis
        thumbs:
          type: string
          description: Thumbs up/down depending upon left and right analysis numbers
        delta_percent:
          type: number
          description: Delta percent
        color:
          type: string
          description: Color depending upon left and right analysis numbers
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
    MakeModel:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
    CRMResponse:
      type: object
      properties:
        for_sale:
          type: string
          description: Boolean to indicate whether given vin has had listing after
            given date or not
    Sales:
      type: object
      properties:
        counts:
          type: integer
          description: Sales count
        cpo:
          type: integer
          description: cpo sales count
        non-cpo:
          type: integer
          description: Non-cpo sales count
        inventory_type:
          type: string
          description: inventory_type
        make:
          type: string
          description: Make
        model:
          type: string
          description: model
        year:
          type: string
          description: year
        trim:
          type: string
          description: trim
        taxonomy_vin:
          type: string
          description: taxonomy_vin
        state:
          type: string
          description: State
        city:
          type: string
          description: City
        dom_stats:
          $ref: '#/components/schemas/SalesStats'
        price_stats:
          $ref: '#/components/schemas/SalesStats'
        miles_stats:
          $ref: '#/components/schemas/SalesStats'
      description: Sales count query response
    SalesStats:
      type: object
      properties:
        absolute_mean_deviation:
          type: number
          description: absolute_mean_deviation
        median:
          type: number
          description: median
        population_standard_deviation:
          type: number
          description: population_standard_deviation
        variance:
          type: number
          description: variance
        mean:
          type: number
          description: mean
        weighted_mean:
          type: number
          description: weighted_mean
        trimmed_mean:
          type: number
          description: trimmed_mean
        standard_deviation:
          type: number
          description: standard_deviation
        iqr:
          type: number
          description: iqr
      description: Sales stats response
    PopularCars:
      type: object
      properties:
        used_top50:
          type: array
          description: Array of all used top 50 cars
          items:
            $ref: '#/components/schemas/BasePopular'
        new_top50:
          type: array
          description: Array of all new top 50 cars
          items:
            $ref: '#/components/schemas/BasePopular'
      description: Top 50 popular cars
    BasePopular:
      type: object
      properties:
        inventoryType:
          type: string
          description: Inventory type
        counts:
          type: string
          description: Number of sold listings of this model
        model:
          type: string
          description: Model name
        make:
          type: string
          description: Make name
        state:
          type: string
          description: State
        city:
          type: string
          description: City
        dom_stats:
          $ref: '#/components/schemas/SalesStats'
        price_stats:
          $ref: '#/components/schemas/SalesStats'
        miles_stats:
          $ref: '#/components/schemas/SalesStats'
      description: Single popular car in array
    DailyStats:
      type: object
      properties:
        price_stats:
          $ref: '#/components/schemas/DailyStatsNestedJson'
        miles_stats:
          $ref: '#/components/schemas/DailyStatsNestedJson'
        dom:
          $ref: '#/components/schemas/DailyStatsNestedJson'
        units_for_sale:
          type: number
          description: Number of units of this car for sale on the market
    DailyStatsNestedJson:
      type: object
      properties:
        median:
          type: number
          description: Median
        population_standard_deviation:
          type: number
          description: population standard deviation
        variance:
          type: number
          description: variance
        mean:
          type: number
          description: Mean
        trimmed_mean:
          type: number
          description: Trimmed Mean
        standard_deviation:
          type: number
          description: Standard Deviation
        interquartile_range:
          type: number
          description: Interquartile range
      description: All nested JSON of stats
    CarRankCriteria:
      type: object
      properties:
        price:
          type: number
          description: Asking price for the vehicle. Weight for this is ranking process
            between 0-1.
        miles:
          type: number
          description: Odometer reading / reported miles usage for the car.Weight
            for this is ranking process between 0-1
        is_certified:
          type: number
          description: Certified car.Weight for this is ranking process between 0-1
        carfax_1_owner:
          type: number
          description: Flag to indicate whether listing is carfax_1_owner.Weight for
            this is ranking process between 0-1.
        carfax_clean_title:
          type: number
          description: Flag to indicate whether listing is carfax_clean_title.Weight
            for this is ranking process between 0-1
        dom:
          type: number
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car.Weight for this
            is ranking process between 0-1
        dom_180:
          type: number
          description: Days on Market value for the car based on current and last
            6 month listings found in the Marketcheck database for this car.Weight
            for this is ranking process between 0-1
        dom_active:
          type: number
          description: Days on Market value for the car based on current and last
            30 days listings found in the Marketcheck database for this car.Weight
            for this is ranking process between 0-1
      description: Ranking query request
    CarRankRequest:
      type: object
      properties:
        listing_ids:
          type: array
          items:
            type: string
            description: MC active listing id
        ranking_criteria:
          type: object
          properties: {}
      description: Ranking query request
    CarRankResponse:
      type: object
      properties:
        num_ranked:
          type: integer
          description: The number of listings ranked
        ranked_listings:
          type: array
          items:
            $ref: '#/components/schemas/CarListingRank'
      description: Ranking query response
    CarListingRank:
      type: object
      properties:
        ranked_listing:
          type: object
          properties: {}
      description: Ranking query response
    PricePrediction:
      type: object
      properties:
        predicted_price:
          type: integer
          description: Actual predicted price of a car
        price_range:
          type: object
          properties:
            lower_bound:
              type: integer
              description: Lower bound
            upper_bound:
              type: integer
              description: Upper bound
          description: Price range around the predicted price, estimating the error
            in predicted price
        specs:
          $ref: '#/components/schemas/PredictedSpecs'
      description: Predicted price of a car
      example:
        predicted_price: 37998
        price_range:
          lower_bound: 32913
          upper_bound: 44358
        specs:
          year: 2018
          make: ford
          model: f-150
          trim: xlt
          base_exterior_color: Black
          base_interior_color: Brown
          is_certified: false
          carfax_1_owner: false
          carfax_clean_title: false
          transmission: Automatic
          drivetrain: 4WD
          engine_block: V
          engine_size: 2.7
          cylinders: 6
          doors: 4
          highway_mpg: 23
          city_mpg: 18
          latitude: 44.71164
          longitude: -92.851607
          miles: 28741
    PredictedSpecs:
      type: object
      properties:
        year:
          type: integer
          description: year
        make:
          type: string
          description: make
        model:
          type: string
          description: model
        trim:
          type: string
          description: trim
        base_exterior_color:
          type: string
          description: Base exterior color of vehicle
        base_interior_color:
          type: string
          description: base interior color of vehicle
        is_certified:
          type: boolean
          description: Certified vehicle
        carfax_1_owner:
          type: boolean
          description: Indicates whether car has had only one owner or not
        carfax_clean_title:
          type: boolean
          description: Indicates whether car has clean ownership records
        transmission:
          type: string
          description: transmission
        drivetrain:
          type: string
          description: Drivetrain of the vehicle
        engine_block:
          type: string
          description: Engine block of the vehicle
        engine_size:
          type: number
          description: Engine size
          format: double
        cylinders:
          type: integer
          description: Number of cylinders
        doors:
          type: integer
          description: Number of doors
        highway_mpg:
          type: number
          description: Highway mileage
          format: double
        city_mpg:
          type: number
          description: City mileage
          format: double
        latitude:
          type: number
          description: Latutide for the vehicle location
          format: double
        longitude:
          type: number
          description: Longitude for the vehicle location
          format: double
        miles:
          type: integer
          description: Miles
      description: Specs of predicted vehicle
      example:
        year: 2018
        make: ford
        model: f-150
        trim: xlt
        base_exterior_color: Black
        base_interior_color: Brown
        is_certified: false
        carfax_1_owner: false
        carfax_clean_title: false
        transmission: Automatic
        drivetrain: 4WD
        engine_block: V
        engine_size: 2.7
        cylinders: 6
        doors: 4
        highway_mpg: 23
        city_mpg: 18
        latitude: 44.71164
        longitude: -92.851607
        miles: 28741
  parameters:
    api_key:
      name: api_key
      in: query
      description: The API Authentication Key. Mandatory with all API calls.
      schema:
        type: string
    append_api_key:
      name: append_api_key
      in: query
      description: Flag on whether to include api_key in response API urls (if any)
      schema:
        type: boolean
        default: true
    id:
      name: id
      in: path
      description: Listing id to get all the listing attributes
      required: true
      schema:
        type: string
        format: string
    year:
      name: year
      in: query
      description: To filter listing on their year
      schema:
        minLength: 4
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            max: 2121
            min: 1800
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: year
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: parseInt
          type: integer
          max: 2121
          min: 1800
        operator: in
    make:
      name: make
      in: query
      description: To filter listings on their make
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: make
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: make
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    model:
      name: model
      in: query
      description: To filter listings on their model
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: model
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: model
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    model_o:
      name: model_o
      in: query
      description: To filter listings on their model orig (as described on the webpage)
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: model_o
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: model_o
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    trim:
      name: trim
      in: query
      description: To filter listing on their trim
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: trim
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: trim
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    variant:
      name: variant
      in: query
      description: To filter listing on their variant
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: variant
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: variant
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    search_text:
      name: search_text
      in: query
      description: To search a substring across entire document
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: long_text_copy_field
          isMultiValued: false
          operator: equals
      x-field-config:
        isConfigurable: true
        targetAlias: long_text_copy_field
        isMultiValued: false
        operator: equals
    vin:
      name: vin
      in: query
      description: To filter listing on their VIN
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: vin
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 17
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: vin
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
          maxLength: 17
        operator: in
    inpath_full_vin:
      name: vin
      in: path
      description: The VIN to identify the car. Must be a valid 17 char VIN
      required: true
      schema:
        minLength: 10
        type: string
        format: string
    inventory_type:
      name: inventory_type
      in: query
      description: To filter listing on their condition. Either used or new
      schema:
        type: string
        enum:
        - used
        - new
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: inventory_type
        isMultiValued: false
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    car_type:
      name: car_type
      in: query
      description: Car type. Allowed values are - new / used
      schema:
        type: string
        enum:
        - new
        - used
        x-field-config:
          isConfigurable: true
          targetAlias: inventory_type
          isMultiValued: false
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: inventory_type
        isMultiValued: false
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    stock_no:
      name: stock_no
      in: query
      description: To filter listing on their stock number on lot
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: stock_no
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: stock_no
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    source:
      name: source
      in: query
      description: To filter listing on their source
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: source
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: urlTransformer
          type: string
        operator: in
    car_source:
      name: source
      in: query
      description: To filter listing on their source only for widget requests
      schema:
        type: string
        x-field-config:
          widgetExclusive: true
          isConfigurable: true
          targetAlias: source
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      x-field-config:
        widgetExclusive: true
        isConfigurable: true
        targetAlias: source
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: urlTransformer
          type: string
        operator: in
    inventory_url:
      name: inventory_url
      in: query
      description: inventory_url of dealer to be searched
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: website
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: urlTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: website
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: urlTransformer
          type: string
        operator: in
    dealership_group_name:
      name: dealership_group_name
      in: query
      description: Name of the dealership group to search for
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: dealership_group_name_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: dealership_group_name_ss
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    dealer_name:
      name: dealer_name
      in: query
      description: Filter listings on dealer_name
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: seller_name
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: seller_name
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    dealer_id:
      name: dealer_id
      in: query
      description: Dealer id to filter the listings.
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: seed_id
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: seed_id
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: parseInt
          type: integer
        operator: in
    dealer_type:
      name: dealer_type
      in: query
      description: Filter based on dealer type independant or franchise
      schema:
        type: string
        enum:
        - franchise
        - independent
        x-field-config:
          isConfigurable: true
          targetAlias: dealer_type
          isMultiValued: false
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: dealer_type
        isMultiValued: false
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    include_non_vin_listings:
      name: include_non_vin_listings
      in: query
      description: To include non vin listings. Default is false
      schema:
        type: boolean
        default: false
    color:
      name: color
      in: query
      description: Color of the vehicle
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: color
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    exterior_color:
      name: exterior_color
      in: query
      description: Exterior color to match. Valid filter values are those that our
        Search facets API returns for unique exterior colors. You can pass in multiple
        exterior color values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: exterior_color
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    interior_color:
      name: interior_color
      in: query
      description: Interior color to match. Valid filter values are those that our
        Search facets API returns for unique interior colors. You can pass in multiple
        interior color values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: interior_color
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    base_exterior_color:
      name: base_exterior_color
      in: query
      description: Base exterior color to match. Valid filter values are those that
        our Search facets API returns for unique base exterior colors. You can pass
        in multiple base interior color values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: base_exterior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: base_exterior_color
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    base_interior_color:
      name: base_interior_color
      in: query
      description: Base interior color to match. Valid filter values are those that
        our Search facets API returns for unique base interior colors. You can pass
        in multiple base interior color values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: base_interior_color
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: base_interior_color
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    body_type:
      name: body_type
      in: query
      description: To filter listing on their body type
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: body_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: body_type
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    body_subtype:
      name: body_subtype
      in: query
      description: Body subtype to filter the listings on. Valid filter values are
        those that our Search facets API returns for unique body subtypes. You can
        pass in multiple body subtype values comma separated
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: body_subtype
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: body_subtype
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    vehicle_type:
      name: vehicle_type
      in: query
      description: To filter listing on their vehicle type
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: vehicle_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: vehicle_type
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    cylinders:
      name: cylinders
      in: query
      description: To filter listing on their cylinders
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: cylinders
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: cylinders
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    drivetrain:
      name: drivetrain
      in: query
      description: To filter listing on their drivetrain
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: drivetrain
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: drivetrain
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    transmission:
      name: transmission
      in: query
      description: To filter listing on their transmission
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: transmission
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: transmission
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    engine:
      name: engine
      in: query
      description: To filter listing on their engine
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: engine
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: engine
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    engine_size:
      name: engine_size
      in: query
      description: Engine Size to match. Valid filter values are those that our Search
        facets API returns for unique engine size. You can pass in multiple engine
        size values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: engine_size
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: engine_size
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    engine_block:
      name: engine_block
      in: query
      description: Engine Block to match. Valid filter values are those that our Search
        facets API returns for unique Engine Block. You can pass in multiple Engine
        Block values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: engine_block_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: engine_block_ss
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    fuel_type:
      name: fuel_type
      in: query
      description: To filter listing on their fuel type
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: fuel_type
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: fuel_type
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    city:
      name: city
      in: query
      description: To filter listing on City in which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: city
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: city
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    state:
      name: state
      in: query
      description: To filter listing on State in which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: state
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: state
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
          maxLength: 2
        operator: in
    county:
      name: county
      in: query
      description: To filter listing on county in which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: county
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: county
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    country:
      name: country
      in: query
      description: To filter listing on Country in which they are listed
      schema:
        type: string
        default: US
        enum:
        - US
        - CA
        - us
        - ca
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: country
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
          maxLength: 2
        operator: in
    non_default_country:
      name: country
      in: query
      description: To filter listing on Country in which they are listed
      schema:
        type: string
        enum:
        - US
        - CA
        - us
        - ca
        - uk
        - england
        - scotland
        - northan ireland
        - wales
        x-field-config:
          isConfigurable: true
          targetAlias: country
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
            maxLength: 2
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: country
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
          maxLength: 2
        operator: in
    zip:
      name: zip
      in: query
      description: To filter listing on ZIP around which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: zip
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: zip
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    postal_code:
      name: postal_code
      in: query
      description: To filter listing on postal code around which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: postal_code
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: postal_code
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    sort_by:
      name: sort_by
      in: query
      description: Sort by field. Default sort field is distance from the given point
      schema:
        type: string
        format: string
    sort_order:
      name: sort_order
      in: query
      description: Sort order - asc or desc. Default sort order is asc
      schema:
        type: string
        format: string
        enum:
        - asc
        - desc
        - ASC
        - DESC
    start:
      name: start
      in: query
      description: Page number to fetch the results for the given criteria. Default
        is 0. Pagination is allowed only till first 10000 results for the search and
        sort criteria. The page value can be only between 1 to 10000/rows
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    rows:
      name: rows
      in: query
      description: Number of results to return. Default is 10. Max is 50
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 10
    msa_code:
      name: msa_code
      in: query
      description: To filter listing on msa code in which they are listed
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: msa_code
          isMultiValued: true
          separator: ','
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: msa_code
        isMultiValued: true
        separator: ','
        operator: in
    facets:
      name: facets
      in: query
      description: The comma separated list of fields for which facets are requested.
        Facets could be requested in addition to the listings for the search. Please
        note - The API calls with lots of facet fields may take longer to respond.
      schema:
        type: string
    range_facets:
      name: range_facets
      in: query
      description: The comma separated list of numeric fields for which range facets
        are requested. Range facets could be requested in addition to the listings
        for the search. Please note - The API calls with lots of range facet fields
        may take longer to respond.
      schema:
        type: string
    stats:
      name: stats
      in: query
      description: The list of fields for which stats need to be generated based on
        the matching listings for the search criteria. The stats consists of mean,
        max, average and count of listings based on which the stats are calculated
        for the field. Stats could be requested in addition to the listings for the
        search. Please note - The API calls with the stats fields may take longer
        to respond.
      schema:
        type: string
    facet_sort:
      name: facet_sort
      in: query
      description: Control sort order of facets with this parameter with default sort
        being on count, Other available sort is alphabetical sort, which can be obtained
        by using index as value for this param
      schema:
        type: string
        default: count
        enum:
        - count
        - index
    latitude:
      name: latitude
      in: query
      description: Latitude component of location
      schema:
        type: number
        format: double
    longitude:
      name: longitude
      in: query
      description: Longitude component of location
      schema:
        type: number
        format: double
    radius:
      name: radius
      in: query
      description: Radius around the search location (Unit - Miles)
      schema:
        maximum: 7000
        minimum: 0
        type: integer
        format: int32
    highway_mpg_range:
      name: highway_mpg_range
      in: query
      description: Highway mileage range to filter listings with the mileage in the
        range given. Range to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: highway_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      x-field-config:
        isConfigurable: true
        targetAlias: highway_mpg
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 1000
          defaultMin: 0
    city_mpg_range:
      name: city_mpg_range
      in: query
      description: City mileage range to filter listings with the mileage in the range
        given. Range to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: city_mpg
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 0
      x-field-config:
        isConfigurable: true
        targetAlias: city_mpg
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 1000
          defaultMin: 0
    listing_count_range:
      name: listing_count_range
      in: query
      description: To filter dealers based on their inventory size. Range can be given
        in the format - min-max e.g. 50-100
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: listing_count
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 500
            defaultMin: 10
      x-field-config:
        isConfigurable: true
        targetAlias: listing_count
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 500
          defaultMin: 10
    year_range:
      name: year_range
      in: query
      description: Year range to filter listings with the year in the range given.
        Range to be given in the format - min-max e.g. 2019-2021
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: year
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 2100
            defaultMin: 1900
      x-field-config:
        isConfigurable: true
        targetAlias: year
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 2100
          defaultMin: 1900
    price_range:
      name: price_range
      in: query
      description: Price range to filter listings with the price in the range given.
        Range to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: price
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 100000
          defaultMin: 1000
    rank_price_range:
      name: price_range
      in: query
      description: Price range to filter listings with the price in the range given.
        Range to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        default: 1-
        x-field-config:
          isConfigurable: true
          targetAlias: price
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: price
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 100000
          defaultMin: 1000
    msrp_range:
      name: msrp_range
      in: query
      description: MSRP range to filter listings with the msrp in the range given.
        Range to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: msrp
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: msrp
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 100000
          defaultMin: 1000
    miles_range:
      name: miles_range
      in: query
      description: Miles range to filter listings with miles in the given range. Range
        to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: miles
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 100000
          defaultMin: 1000
    rank_miles_range:
      name: miles_range
      in: query
      description: Miles range to filter listings with miles in the given range. Range
        to be given in the format - min-max e.g. 1000-5000
      schema:
        type: string
        format: string
        default: 1-
        x-field-config:
          isConfigurable: true
          targetAlias: miles
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 100000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: miles
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 100000
          defaultMin: 1000
    dom_range:
      name: dom_range
      in: query
      description: Days on Market range to filter cars with the DOM within the given
        range. Range to be given in the format - min-max e.g. 10-50
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: dom_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      x-field-config:
        isConfigurable: true
        targetAlias: dom_is
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 30
          defaultMin: 0
    dom_active_range:
      name: dom_active_range
      in: query
      description: Active Days on Market range to filter cars with the DOM within
        the given range. Range to be given in the format - min-max e.g. 10-50
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: dom_active_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      x-field-config:
        isConfigurable: true
        targetAlias: dom_active_is
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 30
          defaultMin: 0
    dom_180_range:
      name: dom_180_range
      in: query
      description: Last 180 Days on Market range to filter cars with the DOM within
        the given range. Range to be given in the format - min-max e.g. 10-50
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: dom_180_is
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 30
            defaultMin: 0
      x-field-config:
        isConfigurable: true
        targetAlias: dom_180_is
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 30
          defaultMin: 0
    car_include_lease:
      name: include_lease
      in: query
      description: Boolean param to search for listings that include leasing options
        in them
      schema:
        type: boolean
    car_include_finance:
      name: include_finance
      in: query
      description: Boolean param to search for listings that include finance options
        in them
      schema:
        type: boolean
    lease_term:
      name: lease_term
      in: query
      description: Search listings with exact lease term, or inside a range with min
        and max seperated by a dash like lease_term=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: lease_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      x-field-config:
        isConfigurable: true
        targetAlias: lease_term_is
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 48
          defaultMin: 12
    lease_down_payment:
      name: lease_down_payment
      in: query
      description: Search listings with exact down payment in lease offers, or inside
        a range with min and max seperated by a dash like lease_down_payment=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: l_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 5000
            defaultMin: 100
      x-field-config:
        isConfigurable: true
        targetAlias: l_down_pay_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 5000
          defaultMin: 100
    lease_emp:
      name: lease_emp
      in: query
      description: Search listings with lease offers exactly matching Estimated Monthly
        Payment(EMI), or inside a range with min and max seperated by a dash like
        lease_emp=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: l_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 1000
            defaultMin: 100
      x-field-config:
        isConfigurable: true
        targetAlias: l_emi_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 1000
          defaultMin: 100
    finance_loan_term:
      name: finance_loan_term
      in: query
      description: Search listings with exact finance loan term, or inside a range
        with min and max seperated by a dash like finance_loan_term=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: loan_term_is
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 48
            defaultMin: 12
      x-field-config:
        isConfigurable: true
        targetAlias: loan_term_is
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 48
          defaultMin: 12
    finance_loan_apr:
      name: finance_loan_apr
      in: query
      description: Search listings with finance offers exactly matching loans Annual
        Percentage Rate, or inside a range with min and max seperated by a dash like
        finance_loan_apr=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: loan_apr_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 12
            defaultMin: 1
      x-field-config:
        isConfigurable: true
        targetAlias: loan_apr_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 12
          defaultMin: 1
    finance_emp:
      name: finance_emp
      in: query
      description: Search listings with finance offers exactly matching Estimated
        Monthly Payment(EMI), or inside a range with min and max seperated by a dash
        like finance_emp=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: f_emi_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 3000
            defaultMin: 10
      x-field-config:
        isConfigurable: true
        targetAlias: f_emi_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 3000
          defaultMin: 10
    finance_down_payment:
      name: finance_down_payment
      in: query
      description: Search listings with exact down payment in finance offers, or inside
        a range with min and max seperated by a dash like finance_down_payment=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 10000
            defaultMin: 1000
      x-field-config:
        isConfigurable: true
        targetAlias: f_down_pay_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 10000
          defaultMin: 1000
    finance_down_payment_per:
      name: finance_down_payment_per
      in: query
      description: Search listings with exact down payment percentage in finance offers,
        or inside a range with min and max seperated by a dash like finance_down_payment_per=30-60
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: f_down_pay_per_fs
          isMultiValued: false
          separator: '-'
          transformConstraints:
          - transformer: parseInt
            type: integer
            defaultMax: 20
            defaultMin: 1
      x-field-config:
        isConfigurable: true
        targetAlias: f_down_pay_per_fs
        isMultiValued: false
        separator: '-'
        transformConstraints:
        - transformer: parseInt
          type: integer
          defaultMax: 20
          defaultMin: 1
    car_car_type:
      name: car_type
      in: query
      description: Car type. Allowed values are - new / used / certified
      schema:
        type: string
        enum:
        - new
        - used
        - certified
    car_seller_type:
      name: seller_type
      in: query
      description: Seller type to filter cars on. Valid filter values are those that
        our Search facets API returns for unique seller types. You can pass in multiple
        seller type values comma separated.
      schema:
        type: string
        format: string
        default: dealer
    car_country:
      name: country
      in: query
      description: To filter listing on Country in which they are listed
      schema:
        type: string
        default: US
        enum:
        - US
        - CA
        - us
        - ca
        - all
        - ALL
    car_uk_country:
      name: country
      in: query
      description: To filter listing on Country in which they are listed
      schema:
        type: string
        default: uk
        enum:
        - uk
        - england
        - scotland
        - northan ireland
        - wales
    carfax_1_owner:
      name: carfax_1_owner
      in: query
      description: Indicates whether car has had only one owner or not
      schema:
        type: string
        enum:
        - "true"
        - "false"
    carfax_clean_title:
      name: carfax_clean_title
      in: query
      description: Indicates whether car has clean ownership records
      schema:
        type: string
        enum:
        - "true"
        - "false"
    car_vins:
      name: vins
      in: query
      description: Comma separated list of 17 digit vins to search the matching cars
        for. Only 10 VINs allowed per request. If the request contains more than 10
        VINs the first 10 VINs will be considered. Could be used as a More Like This
        or Similar Vehicles search for the given VINs. Ths vins parameter is an alternative
        to taxonomy_vins or ymmt parameters available with the search API. vins and
        taxonomy_vins parameters could be used to filter our cars with the exact build
        represented by the vins or taxonomy_vins whereas ymmt is a top level filter
        that does not filter cars by the build attributes like doors, drivetrain,
        cylinders, body type, body subtype, vehicle type etc
      schema:
        type: string
    car_taxonomy_vins:
      name: taxonomy_vins
      in: query
      description: Comma separated list of 10 letters excert from the 17 letter VIN.
        The 10 letters to be picked up from the 17 letter VIN are - first 8 letters
        and the 10th and 11th letter. E.g. For a VIN - 1FTFW1EF3EKE57182 the taxonomy
        vin would be - 1FTFW1EFEK  A taxonomy VIN identified a build of a car and
        could be used to filter our cars of a particular build. This is an alternative
        to the vin or ymmt parameters to the search API.
      schema:
        type: string
    car_plot:
      name: plot
      in: query
      description: If plot has value true results in around 25k coordinates with limited
        fields to plot respective graph
      schema:
        type: boolean
    car_nodedup:
      name: nodedup
      in: query
      description: If nodedup is set to true then API will give results without is_searchable
        i.e multiple listings for single vin
      schema:
        type: boolean
    car_dedup:
      name: dedup
      in: query
      description: If dedup is set to true then will give results with is_searchable
        irrespecive of dealer_id or source
      schema:
        type: boolean
    owned:
      name: owned
      in: query
      description: Used in combination with dealer_id or source, when true returns
        the listings actually owned by dealer himself
      schema:
        type: boolean
    last_seen_range:
      name: last_seen_range
      in: query
      description: Last seen date range to filter listings with the last seen in the
        range given. Range to be given in the format [YYYYMMDD] - min-max e.g. 20190523-20190623
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      x-field-config:
        isConfigurable: true
        targetAlias: status_date
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
    last_seen_days:
      name: last_seen_days
      in: query
      description: Last seen days range to filter listings with the last seen in the
        range given. Range to be given in the format - min-max e.g. 25-12
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: status_date
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      x-field-config:
        isConfigurable: true
        targetAlias: status_date
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
          nowBound: true
    first_seen_range:
      name: first_seen_range
      in: query
      description: First seen date range to filter listings with the first seen in
        the range given. Range to be given in the format [YYYYMMDD] - min-max e.g.
        20190523-20190623
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      x-field-config:
        isConfigurable: true
        targetAlias: scraped_at
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
    first_seen_days:
      name: first_seen_days
      in: query
      description: First seen days range to filter listings with the first seen in
        the range given. Range to be given in the format - min-max e.g. 25-12
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: scraped_at
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      x-field-config:
        isConfigurable: true
        targetAlias: scraped_at
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
          nowBound: true
    first_seen_at_source_range:
      name: first_seen_at_source_range
      in: query
      description: First seen at source date range to filter listings with the first
        seen at source in the range given. Range to be given in the format [YYYYMMDD]
        - min-max e.g. 20190523-20190623
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      x-field-config:
        isConfigurable: true
        targetAlias: relisted_at_date_dts
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
    first_seen_at_source_days:
      name: first_seen_at_source_days
      in: query
      description: First seen at source days range to filter listings with the first
        seen at source in the range given. Range to be given in the format - min-max
        e.g. 25-12
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: relisted_at_date_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      x-field-config:
        isConfigurable: true
        targetAlias: relisted_at_date_dts
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
          nowBound: true
    first_seen_at_mc_range:
      name: first_seen_at_mc_range
      in: query
      description: First seen at MC date range to filter listings with the first seen
        at MC in the range given. Range to be given in the format [YYYYMMDD] - min-max
        e.g. 20190523-20190623
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
      x-field-config:
        isConfigurable: true
        targetAlias: first_scraped_at_dts
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
    first_seen_at_mc_days:
      name: first_seen_at_mc_days
      in: query
      description: First seen at MC days range to filter listings with the first seen
        at MC in the range given. Range to be given in the format - min-max e.g. 25-12
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: first_scraped_at_dts
          isMultiValued: false
          operator: between
          separator: '-'
          transformConstraints:
          - transformer: parseDate
            type: date
            nowBound: true
      x-field-config:
        isConfigurable: true
        targetAlias: first_scraped_at_dts
        isMultiValued: false
        operator: between
        separator: '-'
        transformConstraints:
        - transformer: parseDate
          type: date
          nowBound: true
    mm:
      name: mm
      in: query
      description: Make-Model concatenated string. To help passing the results of
        auto-complete API on mm field, use this parameter and pass in the selected
        value as is
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: mm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      x-field-config:
        isConfigurable: true
        targetAlias: mm
        isMultiValued: false
        operator: equals
        transformConstraints:
        - transformer: caseTransformer
          type: string
    ymm:
      name: ymm
      in: query
      description: Year-Make-Model concatenated string. To help passing the results
        of auto-complete API on ymm field, use this parameter and pass in the selected
        value as is
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: ymm
          isMultiValued: false
          operator: equals
          transformConstraints:
          - transformer: caseTransformer
            type: string
      x-field-config:
        isConfigurable: true
        targetAlias: ymm
        isMultiValued: false
        operator: equals
        transformConstraints:
        - transformer: caseTransformer
          type: string
    ymmt:
      name: ymmt
      in: query
      description: Comma separated list of Year, Make, Model, Trim combinations. Each
        combination needs to have the year,make,model, trim values separated by a
        pipe '|' character in the form year|make|model|trim. e.g. 2010|Audi|A5,2014|Nissan|Sentra|S
        6MT,|Honda|City|   You could just provide strings of the form - 'year|make||'
        or 'year|make|model' or '|make|model|' combinations. Individual year / make
        / model filters provied with the API calls will take precedence over the Year,
        Make, Model, Trim combinations. The Make, Model, Trim values must be valid
        values as per the Marketcheck Vin Decoder. If you are using a separate vin
        decoder then look at using the 'vins' or 'taxonomy_vins' parameter to the
        search api instead the year|make|model|trim combinations.
      schema:
        type: string
    match:
      name: match
      in: query
      description: Comma separated list of Year, Make, Model, Trim fields. For example
        - year,make,model,trim fields for which user wants to do an exact match
      schema:
        type: string
    doors:
      name: doors
      in: query
      description: Doors to filter the cars on. Valid filter values are those that
        our Search facets API returns for unique doors. You can pass in multiple doors
        values comma separated
      schema:
        type: string
        format: string
        x-field-config:
          isConfigurable: true
          targetAlias: doors_is
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: parseInt
            type: integer
            min: 1
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: doors_is
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: parseInt
          type: integer
          min: 1
        operator: in
    engine_aspiration:
      name: engine_aspiration
      in: query
      description: Engine Aspiration to match. Valid filter values are those that
        our Search facets API returns for unique Engine Aspirations. You can pass
        in multiple Engine aspirations values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: engine_aspiration
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: engine_aspiration
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    trim_o:
      name: trim_o
      in: query
      description: Filter listings on web scraped trim
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: trim_orig
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: trim_orig
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    trim_r:
      name: trim_r
      in: query
      description: Filter trim on custom possible matches
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: trim_r_ss
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: trim_r_ss
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    exclude_certified:
      name: exclude_certified
      in: query
      description: Boolean param to exclude certified cars from search results
      schema:
        type: boolean
    photo_links:
      name: photo_links
      in: query
      description: A boolean indicating whether to include only those listings that
        have photo_links in search results, And discard those that don't have them
      schema:
        type: boolean
    nhtsa_recall_number:
      name: nhtsa_recall_number
      in: query
      description: nhtsa_recall_number to match. You can pass in multiple nhtsa_recall_number
        values comma separated
      schema:
        type: string
        x-field-config:
          isConfigurable: true
          targetAlias: nhtsa_recall_number
          isMultiValued: true
          separator: ','
          transformConstraints:
          - transformer: caseTransformer
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: nhtsa_recall_number
        isMultiValued: true
        separator: ','
        transformConstraints:
        - transformer: caseTransformer
          type: string
        operator: in
    include_relevant_links:
      name: include_relevant_links
      in: query
      description: To include_relevant_links. Default is true
      schema:
        type: boolean
        default: false
    expired:
      name: expired
      in: query
      description: Boolean falg to either fetch only the expired listings or active
        ones
      schema:
        type: string
        enum:
        - "true"
        - "false"
        x-field-config:
          isConfigurable: true
          targetAlias: is_expired_listing
          isMultiValued: false
          transformConstraints:
          - transformer: boolToFlag
            type: string
          operator: in
      x-field-config:
        isConfigurable: true
        targetAlias: is_expired_listing
        isMultiValued: false
        transformConstraints:
        - transformer: boolToFlag
          type: string
        operator: in
  securitySchemes:
    authorizeEndpoint:
      type: http
      scheme: basic
