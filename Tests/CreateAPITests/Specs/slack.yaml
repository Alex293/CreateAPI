openapi: 3.0.1
info:
  title: Slack Web API
  description: One way to interact with the Slack platform is its HTTP RPC-based Web
    API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace
    tokens blessed with related OAuth scopes.
  version: "1.2"
externalDocs:
  description: Learn more about the Slack Web API
  url: https://api.slack.com/web
servers:
- url: https://slack.com/api
paths:
  /api.test:
    get:
      tags:
      - api
      description: Checks API calling code.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/api.test
      operationId: api_test
      parameters:
      - name: foo
        in: query
        description: example property to return
        schema:
          type: string
      - name: error
        in: query
        description: Error response to return
        schema:
          type: string
      responses:
        200:
          description: Standard success response
          content:
            application/json:
              schema:
                title: api.test success schema
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: Schema for successful response api.test method
              example:
                ok: true
        default:
          description: Artificial error response
          content:
            application/json:
              schema:
                title: api.test error schema
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: Schema for error response api.test method
              example:
                args:
                  error: my_error
                error: my_error
                ok: false
      security:
      - slackAuth:
        - none
  /apps.permissions.info:
    get:
      tags:
      - apps.permissions
      - apps
      description: Returns list of permissions this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.info
      operationId: apps_permissions_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      responses:
        200:
          description: Standard success response when used with a user token
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                info:
                  app_home:
                    resources:
                      ids:
                      - D0C0NU1Q8
                      - D0BH95DLH
                    scopes:
                    - chat:write
                    - im:history
                    - im:read
                  channel:
                    resources:
                      excluded_ids: []
                      ids:
                      - C061FA5PB
                      wildcard: false
                    scopes:
                    - channels:read
                  group:
                    resources:
                      ids: []
                    scopes: []
                  im:
                    resources:
                      ids: []
                    scopes: []
                  mpim:
                    resources:
                      ids: []
                    scopes: []
                  team:
                    resources:
                      ids: []
                    scopes: []
                ok: true
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - none
  /apps.permissions.request:
    get:
      tags:
      - apps.permissions
      - apps
      description: Allows an app to request additional scopes
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.request
      operationId: apps_permissions_request
      parameters:
      - name: scopes
        in: query
        description: A comma separated list of scopes to request for
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      - name: trigger_id
        in: query
        description: Token used to trigger the permissions API
        schema:
          type: string
      responses:
        200:
          description: Standard success response when used with a user token
          content:
            application/json:
              schema:
                title: apps.permissions.request schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from apps.permissions.request
                  method
              example:
                ok: true
        default:
          description: Standard failure response when trigger_id is invalid
          content:
            application/json:
              schema:
                title: apps.permissions.request error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.request
                  method
              example:
                error: invalid_trigger_id
                ok: false
      security:
      - slackAuth:
        - none
  /apps.permissions.resources.list:
    get:
      tags:
      - apps.permissions.resources
      - apps
      description: Returns list of resource grants this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.resources.list
      operationId: apps_permissions_resources_list
      parameters:
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return.
        schema:
          type: integer
      responses:
        200:
          description: Typical successful paginated response
          content:
            application/json:
              schema:
                title: apps.permissions.resources.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response apps.permissions.resources.list
                  method
              example:
                ok: true
                resources:
                - id: T0DES3UAN
                  type: team
                - id: D024BFF1M
                  type: app_home
                - id: C024BE91L
                  type: channel
                response_metadata:
                  next_cursor: dGVhbTpDMUg5UkVTR0w=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: apps.permissions.resources.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.resources.list
                  method
              example:
                error: invalid_cursor
                ok: false
      security:
      - slackAuth:
        - none
  /apps.permissions.scopes.list:
    get:
      tags:
      - apps.permissions.scopes
      - apps
      description: Returns list of scopes this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.scopes.list
      operationId: apps_permissions_scopes_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      responses:
        200:
          description: Typical successful paginated response
          content:
            application/json:
              schema:
                title: api.permissions.scopes.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response api.permissions.scopes.list
                  method
              example:
                ok: true
                scopes:
                  app_home:
                  - chat:write
                  - im:history
                  - im:read
                  channel:
                  - channels:history
                  - chat:write
                  group:
                  - chat:write
                  im:
                  - chat:write
                  mpim:
                  - chat:write
                  team:
                  - users:read
                  user: []
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: apps.permissions.scopes.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.scopes.list
                  method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - none
  /auth.revoke:
    get:
      tags:
      - auth
      description: Revokes a token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.revoke
      operationId: auth_revoke
      parameters:
      - name: test
        in: query
        description: Setting this parameter to `1` triggers a _testing mode_ where
          the specified token will not actually be revoked.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: auth.revoke schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from auth.revoke method
              example:
                ok: true
                revoked: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: auth.revoke error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from auth.revoke method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - none
  /auth.test:
    get:
      tags:
      - auth
      description: Checks authentication & identity.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.test
      operationId: auth_test
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      responses:
        200:
          description: Standard success response when used with a user token
          content:
            application/json:
              schema:
                title: auth.test success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response auth.test method
              example:
                ok: true
                team: Subarachnoid Workspace
                team_id: T12345678
                url: https://subarachnoid.slack.com/
                user: grace
                user_id: W12345678
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              schema:
                title: auth.test error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response auth.test method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - none
  /bots.info:
    get:
      tags:
      - bots
      description: Gets information about a bot user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/bots.info
      operationId: bots_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        schema:
          type: string
      - name: bot
        in: query
        description: Bot user to get info on
        schema:
          type: string
      responses:
        200:
          description: When successful, returns bot info by bot ID.
          content:
            application/json:
              schema:
                title: bots.info schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from bots.info method
              example:
                bot:
                  app_id: A061BLERW
                  deleted: false
                  icons:
                    image_36: https://...
                    image_48: https://...
                    image_72: https://...
                  id: B061F7JQ1
                  name: commandeer
                  updated: 1449272004
                ok: true
        default:
          description: When no bot can be found, it returns an error.
          content:
            application/json:
              schema:
                title: bots.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from bots.info method
              example:
                error: bot_not_found
                ok: false
      security:
      - slackAuth:
        - users:read
  /channels.archive:
    post:
      tags:
      - channels
      description: Archives a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.archive
      operationId: channels_archive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to archive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to archive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.archive success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from channels.archive
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.archive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.archive method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.create:
    post:
      tags:
      - channels
      description: Creates a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.create
      operationId: channels_create
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of channel to create
          application/json:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of channel to create
      responses:
        200:
          description: Typical success response resulting in a new channel
          content:
            application/json:
              schema:
                title: channels.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.create method
              example:
                channel:
                  created: 1502833204
                  creator: U061F7AUR
                  id: C0DEL09A5
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  last_read: 0.0
                  members:
                  - U061F7AUR
                  name: endeavor
                  name_normalized: endeavor
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: ""
                  topic:
                    creator: ""
                    last_set: 0
                    value: ""
                  unread_count: 0
                  unread_count_display: 0
                ok: true
        default:
          description: Example error response when an invalid name is provided
          content:
            application/json:
              schema:
                title: channels.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.create method
              example:
                detail: Value passed for `name` contained unallowed special characters.
                error: invalid_name_specials
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.history:
    get:
      tags:
      - channels
      description: Fetches history of messages and events from a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.history
      operationId: channels_history
      parameters:
      - name: count
        in: query
        description: Number of messages to return, between 1 and 1000.
        schema:
          type: integer
      - name: unreads
        in: query
        description: Include `unread_count_display` in the output?
        schema:
          type: boolean
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `channels:history`'
        schema:
          type: string
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Channel to fetch history for.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response containing the channel's history
          content:
            application/json:
              schema:
                title: channels.history success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.history method
              example:
                has_more: false
                latest: "1358547726.000003"
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  reactions:
                  - count: 3
                    name: space_invader
                    users:
                    - U1
                    - U2
                    - U3
                  - count: 5
                    name: sweet_potato
                    users:
                    - U1
                    - U2
                    - U3
                    - U4
                    - U5
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                - attachments:
                  - fallback: This is an attachment fallback
                    id: 1
                    text: Don't get too attached
                  bot_id: B19LU7CSY
                  subtype: bot_message
                  text: Containment unit is 98% full
                  ts: "1503435956.000247"
                  type: message
                  username: ecto1138
                ok: true
        default:
          description: Error response when the specified channel cannot be found
          content:
            application/json:
              schema:
                title: channels.history error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.history method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:history
  /channels.info:
    get:
      tags:
      - channels
      description: Gets information about a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.info
      operationId: channels_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `channels:read`'
        schema:
          type: string
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for this channel. Defaults
          to `false`
        schema:
          type: boolean
      - name: channel
        in: query
        description: Channel to get info on
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.info method
              example:
                channel:
                  created: 1466025154
                  creator: U0G9QF9C6
                  id: C1H9RESGL
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  last_read: "1503435939.000101"
                  latest:
                    attachments:
                    - fallback: This is an attachment fallback
                      id: 1
                      text: Don't get too attached
                    bot_id: B19LU7CSY
                    subtype: bot_message
                    text: Containment unit is 98% full
                    ts: "1503435956.000247"
                    type: message
                    username: ecto1138
                  members:
                  - U0G9QF9C6
                  - U1QNSQB9U
                  name: busting
                  name_normalized: busting
                  previous_names:
                  - dusting
                  purpose:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: Discuss busting ghosts
                  topic:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: Spiritual containment strategies
                  unread_count: 1
                  unread_count_display: 1
                ok: true
        default:
          description: Error response when the specified channel cannot be found
          content:
            application/json:
              schema:
                title: channels.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.info method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:read
  /channels.invite:
    post:
      tags:
      - channels
      description: Invites a user to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.invite
      operationId: channels_invite
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user:
                  type: string
                  description: User to invite to channel.
                channel:
                  type: string
                  description: Channel to invite user to.
          application/json:
            schema:
              properties:
                user:
                  type: string
                  description: User to invite to channel.
                channel:
                  type: string
                  description: Channel to invite user to.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.invite method
              example:
                channel:
                  created: 1466025154
                  creator: U0G9QF9C6
                  id: C1H9RESGL
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  last_read: "1503435963.000307"
                  latest:
                    subtype: channel_leave
                    text: <@U1QNSQB9U|protobot> has left the channel
                    ts: "1503435963.000307"
                    type: message
                    user: U1QNSQB9U
                  members:
                  - U0G9QF9C6
                  - U1QNSQB9U
                  name: busting
                  name_normalized: busting
                  previous_names: []
                  purpose:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: My Purpose
                  topic:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: My Topic
                  unread_count: 0
                  unread_count_display: 0
                ok: true
        default:
          description: A somewhat typical error response
          content:
            application/json:
              schema:
                title: channels.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.invite method
              example:
                error: cant_invite
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.join:
    post:
      tags:
      - channels
      description: Joins a channel, creating it if needed.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.join
      operationId: channels_join
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of channel to join
          application/json:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of channel to join
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.join schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from channels.join method
              example:
                already_in_channel: true
                channel:
                  created: 1466025154
                  creator: U0G9QF9C6
                  id: C1H9RESGL
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  members:
                  - U0G9QF9C6
                  - U1QNSQB9U
                  name: busting
                  name_normalized: busting
                  previous_names: []
                  purpose:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: My Purpose
                  topic:
                    creator: U0G9QF9C6
                    last_set: 1503435128
                    value: My Topic
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.join error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from channels.join method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.kick:
    post:
      tags:
      - channels
      description: Removes a user from a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.kick
      operationId: channels_kick
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user:
                  type: string
                  description: User to remove from channel.
                channel:
                  type: string
                  description: Channel to remove user from.
          application/json:
            schema:
              properties:
                user:
                  type: string
                  description: User to remove from channel.
                channel:
                  type: string
                  description: Channel to remove user from.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.kick schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from channels.kick method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.kick error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from channels.kick method
              example:
                error: not_in_channel
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.leave:
    post:
      tags:
      - channels
      description: Leaves a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.leave
      operationId: channels_leave
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to leave
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to leave
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.list:
    get:
      tags:
      - channels
      description: Lists all channels in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.list
      operationId: channels_list
      parameters:
      - name: exclude_members
        in: query
        description: Exclude the `members` collection from each `channel`
        schema:
          type: boolean
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `channels:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      - name: exclude_archived
        in: query
        description: Exclude archived channels from the list
        schema:
          type: boolean
      responses:
        200:
          description: Typical cursored success response
          content:
            application/json:
              schema:
                title: channels.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.list method
              example:
                channels:
                - created: 1449709280
                  creator: U0G9QF9C6
                  id: C0G9QF9GW
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  members:
                  - U0G9QF9C6
                  - U0G9WFXNZ
                  name: random
                  name_normalized: random
                  num_members: 2
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: A place for non-work-related flimflam, faffing, hodge-podge
                      or jibber-jabber you'd prefer to keep out of more focused work-related
                      channels.
                  topic:
                    creator: U0G9QF9C6
                    last_set: 1449709352
                    value: Other stuff
                - created: 1449709280
                  creator: U0G9QF9C6
                  id: C0G9QKBBL
                  is_archived: false
                  is_channel: true
                  is_general: true
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  members:
                  - U0G9QF9C6
                  - U0G9WFXNZ
                  name: general
                  name_normalized: general
                  num_members: 2
                  previous_names: []
                  purpose:
                    creator: U0G9QF9C6
                    last_set: 1449709334
                    value: To talk about anything!
                  topic:
                    creator: U0G9QF9C6
                    last_set: 1449709364
                    value: Talk about anything!
                ok: true
                response_metadata:
                  next_cursor: dGVhbTpDMUg5UkVTR0w=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:read
  /channels.mark:
    post:
      tags:
      - channels
      description: Sets the read cursor in a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.mark
      operationId: channels_mark
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Channel to set reading cursor in.
          application/json:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Channel to set reading cursor in.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.mark success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response channels.mark method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.mark error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response channels.mark method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.rename:
    post:
      tags:
      - channels
      description: Renames a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.rename
      operationId: channels_rename
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: New name for channel.
                channel:
                  type: string
                  description: Channel to rename
          application/json:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: New name for channel.
                channel:
                  type: string
                  description: Channel to rename
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.rename schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from channels.rename method
              example:
                channel:
                  created: 1477445146
                  creator: U2U85N1RZ
                  id: C2U875RJN
                  is_archived: false
                  is_channel: true
                  is_general: false
                  is_member: false
                  is_mpim: false
                  is_org_shared: false
                  is_private: false
                  is_shared: false
                  members: []
                  name: humans-and-bots
                  name_normalized: humans-and-bots
                  previous_names:
                  - humans
                  purpose:
                    creator: U2U85N1RZ
                    last_set: 1509475801
                    value: the purpose of this channel is to bring people and robots
                      together in harmony
                  topic:
                    creator: U2U85N1RZ
                    last_set: 1509475775
                    value: here be robots
                  unlinked: 0
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.rename error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from channels.rename method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.replies:
    get:
      tags:
      - channels
      description: Retrieve a thread of messages posted to a channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.replies
      operationId: channels_replies
      parameters:
      - name: thread_ts
        in: query
        description: Unique identifier of a thread's parent message
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `channels:history`'
        schema:
          type: string
      - name: channel
        in: query
        description: Channel to fetch thread from
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                has_more: false
                messages:
                - last_read: "1509484885.000082"
                  replies:
                  - ts: "1509484424.000601"
                    user: U2U85N1RZ
                  - ts: "1509484885.000082"
                    user: U2U85N1RZ
                  reply_count: 2
                  subscribed: true
                  text: This is a channel message
                  thread_ts: "1485913694.000025"
                  ts: "1485913694.000025"
                  type: message
                  unread_count: 0
                  user: U2X9P5FEL
                - parent_user_id: U2X9P5FEL
                  text: This is a thread reply
                  thread_ts: "1485913694.000025"
                  ts: "1509484424.000601"
                  type: message
                  user: U2U85N1RZ
                - parent_user_id: U2X9P5FEL
                  text: This is another thread reply
                  thread_ts: "1485913694.000025"
                  ts: "1509484885.000082"
                  type: message
                  user: U2U85N1RZ
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: thread_not_found
                ok: false
      security:
      - slackAuth:
        - channels:history
  /channels.setPurpose:
    post:
      tags:
      - channels
      description: Sets the purpose for a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.setPurpose
      operationId: channels_setPurpose
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                purpose:
                  type: string
                  description: The new purpose
                channel:
                  type: string
                  description: Channel to set the purpose of
          application/json:
            schema:
              properties:
                purpose:
                  type: string
                  description: The new purpose
                channel:
                  type: string
                  description: Channel to set the purpose of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: channels.setPurpose schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from channels.setPurpose
                  method
              example:
                ok: true
                purpose: My special purpose
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: channels.setPurpose error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from channels.setPurpose method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.setTopic:
    post:
      tags:
      - channels
      description: Sets the topic for a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.setTopic
      operationId: channels_setTopic
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic
                channel:
                  type: string
                  description: Channel to set the topic of
          application/json:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic
                channel:
                  type: string
                  description: Channel to set the topic of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
                topic: To picture topicality
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /channels.unarchive:
    post:
      tags:
      - channels
      description: Unarchives a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/channels.unarchive
      operationId: channels_unarchive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to unarchive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel to unarchive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
  /chat.delete:
    post:
      tags:
      - chat
      description: Deletes a message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.delete
      operationId: chat_delete
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `chat:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  type: boolean
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                ts:
                  type: number
                  description: Timestamp of the message to be deleted.
                channel:
                  type: string
                  description: Channel containing the message to be deleted.
          application/json:
            schema:
              properties:
                as_user:
                  type: boolean
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                ts:
                  type: number
                  description: Timestamp of the message to be deleted.
                channel:
                  type: string
                  description: Channel containing the message to be deleted.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: chat.delete success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.delete method
              example:
                channel: C024BE91L
                ok: true
                ts: "1401383885.000061"
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: chat.delete error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from chat.delete method
              example:
                error: message_not_found
                ok: false
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
  /chat.getPermalink:
    get:
      tags:
      - chat
      description: Retrieve a permalink URL for a specific extant message
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.getPermalink
      operationId: chat_getPermalink
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      - name: message_ts
        in: query
        description: A message's `ts` value, uniquely identifying it within a channel
        schema:
          type: number
      - name: channel
        in: query
        description: The ID of the conversation or channel containing the message
        schema:
          type: string
      responses:
        200:
          description: Standard success response
          content:
            application/json:
              schema:
                title: chat.getPermalink success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response chat.getPermalink
              example:
                channel: C1H9RESGA
                ok: true
                permalink: https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008
        default:
          description: Error response when channel cannot be found
          content:
            application/json:
              schema:
                title: chat.getPermalink error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from chat.getPermalink method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - none
  /chat.meMessage:
    post:
      tags:
      - chat
      description: Share a me message into a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.meMessage
      operationId: chat_meMessage
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `chat:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                text:
                  type: string
                  description: Text of the message to send.
                channel:
                  type: string
                  description: Channel to send message to. Can be a public channel,
                    private group or IM channel. Can be an encoded ID, or a name.
          application/json:
            schema:
              properties:
                text:
                  type: string
                  description: Text of the message to send.
                channel:
                  type: string
                  description: Channel to send message to. Can be a public channel,
                    private group or IM channel. Can be an encoded ID, or a name.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                channel: C024BE7LR
                ok: true
                ts: "1417671948.000006"
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - chat:write:user
  /chat.postEphemeral:
    post:
      tags:
      - chat
      description: Sends an ephemeral message to a user in a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postEphemeral
      operationId: chat_postEphemeral
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `chat:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                text:
                  type: string
                  description: Text of the message to send. See below for an explanation
                    of [formatting](#formatting). This field is usually required,
                    unless you're providing only `attachments` instead.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                user:
                  type: string
                  description: '`id` of the user who will receive the ephemeral message.
                    The user should be in the channel specified by the `channel` argument.'
                as_user:
                  type: boolean
                  description: Pass true to post the message as the authed bot. Defaults
                    to false.
                channel:
                  type: string
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name.
          application/json:
            schema:
              properties:
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                text:
                  type: string
                  description: Text of the message to send. See below for an explanation
                    of [formatting](#formatting). This field is usually required,
                    unless you're providing only `attachments` instead.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                user:
                  type: string
                  description: '`id` of the user who will receive the ephemeral message.
                    The user should be in the channel specified by the `channel` argument.'
                as_user:
                  type: boolean
                  description: Pass true to post the message as the authed bot. Defaults
                    to false.
                channel:
                  type: string
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: chat.postEphemeral success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.postEphemeral
                  method
              example:
                message_ts: "1502210682.580145"
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: chat.postEphemeral error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from chat.postEphemeral method
              example:
                error: user_not_in_channel
                ok: false
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
  /chat.postMessage:
    post:
      tags:
      - chat
      description: Sends a message to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postMessage
      operationId: chat_postMessage
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `chat:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  type: string
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                thread_ts:
                  type: number
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                unfurl_links:
                  type: boolean
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                text:
                  type: string
                  description: Text of the message to send. See below for an explanation
                    of [formatting](#formatting). This field is usually required,
                    unless you're providing only `attachments` instead. Provide no
                    more than 40,000 characters or [risk truncation](/changelog/2018-04-truncating-really-long-messages).
                unfurl_media:
                  type: boolean
                  description: Pass false to disable unfurling of media content.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                as_user:
                  type: boolean
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [authorship](#authorship)
                    below.
                mrkdwn:
                  type: boolean
                  description: Disable Slack markup parsing by setting to `false`.
                    Enabled by default.
                icon_emoji:
                  type: string
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames.
                icon_url:
                  type: string
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                channel:
                  type: string
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                reply_broadcast:
                  type: boolean
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
          application/json:
            schema:
              properties:
                username:
                  type: string
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                thread_ts:
                  type: number
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                unfurl_links:
                  type: boolean
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                text:
                  type: string
                  description: Text of the message to send. See below for an explanation
                    of [formatting](#formatting). This field is usually required,
                    unless you're providing only `attachments` instead. Provide no
                    more than 40,000 characters or [risk truncation](/changelog/2018-04-truncating-really-long-messages).
                unfurl_media:
                  type: boolean
                  description: Pass false to disable unfurling of media content.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                as_user:
                  type: boolean
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [authorship](#authorship)
                    below.
                mrkdwn:
                  type: boolean
                  description: Disable Slack markup parsing by setting to `false`.
                    Enabled by default.
                icon_emoji:
                  type: string
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames.
                icon_url:
                  type: string
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                channel:
                  type: string
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                reply_broadcast:
                  type: boolean
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: chat.postMessage success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.postMessage method
              example:
                channel: C1H9RESGL
                message:
                  attachments:
                  - fallback: This is an attachment's fallback
                    id: 1
                    text: This is an attachment
                  bot_id: B19LU7CSY
                  subtype: bot_message
                  text: Here's a message for you
                  ts: "1503435956.000247"
                  type: message
                  username: ecto1
                ok: true
                ts: "1503435956.000247"
        default:
          description: Typical error response if too many attachments are included
          content:
            application/json:
              schema:
                title: chat.postMessage error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response chat.postMessage method
              example:
                error: too_many_attachments
                ok: false
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
  /chat.unfurl:
    post:
      tags:
      - chat
      description: Provide custom unfurl behavior for user-posted URLs
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.unfurl
      operationId: chat_unfurl
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `links:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user_auth_message:
                  type: string
                  description: Provide a simply-formatted string to send as an ephemeral
                    message to the user as invitation to authenticate further and
                    enable full unfurling behavior
                user_auth_required:
                  type: boolean
                  description: Set to `true` or `1` to indicate the user must install
                    your Slack app to trigger unfurls for this domain
                unfurls:
                  type: string
                  description: URL-encoded JSON map with keys set to URLs featured
                    in the the message, pointing to their unfurl message attachments.
                ts:
                  type: string
                  description: Timestamp of the message to add unfurl behavior to.
                user_auth_url:
                  type: string
                  description: Send users to this custom URL where they will complete
                    authentication in your app to fully trigger unfurling. Value should
                    be properly URL-encoded.
                channel:
                  type: string
                  description: Channel ID of the message
          application/json:
            schema:
              properties:
                user_auth_message:
                  type: string
                  description: Provide a simply-formatted string to send as an ephemeral
                    message to the user as invitation to authenticate further and
                    enable full unfurling behavior
                user_auth_required:
                  type: boolean
                  description: Set to `true` or `1` to indicate the user must install
                    your Slack app to trigger unfurls for this domain
                unfurls:
                  type: string
                  description: URL-encoded JSON map with keys set to URLs featured
                    in the the message, pointing to their unfurl message attachments.
                ts:
                  type: string
                  description: Timestamp of the message to add unfurl behavior to.
                user_auth_url:
                  type: string
                  description: Send users to this custom URL where they will complete
                    authentication in your app to fully trigger unfurling. Value should
                    be properly URL-encoded.
                channel:
                  type: string
                  description: Channel ID of the message
      responses:
        200:
          description: Typical, minimal success response
          content:
            application/json:
              schema:
                title: chat.unfurl success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.unfurl method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: chat.unfurl error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from chat.unfurl method
              example:
                error: cannot_unfurl_url
                ok: false
      security:
      - slackAuth:
        - links:write
  /chat.update:
    post:
      tags:
      - chat
      description: Updates a message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.update
      operationId: chat_update
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `chat:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string. This field is required when not presenting
                    `text`.
                text:
                  type: string
                  description: New text for the message, using the [default formatting
                    rules](/docs/formatting). It's not required when presenting `attachments`.
                ts:
                  type: number
                  description: Timestamp of the message to be updated.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `client`,
                    unlike `chat.postMessage`. See [below](#formatting).
                as_user:
                  type: boolean
                  description: Pass true to update the message as the authed user.
                    [Bot users](/bot-users) in this context are considered authed
                    users.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames. Defaults
                    to `none`. See [below](#formatting).
                channel:
                  type: string
                  description: Channel containing the message to be updated.
          application/json:
            schema:
              properties:
                attachments:
                  type: string
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string. This field is required when not presenting
                    `text`.
                text:
                  type: string
                  description: New text for the message, using the [default formatting
                    rules](/docs/formatting). It's not required when presenting `attachments`.
                ts:
                  type: number
                  description: Timestamp of the message to be updated.
                parse:
                  type: string
                  description: Change how messages are treated. Defaults to `client`,
                    unlike `chat.postMessage`. See [below](#formatting).
                as_user:
                  type: boolean
                  description: Pass true to update the message as the authed user.
                    [Bot users](/bot-users) in this context are considered authed
                    users.
                link_names:
                  type: boolean
                  description: Find and link channel names and usernames. Defaults
                    to `none`. See [below](#formatting).
                channel:
                  type: string
                  description: Channel containing the message to be updated.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: chat.update success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.update method
              example:
                channel: C024BE91L
                ok: true
                text: Updated text you carefully authored
                ts: "1401383885.000061"
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: chat.update error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response chat.update method
              example:
                error: cant_update_message
                ok: false
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
  /conversations.archive:
    post:
      tags:
      - conversations
      description: Archives a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.archive
      operationId: conversations_archive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to archive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to archive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.archive success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.archive
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.archive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.archive
                  method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.close:
    post:
      tags:
      - conversations
      description: Closes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.close
      operationId: conversations_close
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to close.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to close.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.close success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.close method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.close error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.close method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.create:
    post:
      tags:
      - conversations
      description: Initiates a public or private channel-based conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.create
      operationId: conversations_create
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create
                is_private:
                  type: boolean
                  description: Create a private channel instead of a public one
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create
                is_private:
                  type: boolean
                  description: Create a private channel instead of a public one
      responses:
        200:
          description: If successful, the command returns a rather stark [conversation
            object](/types/conversation)
          content:
            application/json:
              schema:
                title: conversations.create success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.create method
              example:
                channel:
                  created: 1504554479
                  creator: U0123456
                  id: C0EAQDV4Z
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: false
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  last_read: 0.0
                  name: endeavor
                  name_normalized: endeavor
                  pending_shared: []
                  previous_names: []
                  priority: 0
                  purpose:
                    creator: ""
                    last_set: 0
                    value: ""
                  topic:
                    creator: ""
                    last_set: 0
                    value: ""
                  unlinked: 0
                  unread_count: 0
                  unread_count_display: 0
                ok: true
        default:
          description: Typical error response when name already in use
          content:
            application/json:
              schema:
                title: conversations.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.create method
              example:
                error: name_taken
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.history:
    get:
      tags:
      - conversations
      description: Fetches a conversation's history of messages and events.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.history
      operationId: conversations_history
      parameters:
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        schema:
          type: boolean
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:history`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Conversation ID to fetch history for.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response containing a channel's messages
          content:
            application/json:
              schema:
                title: conversations.history success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.history
                  method
              example:
                has_more: true
                messages:
                - text: I find you punny and would like to smell your nose letter
                  ts: "1512085950.000216"
                  type: message
                  user: U012AB3CDE
                - text: What, you want to smell my shoes better?
                  ts: "1512104434.000490"
                  type: message
                  user: U061F7AUR
                ok: true
                pin_count: 0
                response_metadata:
                  next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.history error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.history
                  method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
  /conversations.info:
    get:
      tags:
      - conversations
      description: Retrieve information about a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.info
      operationId: conversations_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:read`'
        schema:
          type: string
      - name: channel
        in: query
        description: Conversation ID to learn more about
        schema:
          type: string
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for this conversation.
          Defaults to `false`
        schema:
          type: boolean
      responses:
        200:
          description: Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this example.)
          content:
            application/json:
              schema:
                title: conversations.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.info
              example:
                channel:
                  created: 1449252889
                  creator: W012A3BCD
                  id: C012AB3CD
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_read_only: false
                  is_shared: false
                  last_read: "1502126650.228446"
                  locale: en-US
                  name: general
                  name_normalized: general
                  num_members: 23
                  pending_shared: []
                  previous_names:
                  - specifics
                  - abstractions
                  - etc
                  purpose:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: This part of the workspace is for fun. Make fun here.
                  topic:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: For public discussion of generalities
                  unlinked: 0
                ok: true
        default:
          description: Typical error response when a channel cannot be found
          content:
            application/json:
              schema:
                title: conversations.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.info method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
  /conversations.invite:
    post:
      tags:
      - conversations
      description: Invites users to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.invite
      operationId: conversations_invite
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                users:
                  type: string
                  description: A comma separated list of user IDs. Up to 30 users
                    may be listed.
                channel:
                  type: string
                  description: The ID of the public or private channel to invite user(s)
                    to.
          application/json:
            schema:
              properties:
                users:
                  type: string
                  description: A comma separated list of user IDs. Up to 30 users
                    may be listed.
                channel:
                  type: string
                  description: The ID of the public or private channel to invite user(s)
                    to.
      responses:
        200:
          description: Typical success response when an invitation is extended
          content:
            application/json:
              schema:
                title: conversations.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.invite
                  method
              example:
                channel:
                  created: 1449252889
                  creator: W012A3BCD
                  id: C012AB3CD
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_read_only: false
                  is_shared: false
                  last_read: "1502126650.228446"
                  locale: en-US
                  name: general
                  name_normalized: general
                  num_members: 23
                  pending_shared: []
                  previous_names:
                  - specifics
                  - abstractions
                  - etc
                  purpose:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: This part of the workspace is for fun. Make fun here.
                  topic:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: For public discussion of generalities
                  unlinked: 0
                ok: true
        default:
          description: Typical error response when an invite is attempted on a conversation
            type that does not support it
          content:
            application/json:
              schema:
                title: conversations.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.invite method
              example:
                error: method_not_supported_for_channel_type
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.join:
    post:
      tags:
      - conversations
      description: Joins an existing conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.join
      operationId: conversations_join
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `channels:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to join
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to join
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.join success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.join
                  method
              example:
                channel:
                  created: 1449252889
                  creator: U061F7AUR
                  id: C061EG9SL
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  name: general
                  name_normalized: general
                  pending_shared: []
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: For widget discussion
                  topic:
                    creator: ""
                    last_set: 0
                    value: Which widget do you worry about?
                  unlinked: 0
                ok: true
                response_metadata:
                  warnings:
                  - already_in_channel
                warning: already_in_channel
        default:
          description: Typical error response if the conversation is archived and
            cannot be joined
          content:
            application/json:
              schema:
                title: conversations.join error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.join method
              example:
                error: is_archived
                ok: false
      security:
      - slackAuth:
        - channels:write
  /conversations.kick:
    post:
      tags:
      - conversations
      description: Removes a user from a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.kick
      operationId: conversations_kick
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user:
                  type: string
                  description: User ID to be removed.
                channel:
                  type: string
                  description: ID of conversation to remove user from.
          application/json:
            schema:
              properties:
                user:
                  type: string
                  description: User ID to be removed.
                channel:
                  type: string
                  description: ID of conversation to remove user from.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.kick success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.kick method
              example:
                ok: true
        default:
          description: Typical error response when you attempt to kick yourself from
            a channel
          content:
            application/json:
              schema:
                title: conversations.kick error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response conversations.kick method
              example:
                error: cant_kick_self
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.leave:
    post:
      tags:
      - conversations
      description: Leaves a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.leave
      operationId: conversations_leave
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to leave
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to leave
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.leave success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.leave
                  method
              example:
                ok: true
        default:
          description: Typical error response when attempting to leave a workspace's
            "general" channel
          content:
            application/json:
              schema:
                title: conversations.leave error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.leave method
              example:
                error: cant_leave_general
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.list:
    get:
      tags:
      - conversations
      description: Lists all channels in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.list
      operationId: conversations_list
      parameters:
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        schema:
          type: integer
      - name: exclude_archived
        in: query
        description: Set to `true` to exclude archived channels from the list
        schema:
          type: boolean
      - name: types
        in: query
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        schema:
          type: string
      responses:
        200:
          description: Typical success response with only public channels
          content:
            application/json:
              schema:
                title: conversations.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.list
                  method
              example:
                channels:
                - created: 1449252889
                  creator: U012A3CDE
                  id: C012AB3CD
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  name: general
                  name_normalized: general
                  num_members: 4
                  pending_shared: []
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: This channel is for team-wide communication and announcements.
                      All team members are in this channel.
                  topic:
                    creator: ""
                    last_set: 0
                    value: Company-wide announcements and work-based matters
                  unlinked: 0
                - created: 1449252889
                  creator: U061F7AUR
                  id: C061EG9T2
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: false
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  name: random
                  name_normalized: random
                  num_members: 4
                  pending_shared: []
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: A place for non-work-related flimflam, faffing, hodge-podge
                      or jibber-jabber you'd prefer to keep out of more focused work-related
                      channels.
                  topic:
                    creator: ""
                    last_set: 0
                    value: Non-work banter and water cooler conversation
                  unlinked: 0
                ok: true
                response_metadata:
                  next_cursor: dGVhbTpDMDYxRkE1UEI=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
  /conversations.members:
    get:
      tags:
      - conversations
      description: Retrieve members of a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.members
      operationId: conversations_members
      parameters:
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      - name: channel
        in: query
        description: ID of the conversation to retrieve members for
        schema:
          type: string
      responses:
        200:
          description: Typical paginated success response
          content:
            application/json:
              schema:
                title: conversations.members success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.members
                  method
              example:
                members:
                - U023BECGF
                - U061F7AUR
                - W012A3CDE
                ok: true
                response_metadata:
                  next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==
        default:
          description: Typical error response when an invalid cursor is provided
          content:
            application/json:
              schema:
                title: conversations.members error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response conversations.members method
              example:
                error: invalid_cursor
                ok: false
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
  /conversations.open:
    post:
      tags:
      - conversations
      description: Opens or resumes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.open
      operationId: conversations_open
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                return_im:
                  type: boolean
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                users:
                  type: string
                  description: Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                channel:
                  type: string
                  description: Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
          application/json:
            schema:
              properties:
                return_im:
                  type: boolean
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                users:
                  type: string
                  description: Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                channel:
                  type: string
                  description: Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.open success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.open
                  method when opening channels, ims, mpims
              example:
                channel:
                  id: D069C7QFK
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.open error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.open method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.rename:
    post:
      tags:
      - conversations
      description: Renames a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.rename
      operationId: conversations_rename
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: New name for conversation.
                channel:
                  type: string
                  description: ID of conversation to rename
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: New name for conversation.
                channel:
                  type: string
                  description: ID of conversation to rename
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.rename success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.rename
                  method
              example:
                channel:
                  created: 1449252889
                  creator: W012A3BCD
                  id: C012AB3CD
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_member: true
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_read_only: false
                  is_shared: false
                  last_read: "1502126650.228446"
                  locale: en-US
                  name: general
                  name_normalized: general
                  num_members: 23
                  pending_shared: []
                  previous_names:
                  - specifics
                  - abstractions
                  - etc
                  purpose:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: This part of the workspace is for fun. Make fun here.
                  topic:
                    creator: W012A3BCD
                    last_set: 1449709364
                    value: For public discussion of generalities
                  unlinked: 0
                ok: true
        default:
          description: Typical error response when the calling user is not a member
            of the conversation
          content:
            application/json:
              schema:
                title: conversations.rename error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.rename method
              example:
                error: not_in_channel
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.replies:
    get:
      tags:
      - conversations
      description: Retrieve a thread of messages posted to a conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.replies
      operationId: conversations_replies
      parameters:
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        schema:
          type: boolean
      - name: ts
        in: query
        description: Unique identifier of a thread's parent message.
        schema:
          type: number
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:history`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Conversation ID to fetch thread from.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.replies success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversat.replies
                  method
              example:
                has_more: true
                messages:
                - last_read: "1484678597.521003"
                  replies:
                  - ts: "1483037603.017503"
                    user: U061F7AUR
                  - ts: "1483051909.018632"
                    user: U061F7AUR
                  - ts: "1483125339.020269"
                    user: U061F7AUR
                  reply_count: 3
                  subscribed: true
                  text: island
                  thread_ts: "1482960137.003543"
                  ts: "1482960137.003543"
                  type: message
                  unread_count: 0
                  user: U061F7AUR
                - parent_user_id: U061F7AUR
                  text: one island
                  thread_ts: "1482960137.003543"
                  ts: "1483037603.017503"
                  type: message
                  user: U061F7AUR
                - parent_user_id: U061F7AUR
                  text: two island
                  thread_ts: "1482960137.003543"
                  ts: "1483051909.018632"
                  type: message
                  user: U061F7AUR
                - parent_user_id: U061F7AUR
                  text: three for the land
                  thread_ts: "1482960137.003543"
                  ts: "1483125339.020269"
                  type: message
                  user: U061F7AUR
                ok: true
                response_metadata:
                  next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.replies error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.replies
                  method
              example:
                error: thread_not_found
                ok: false
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
  /conversations.setPurpose:
    post:
      tags:
      - conversations
      description: Sets the purpose for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setPurpose
      operationId: conversations_setPurpose
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                purpose:
                  type: string
                  description: A new, specialer purpose
                channel:
                  type: string
                  description: Conversation to set the purpose of
          application/json:
            schema:
              properties:
                purpose:
                  type: string
                  description: A new, specialer purpose
                channel:
                  type: string
                  description: Conversation to set the purpose of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.setPurpose success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.setPurpose
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.setPurpose error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.setPurpose
                  method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.setTopic:
    post:
      tags:
      - conversations
      description: Sets the topic for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setTopic
      operationId: conversations_setTopic
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic string. Does not support formatting or
                    linkification.
                channel:
                  type: string
                  description: Conversation to set the topic of
          application/json:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic string. Does not support formatting or
                    linkification.
                channel:
                  type: string
                  description: Conversation to set the topic of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.setTopic success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.setTopic
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.setTopic error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.setTopic
                  method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /conversations.unarchive:
    post:
      tags:
      - conversations
      description: Reverses conversation archival.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.unarchive
      operationId: conversations_unarchive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `conversations:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to unarchive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to unarchive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.unarchive success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.unarchive
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.unarchive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.unarchive
                  method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
  /dialog.open:
    get:
      tags:
      - dialog
      description: Open a dialog with a user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dialog.open
      operationId: dialog_open
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `none`'
        schema:
          type: string
      - name: dialog
        in: query
        description: The dialog definition. This must be a JSON-encoded string.
        schema:
          type: string
      - name: trigger_id
        in: query
        description: Exchange a trigger to post to the user.
        schema:
          type: string
      responses:
        200:
          description: Typical success response is quite minimal.
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response, before getting to any possible validation
            errors.
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: missing_trigger
                ok: false
      security:
      - slackAuth:
        - none
  /dnd.endDnd:
    post:
      tags:
      - dnd
      description: Ends the current user's Do Not Disturb session immediately.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endDnd
      operationId: dnd_endDnd
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `dnd:write`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - dnd:write
  /dnd.endSnooze:
    post:
      tags:
      - dnd
      description: Ends the current user's snooze mode immediately.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endSnooze
      operationId: dnd_endSnooze
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `dnd:write`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - dnd:write
  /dnd.info:
    get:
      tags:
      - dnd
      description: Retrieves a user's current Do Not Disturb status.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.info
      operationId: dnd_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `dnd:read`'
        schema:
          type: string
      - name: user
        in: query
        description: User to fetch status for (defaults to current user)
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - dnd:read
  /dnd.setSnooze:
    post:
      tags:
      - dnd
      description: Turns on Do Not Disturb mode for the current user, or changes its
        duration.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.setSnooze
      operationId: dnd_setSnooze
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                num_minutes:
                  type: integer
                  description: Number of minutes, from now, to snooze until.
                  format: int32
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `dnd:write`'
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - dnd:write
  /dnd.teamInfo:
    get:
      tags:
      - dnd
      description: Retrieves the Do Not Disturb status for users on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.teamInfo
      operationId: dnd_teamInfo
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `dnd:read`'
        schema:
          type: string
      - name: users
        in: query
        description: Comma-separated list of users to fetch Do Not Disturb status
          for
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: dnd.teamInfo success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from dnd.teamInfo method
              example:
                ok: true
                users:
                  U023BECGF:
                    dnd_enabled: true
                    next_dnd_end_ts: 1450423800
                    next_dnd_start_ts: 1450387800
                  W058CJVAA:
                    dnd_enabled: false
                    next_dnd_end_ts: 1
                    next_dnd_start_ts: 1
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: dnd.teamInfo error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from dnd.teamInfo method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - dnd:read
  /emoji.list:
    get:
      tags:
      - emoji
      description: Lists custom emoji for a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/emoji.list
      operationId: emoji_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `emoji:read`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - emoji:read
  /files.comments.add:
    post:
      tags:
      - files.comments
      - files
      description: Add a comment to an existing file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.comments.add
      operationId: files_comments_add
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                comment:
                  type: string
                  description: Text of the comment to add.
                file:
                  type: string
                  description: File to add a comment to.
          application/json:
            schema:
              properties:
                comment:
                  type: string
                  description: Text of the comment to add.
                file:
                  type: string
                  description: File to add a comment to.
      responses:
        200:
          description: Standard success response
          content:
            application/json:
              schema:
                title: files.comments.add schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response files.comments.add method
              example:
                comment:
                  channel: C1234467890
                  comment: Everyone should take a moment to read this file.
                  created: 1356032811
                  id: Fc1234567890
                  timestamp: 1356032811
                  user: U1234567890
                ok: true
        default:
          description: Artificial error response
          content:
            application/json:
              schema:
                title: files.comments.add error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from files.comments.add method
              example:
                error: file_not_found
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.comments.delete:
    post:
      tags:
      - files.comments
      - files
      description: Deletes an existing comment on a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.comments.delete
      operationId: files_comments_delete
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  type: string
                  description: The comment to delete.
                file:
                  type: string
                  description: File to delete a comment from.
          application/json:
            schema:
              properties:
                id:
                  type: string
                  description: The comment to delete.
                file:
                  type: string
                  description: File to delete a comment from.
      responses:
        200:
          description: Standard success response is very simple
          content:
            application/json:
              schema:
                title: files.comments.delete schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response files.comments.delete
                  method
              example:
                ok: true
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              schema:
                title: files.comments.delete error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response files.comments.delete method
              example:
                error: file_not_found
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.comments.edit:
    post:
      tags:
      - files.comments
      - files
      description: Edit an existing file comment.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.comments.edit
      operationId: files_comments_edit
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                comment:
                  type: string
                  description: Text of the comment to edit.
                id:
                  type: string
                  description: The comment to edit.
                file:
                  type: string
                  description: File containing the comment to edit.
          application/json:
            schema:
              properties:
                comment:
                  type: string
                  description: Text of the comment to edit.
                id:
                  type: string
                  description: The comment to edit.
                file:
                  type: string
                  description: File containing the comment to edit.
      responses:
        200:
          description: Standard success response when used with a user token
          content:
            application/json:
              schema:
                title: files.comments.edit schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response files.comments.edit method
              example:
                ok: true
                team: Subarachnoid Workspace
                team_id: T12345678
                url: https://subarachnoid.slack.com/
                user: grace
                user_id: W12345678
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              schema:
                title: files.comments.edit error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response files.comments.edit method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.delete:
    post:
      tags:
      - files
      description: Deletes a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.delete
      operationId: files_delete
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  type: string
                  description: ID of file to delete.
          application/json:
            schema:
              properties:
                file:
                  type: string
                  description: ID of file to delete.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: files.delete schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response files.delete method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: files.delete error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response files.delete method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.info:
    get:
      tags:
      - files
      description: Gets information about a team file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.info
      operationId: files_info
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `files:read`'
        schema:
          type: string
      - name: file
        in: query
        description: Specify a file by providing its ID.
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: files.info schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from files.info method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: files.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from files.info method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:read
  /files.list:
    get:
      tags:
      - files
      description: Lists & filters team files.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.list
      operationId: files_list
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: channel
        in: query
        description: Filter files appearing in a specific channel, indicated by its
          ID.
        schema:
          type: string
      - name: ts_to
        in: query
        description: Filter files created before this timestamp (inclusive).
        schema:
          type: number
      - name: ts_from
        in: query
        description: Filter files created after this timestamp (inclusive).
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `files:read`'
        schema:
          type: string
      - name: user
        in: query
        description: Filter files created by a single user.
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: types
        in: query
        description: |-
          Filter files by type:

          * `all` - All files
          * `spaces` - Posts
          * `snippets` - Snippets
          * `images` - Image files
          * `gdocs` - Google docs
          * `zips` - Zip files
          * `pdfs` - PDF files

          You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: files.list schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from files.list method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: files.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from files.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:read
  /files.revokePublicURL:
    post:
      tags:
      - files
      description: Revokes public/external sharing access for a file
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.revokePublicURL
      operationId: files_revokePublicURL
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  type: string
                  description: File to revoke
          application/json:
            schema:
              properties:
                file:
                  type: string
                  description: File to revoke
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.sharedPublicURL:
    post:
      tags:
      - files
      description: Enables a file for public/external sharing.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.sharedPublicURL
      operationId: files_sharedPublicURL
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `files:write:user`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  type: string
                  description: File to share
          application/json:
            schema:
              properties:
                file:
                  type: string
                  description: File to share
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /files.upload:
    post:
      tags:
      - files
      description: Uploads or creates a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.upload
      operationId: files_upload
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channels:
                  type: string
                  description: Comma-separated list of channel names or IDs where
                    the file will be shared.
                title:
                  type: string
                  description: Title of file.
                initial_comment:
                  type: string
                  description: Initial comment to add to file.
                filetype:
                  type: string
                  description: A [file type](/types/file#file_types) identifier.
                filename:
                  type: string
                  description: Filename of file.
                content:
                  type: string
                  description: File contents via a POST variable. If omitting this
                    parameter, you must provide a `file`.
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `files:write:user`'
                file:
                  type: string
                  description: File contents via `multipart/form-data`. If omitting
                    this parameter, you must submit `content`.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: files.upload schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response files.upload method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: files.upload error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response files.upload method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - files:write:user
  /groups.archive:
    post:
      tags:
      - groups
      description: Archives a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.archive
      operationId: groups_archive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to archive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to archive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.archive schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from groups.archive method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.archive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from groups.archive method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.create:
    post:
      tags:
      - groups
      description: Creates a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.create
      operationId: groups_create
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of private channel to create
          application/json:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: Name of private channel to create
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.create success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response groups.create method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response groups.create method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.createChild:
    post:
      tags:
      - groups
      description: Clones and archives a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.createChild
      operationId: groups_createChild
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `groups:write`'
                channel:
                  type: string
                  description: Private channel to clone and archive.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.history:
    get:
      tags:
      - groups
      description: Fetches history of messages and events from a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.history
      operationId: groups_history
      parameters:
      - name: count
        in: query
        description: Number of messages to return, between 1 and 1000.
        schema:
          type: integer
      - name: unreads
        in: query
        description: Include `unread_count_display` in the output?
        schema:
          type: boolean
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `groups:history`'
        schema:
          type: string
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Private channel to fetch history for.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.history success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response groups.history method
              example:
                has_more: false
                latest: "1358547726.000003"
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.history error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response groups.history method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - groups:history
  /groups.info:
    get:
      tags:
      - groups
      description: Gets information about a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.info
      operationId: groups_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `groups:read`'
        schema:
          type: string
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for this group. Defaults
          to `false`
        schema:
          type: boolean
      - name: channel
        in: query
        description: Private channel to get info on
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response groups.info method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response groups.info method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:read
  /groups.invite:
    post:
      tags:
      - groups
      description: Invites a user to a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.invite
      operationId: groups_invite
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user:
                  type: string
                  description: User to invite.
                channel:
                  type: string
                  description: Private channel to invite user to.
          application/json:
            schema:
              properties:
                user:
                  type: string
                  description: User to invite.
                channel:
                  type: string
                  description: Private channel to invite user to.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.invite success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response groups.invite method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response groups.invite method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.kick:
    post:
      tags:
      - groups
      description: Removes a user from a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.kick
      operationId: groups_kick
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user:
                  type: string
                  description: User to remove from private channel.
                channel:
                  type: string
                  description: Private channel to remove user from.
          application/json:
            schema:
              properties:
                user:
                  type: string
                  description: User to remove from private channel.
                channel:
                  type: string
                  description: Private channel to remove user from.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.kick schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from groups.kick method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.kick error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from groups.kick method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.leave:
    post:
      tags:
      - groups
      description: Leaves a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.leave
      operationId: groups_leave
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to leave
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to leave
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.list:
    get:
      tags:
      - groups
      description: Lists private channels that the calling user has access to.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.list
      operationId: groups_list
      parameters:
      - name: exclude_members
        in: query
        description: Exclude the `members` from each `group`
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `groups:read`'
        schema:
          type: string
      - name: exclude_archived
        in: query
        description: Don't return archived private channels.
        schema:
          type: boolean
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response groups.list method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response groups.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:read
  /groups.mark:
    post:
      tags:
      - groups
      description: Sets the read cursor in a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.mark
      operationId: groups_mark
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Private channel to set reading cursor in.
          application/json:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Private channel to set reading cursor in.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.mark success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from groups.mark method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.mark error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from groups.mark method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.open:
    post:
      tags:
      - groups
      description: Opens a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.open
      operationId: groups_open
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to open.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to open.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.rename:
    post:
      tags:
      - groups
      description: Renames a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.rename
      operationId: groups_rename
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: New name for private channel.
                channel:
                  type: string
                  description: Private channel to rename
          application/json:
            schema:
              properties:
                validate:
                  type: boolean
                  description: Whether to return errors on invalid channel name instead
                    of modifying it to meet the specified criteria.
                name:
                  type: string
                  description: New name for private channel.
                channel:
                  type: string
                  description: Private channel to rename
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.replies:
    get:
      tags:
      - groups
      description: Retrieve a thread of messages posted to a private channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.replies
      operationId: groups_replies
      parameters:
      - name: thread_ts
        in: query
        description: Unique identifier of a thread's parent message
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `groups:history`'
        schema:
          type: string
      - name: channel
        in: query
        description: Private channel to fetch thread from
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - groups:history
  /groups.setPurpose:
    post:
      tags:
      - groups
      description: Sets the purpose for a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.setPurpose
      operationId: groups_setPurpose
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                purpose:
                  type: string
                  description: The new purpose
                channel:
                  type: string
                  description: Private channel to set the purpose of
          application/json:
            schema:
              properties:
                purpose:
                  type: string
                  description: The new purpose
                channel:
                  type: string
                  description: Private channel to set the purpose of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.setPurpose schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from groups.setPurpose
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.setPurpose error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from groups.setPurpose method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.setTopic:
    post:
      tags:
      - groups
      description: Sets the topic for a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.setTopic
      operationId: groups_setTopic
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic
                channel:
                  type: string
                  description: Private channel to set the topic of
          application/json:
            schema:
              properties:
                topic:
                  type: string
                  description: The new topic
                channel:
                  type: string
                  description: Private channel to set the topic of
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: groups.setTopic schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from groups.setTopic method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: groups.setTopic error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from groups.setTopic method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /groups.unarchive:
    post:
      tags:
      - groups
      description: Unarchives a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/groups.unarchive
      operationId: groups_unarchive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `groups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to unarchive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Private channel to unarchive
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - groups:write
  /im.close:
    post:
      tags:
      - im
      description: Close a direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.close
      operationId: im_close
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `im:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Direct message channel to close.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Direct message channel to close.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - im:write
  /im.history:
    get:
      tags:
      - im
      description: Fetches history of messages and events from direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.history
      operationId: im_history
      parameters:
      - name: count
        in: query
        description: Number of messages to return, between 1 and 1000.
        schema:
          type: integer
      - name: unreads
        in: query
        description: Include `unread_count_display` in the output?
        schema:
          type: boolean
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `im:history`'
        schema:
          type: string
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Direct message channel to fetch history for.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: im.history success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from im.history method
              example:
                has_more: false
                latest: "1358547726.000003"
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: im.history error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from im.history method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - im:history
  /im.list:
    get:
      tags:
      - im
      description: Lists direct message channels for the calling user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.list
      operationId: im_list
      parameters:
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `im:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: im.list success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response im.list method
              example:
                ims:
                - created: 1449709280
                  id: D0G9QPY56
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: USLACKBOT
                - created: 1466692204
                  id: D1KL59A72
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: U0G9QF9C6
                - created: 1449722883
                  id: D0G9XPFH9
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: U0G9WFXNZ
                - created: 1452098023
                  id: D0HRHJSF7
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: W0HRJL7CK
                - created: 1465834222
                  id: D1GD7CHC0
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: true
                  user: U1GDBDGR3
                - created: 1468274703
                  id: D1QMF76M9
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: U1QNSQB9U
                - created: 1502210225
                  id: D6K48KKRN
                  is_im: true
                  is_org_shared: false
                  is_user_deleted: false
                  user: U6KR7BVFW
                ok: true
                response_metadata:
                  next_cursor: aW1faWQ6RDBCSDk1RExI=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: im.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from im.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - im:read
  /im.mark:
    post:
      tags:
      - im
      description: Sets the read cursor in a direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.mark
      operationId: im_mark
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `im:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Direct message channel to set reading cursor in.
          application/json:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: Direct message channel to set reading cursor in.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: im.mark success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response im.mark method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: im.mark error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response im.mark method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - im:write
  /im.open:
    post:
      tags:
      - im
      description: Opens a direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.open
      operationId: im_open
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `im:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                return_im:
                  type: boolean
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                user:
                  type: string
                  description: User to open a direct message channel with.
                include_locale:
                  type: boolean
                  description: Set this to `true` to receive the locale for this im.
                    Defaults to `false`
          application/json:
            schema:
              properties:
                return_im:
                  type: boolean
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                user:
                  type: string
                  description: User to open a direct message channel with.
                include_locale:
                  type: boolean
                  description: Set this to `true` to receive the locale for this im.
                    Defaults to `false`
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: im.open success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from im.open method
              example:
                channel:
                  id: D947RLWRX
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: im.open error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from im.open method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - im:write
  /im.replies:
    get:
      tags:
      - im
      description: Retrieve a thread of messages posted to a direct message conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/im.replies
      operationId: im_replies
      parameters:
      - name: thread_ts
        in: query
        description: Unique identifier of a thread's parent message
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `im:history`'
        schema:
          type: string
      - name: channel
        in: query
        description: Direct message channel to fetch thread from
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - im:history
  /migration.exchange:
    get:
      tags:
      - migration
      description: For Enterprise Grid workspaces, map local user IDs to global user
        IDs
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/migration.exchange
      operationId: migration_exchange
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `tokens.basic`'
        schema:
          type: string
      - name: to_old
        in: query
        description: Specify `true` to convert `W` global user IDs to workspace-specific
          `U` IDs. Defaults to `false`.
        schema:
          type: boolean
      - name: users
        in: query
        description: A comma-separated list of user ids, up to 400 per request
        schema:
          type: string
      responses:
        200:
          description: Typical success response when mappings exist for the specified
            user IDs
          content:
            application/json:
              schema:
                title: migration.exchange success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from migration.exchange
                  method
              example:
                enterprise_id: E1KQTNXE1
                invalid_user_ids:
                - U21ABZZXX
                ok: true
                team_id: T1KR7PE1W
                user_id_map:
                  U06UBSUN5: W06M56XJM
                  U06UBSVB3: W06PUUDLY
                  U06UBSVDX: W06PUUDMW
                  U06UEB62U: W06PTT6GH
                  W06UAZ65Q: W06UAZ65Q
        default:
          description: Typical error response when there are no mappings to provide
          content:
            application/json:
              schema:
                title: migration.exchange error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from migration.exchange method
              example:
                error: not_enterprise_team
                ok: false
      security:
      - slackAuth:
        - tokens.basic
  /mpim.close:
    post:
      tags:
      - mpim
      description: Closes a multiparty direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.close
      operationId: mpim_close
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `mpim:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: MPIM to close.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: MPIM to close.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - mpim:write
  /mpim.history:
    get:
      tags:
      - mpim
      description: Fetches history of messages and events from a multiparty direct
        message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.history
      operationId: mpim_history
      parameters:
      - name: count
        in: query
        description: Number of messages to return, between 1 and 1000.
        schema:
          type: integer
      - name: unreads
        in: query
        description: Include `unread_count_display` in the output?
        schema:
          type: boolean
      - name: inclusive
        in: query
        description: Include messages with latest or oldest timestamp in results.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `mpim:history`'
        schema:
          type: string
      - name: oldest
        in: query
        description: Start of time range of messages to include in results.
        schema:
          type: number
      - name: channel
        in: query
        description: Multiparty direct message to fetch history for.
        schema:
          type: string
      - name: latest
        in: query
        description: End of time range of messages to include in results.
        schema:
          type: number
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                has_more: false
                latest: "1358547726.000003"
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - mpim:history
  /mpim.list:
    get:
      tags:
      - mpim
      description: Lists multiparty direct message channels for the calling user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.list
      operationId: mpim_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `mpim:read`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - mpim:read
  /mpim.mark:
    post:
      tags:
      - mpim
      description: Sets the read cursor in a multiparty direct message channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.mark
      operationId: mpim_mark
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `mpim:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: multiparty direct message channel to set reading cursor
                    in.
          application/json:
            schema:
              properties:
                ts:
                  type: number
                  description: Timestamp of the most recently seen message.
                channel:
                  type: string
                  description: multiparty direct message channel to set reading cursor
                    in.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: mpim.mark schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from mpim.mark method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: mpim.mark error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from mpim.mark method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - mpim:write
  /mpim.open:
    post:
      tags:
      - mpim
      description: This method opens a multiparty direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.open
      operationId: mpim_open
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `mpim:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                users:
                  type: string
                  description: Comma separated lists of users.  The ordering of the
                    users is preserved whenever a MPIM group is returned.
          application/json:
            schema:
              properties:
                users:
                  type: string
                  description: Comma separated lists of users.  The ordering of the
                    users is preserved whenever a MPIM group is returned.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: mpim.open success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from mpim.open method
              example:
                channel:
                  id: D024BFF1M
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: mpim.open error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from mpim.open method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - mpim:write
  /mpim.replies:
    get:
      tags:
      - mpim
      description: Retrieve a thread of messages posted to a direct message conversation
        from a multiparty direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/mpim.replies
      operationId: mpim_replies
      parameters:
      - name: thread_ts
        in: query
        description: Unique identifier of a thread's parent message.
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `mpim:history`'
        schema:
          type: string
      - name: channel
        in: query
        description: Multiparty direct message channel to fetch thread from.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                messages:
                - text: Hello
                  ts: "1358546515.000008"
                  type: message
                  user: U2147483896
                - is_starred: true
                  text: World
                  ts: "1358546515.000007"
                  type: message
                  user: U2147483896
                - ts: "1358546515.000007"
                  type: something_else
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - mpim:history
  /oauth.access:
    get:
      tags:
      - oauth
      description: Exchanges a temporary OAuth verifier code for an access token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.access
      operationId: oauth_access
      parameters:
      - name: client_secret
        in: query
        description: Issued when you created your application.
        schema:
          type: string
      - name: code
        in: query
        description: The `code` param returned via the OAuth callback.
        schema:
          type: string
      - name: single_channel
        in: query
        description: Request the user to add your app only to a single channel.
        schema:
          type: boolean
      - name: client_id
        in: query
        description: Issued when you created your application.
        schema:
          type: string
      - name: redirect_uri
        in: query
        description: This must match the originally submitted URI (if one was sent).
        schema:
          type: string
      responses:
        200:
          description: Successful user token negotiation for a single scope
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                access_token: xoxp-XXXXXXXX-XXXXXXXX-XXXXX
                scope: groups:write
                team_id: TXXXXXXXXX
                team_name: Wyld Stallyns LLC
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_client_id
                ok: false
      security:
      - slackAuth:
        - none
  /oauth.token:
    get:
      tags:
      - oauth
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.token
      operationId: oauth_token
      parameters:
      - name: client_secret
        in: query
        description: Issued when you created your application.
        schema:
          type: string
      - name: code
        in: query
        description: The `code` param returned via the OAuth callback.
        schema:
          type: string
      - name: single_channel
        in: query
        description: Request the user to add your app only to a single channel.
        schema:
          type: boolean
      - name: client_id
        in: query
        description: Issued when you created your application.
        schema:
          type: string
      - name: redirect_uri
        in: query
        description: This must match the originally submitted URI (if one was sent).
        schema:
          type: string
      responses:
        200:
          description: Success example using a workspace app produces a very different
            kind of response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                access_token: xoxa-access-token-string
                app_id: A012345678
                app_user_id: U0AB12ABC
                authorizing_user_id: U0HTT3Q0G
                installer_user_id: U061F7AUR
                ok: true
                permissions:
                - resource_id: 0
                  resource_type: channel
                  scopes:
                  - channels:read
                  - chat:write:user
                single_channel_id: C061EG9T2
                team_id: T061EG9Z9
                team_name: Subarachnoid Workspace
                token_type: app
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_client_id
                ok: false
      security:
      - slackAuth:
        - none
  /pins.add:
    post:
      tags:
      - pins
      description: Pins an item to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.add
      operationId: pins_add
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `pins:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to pin.
                timestamp:
                  type: number
                  description: Timestamp of the message to pin.
                file:
                  type: string
                  description: File to pin.
                channel:
                  type: string
                  description: Channel to pin the item in.
          application/json:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to pin.
                timestamp:
                  type: number
                  description: Timestamp of the message to pin.
                file:
                  type: string
                  description: File to pin.
                channel:
                  type: string
                  description: Channel to pin the item in.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: pins.add schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from pins.add method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: pins.add error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from pins.add method
              example:
                error: channel_not_found
                ok: false
      security:
      - slackAuth:
        - pins:write
  /pins.list:
    get:
      tags:
      - pins
      description: Lists items pinned to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.list
      operationId: pins_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `pins:read`'
        schema:
          type: string
      - name: channel
        in: query
        description: Channel to get pinned items for.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: pins.list success schema
                type: object
                description: Schema for successful response from pins.list method
              example:
                items:
                - channel: C2U86NC6H
                  created: 1508881078
                  created_by: U2U85N1RZ
                  message:
                    permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151
                    pinned_to:
                    - C2U86NC6H
                    text: What is the meaning of life?
                    ts: "1508197641.000151"
                    type: message
                    user: U2U85N1RZ
                  type: message
                - channel: C2U86NC6H
                  created: 1508880991
                  created_by: U2U85N1RZ
                  message:
                    permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015
                    pinned_to:
                    - C2U86NC6H
                    text: The meaning of life, the universe, and everything is 42.
                    ts: "1503289197.000015"
                    type: message
                    user: U2U85N1RZ
                  type: message
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: pins.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from pins.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - pins:read
  /pins.remove:
    post:
      tags:
      - pins
      description: Un-pins an item from a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.remove
      operationId: pins_remove
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `pins:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to un-pin.
                timestamp:
                  type: number
                  description: Timestamp of the message to un-pin.
                file:
                  type: string
                  description: File to un-pin.
                channel:
                  type: string
                  description: Channel where the item is pinned to.
          application/json:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to un-pin.
                timestamp:
                  type: number
                  description: Timestamp of the message to un-pin.
                file:
                  type: string
                  description: File to un-pin.
                channel:
                  type: string
                  description: Channel where the item is pinned to.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: pins.remove schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from pins.remove method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: pins.remove error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from pins.remove method
              example:
                error: no_pin
                ok: false
      security:
      - slackAuth:
        - pins:write
  /reactions.add:
    post:
      tags:
      - reactions
      description: Adds a reaction to an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.add
      operationId: reactions_add
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `reactions:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Reaction (emoji) name.
                file_comment:
                  type: string
                  description: File comment to add reaction to.
                timestamp:
                  type: number
                  description: Timestamp of the message to add reaction to.
                file:
                  type: string
                  description: File to add reaction to.
                channel:
                  type: string
                  description: Channel where the message to add reaction to was posted.
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Reaction (emoji) name.
                file_comment:
                  type: string
                  description: File comment to add reaction to.
                timestamp:
                  type: number
                  description: Timestamp of the message to add reaction to.
                file:
                  type: string
                  description: File to add reaction to.
                channel:
                  type: string
                  description: Channel where the message to add reaction to was posted.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: reactions.add schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.add method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: reactions.add error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.add method
              example:
                error: already_reacted
                ok: false
      security:
      - slackAuth:
        - reactions:write
  /reactions.get:
    get:
      tags:
      - reactions
      description: Gets reactions for an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.get
      operationId: reactions_get
      parameters:
      - name: full
        in: query
        description: If true always return the complete reaction list.
        schema:
          type: boolean
      - name: file_comment
        in: query
        description: File comment to get reactions for.
        schema:
          type: string
      - name: timestamp
        in: query
        description: Timestamp of the message to get reactions for.
        schema:
          type: number
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `reactions:read`'
        schema:
          type: string
      - name: file
        in: query
        description: File to get reactions for.
        schema:
          type: string
      - name: channel
        in: query
        description: Channel where the message to get reactions for was posted.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: reactions.get success schema
                type: object
                description: Schema for successful response from reactions.get method
              example:
                file:
                  channels:
                  - C2U7V2YA2
                  comments_count: 1
                  created: 1507850315
                  groups: []
                  id: F7H0D7ZA4
                  ims: []
                  name: computer.gif
                  reactions:
                  - count: 1
                    name: stuck_out_tongue_winking_eye
                    users:
                    - U2U85N1RV
                  timestamp: 1507850315
                  title: computer.gif
                  user: U2U85N1RV
                ok: true
                type: file
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: reactions.get error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.get method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reactions:read
  /reactions.list:
    get:
      tags:
      - reactions
      description: Lists reactions made by a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.list
      operationId: reactions_list
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `reactions:read`'
        schema:
          type: string
      - name: full
        in: query
        description: If true always return the complete reaction list.
        schema:
          type: boolean
      - name: user
        in: query
        description: Show reactions made by this user. Defaults to the authed user.
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: reactions.list schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.list method
              example:
                items:
                - channel: C3UKJTQAC
                  message:
                    bot_id: B4VLRLMKJ
                    reactions:
                    - count: 1
                      name: robot_face
                      users:
                      - U2U85N1RV
                    subtype: bot_message
                    text: 'Hello from Python! :tada:'
                    ts: "1507849573.000090"
                    username: Shipit Notifications
                  type: message
                - comment:
                    comment: This is a file comment
                    created: 1508286096
                    id: Fc7LP08P1U
                    reactions:
                    - count: 1
                      name: white_check_mark
                      users:
                      - U2U85N1RV
                    timestamp: 1508286096
                    type: file_comment
                    user: U2U85N1RV
                  file:
                    channels:
                    - C2U7V2YA2
                    comments_count: 1
                    created: 1507850315
                    reactions:
                    - count: 1
                      name: stuck_out_tongue_winking_eye
                      users:
                      - U2U85N1RV
                    title: computer.gif
                    user: U2U85N1RV
                    username: ""
                - file:
                    channels:
                    - C2U7V2YA2
                    comments_count: 1
                    created: 1507850315
                    id: F7H0D7ZA4
                    name: computer.gif
                    reactions:
                    - count: 1
                      name: stuck_out_tongue_winking_eye
                      users:
                      - U2U85N1RV
                    size: 1639034
                    title: computer.gif
                    user: U2U85N1RV
                    username: ""
                  type: file
                ok: true
                paging:
                  count: 100
                  page: 1
                  pages: 1
                  total: 3
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: reactions.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.list method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reactions:read
  /reactions.remove:
    post:
      tags:
      - reactions
      description: Removes a reaction from an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.remove
      operationId: reactions_remove
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `reactions:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Reaction (emoji) name.
                file_comment:
                  type: string
                  description: File comment to remove reaction from.
                timestamp:
                  type: number
                  description: Timestamp of the message to remove reaction from.
                file:
                  type: string
                  description: File to remove reaction from.
                channel:
                  type: string
                  description: Channel where the message to remove reaction from was
                    posted.
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Reaction (emoji) name.
                file_comment:
                  type: string
                  description: File comment to remove reaction from.
                timestamp:
                  type: number
                  description: Timestamp of the message to remove reaction from.
                file:
                  type: string
                  description: File to remove reaction from.
                channel:
                  type: string
                  description: Channel where the message to remove reaction from was
                    posted.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: reactions.remove schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.remove
                  method
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: reactions.remove error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.remove method
              example:
                error: no_reaction
                ok: false
      security:
      - slackAuth:
        - reactions:write
  /reminders.add:
    post:
      tags:
      - reminders
      description: Creates a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.add
      operationId: reminders_add
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `reminders:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                text:
                  type: string
                  description: The content of the reminder
                user:
                  type: string
                  description: The user who will receive the reminder. If no user
                    is specified, the reminder will go to user who created it.
                time:
                  type: string
                  description: 'When this reminder should happen: the Unix timestamp
                    (up to five years from now), the number of seconds until the reminder
                    (if within 24 hours), or a natural language description (Ex. "in
                    15 minutes," or "every Thursday")'
          application/json:
            schema:
              properties:
                text:
                  type: string
                  description: The content of the reminder
                user:
                  type: string
                  description: The user who will receive the reminder. If no user
                    is specified, the reminder will go to user who created it.
                time:
                  type: string
                  description: 'When this reminder should happen: the Unix timestamp
                    (up to five years from now), the number of seconds until the reminder
                    (if within 24 hours), or a natural language description (Ex. "in
                    15 minutes," or "every Thursday")'
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reminders:write
  /reminders.complete:
    post:
      tags:
      - reminders
      description: Marks a reminder as complete.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.complete
      operationId: reminders_complete
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `reminders:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder to be marked as complete
          application/json:
            schema:
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder to be marked as complete
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reminders:write
  /reminders.delete:
    post:
      tags:
      - reminders
      description: Deletes a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.delete
      operationId: reminders_delete
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `reminders:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder
          application/json:
            schema:
              properties:
                reminder:
                  type: string
                  description: The ID of the reminder
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reminders:write
  /reminders.info:
    get:
      tags:
      - reminders
      description: Gets information about a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.info
      operationId: reminders_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `reminders:read`'
        schema:
          type: string
      - name: reminder
        in: query
        description: The ID of the reminder
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reminders:read
  /reminders.list:
    get:
      tags:
      - reminders
      description: Lists all reminders created by or for a given user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.list
      operationId: reminders_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `reminders:read`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - reminders:read
  /rtm.connect:
    get:
      tags:
      - rtm
      description: Starts a Real Time Messaging session.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/rtm.connect
      operationId: rtm_connect
      parameters:
      - name: presence_sub
        in: query
        description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `rtm:stream`'
        schema:
          type: string
      - name: batch_presence_aware
        in: query
        description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
        schema:
          type: boolean
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: rtm.connect schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from rtm.connect method
              example:
                ok: true
                self:
                  id: U4X318ZMZ
                  name: robotoverlord
                team:
                  domain: slackdemo
                  id: T2U81E2FP
                  name: SlackDemo
                url: wss://...
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: rtm.connect error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from rtm.connect method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - rtm:stream
  /search.all:
    get:
      tags:
      - search
      description: Searches for messages and files matching a query.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/search.all
      operationId: search_all
      parameters:
      - name: sort_dir
        in: query
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        schema:
          type: string
      - name: query
        in: query
        description: Search query. May contains booleans, etc.
        schema:
          type: string
      - name: sort
        in: query
        description: Return matches sorted by either `score` or `timestamp`.
        schema:
          type: string
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `search:read`'
        schema:
          type: string
      - name: highlight
        in: query
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        schema:
          type: boolean
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                files:
                  matches:
                  - channels: []
                    comments_count: 1
                    created: 1508804330
                    display_as_bot: false
                    editable: false
                    external_type: ""
                    filetype: png
                    groups: []
                    id: F7PKF1NR7
                    image_exif_rotation: 1
                    ims: []
                    initial_comment:
                      comment: Sure! Here's the workflow diagram!
                      created: 1508804330
                      id: Fc7NLL52E7
                      is_intro: true
                      timestamp: 1508804330
                      user: U2U85N1RZ
                    is_external: false
                    is_public: true
                    mimetype: image/png
                    mode: hosted
                    name: slack workflow diagram.png
                    original_h: 117
                    original_w: 128
                    permalink: https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png
                    permalink_public: https://slack-files.com/T2U81E2FZ-F7PKF1NR7-bea9143f18
                    pretty_type: PNG
                    public_url_shared: false
                    score: "0.99982661240974"
                    size: 35705
                    thumb_160: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_160.png
                    thumb_360: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_360.png
                    thumb_360_h: 117
                    thumb_360_w: 128
                    thumb_64: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_64.png
                    thumb_80: https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_80.png
                    timestamp: 1508804330
                    title: slack workflow diagram
                    top_file: false
                    url_private: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/slack_workflow_diagram.png
                    url_private_download: https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/download/slack_workflow_diagram.png
                    user: U2U85N1RZ
                    username: amy
                  pagination:
                    first: 1
                    last: 1
                    page: 1
                    page_count: 1
                    per_page: 20
                    total_count: 1
                  paging:
                    count: 20
                    page: 1
                    pages: 1
                    total: 1
                  total: 1
                messages:
                  matches:
                  - channel:
                      id: C2U86NC6M
                      is_ext_shared: false
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_shared: false
                      name: general
                      pending_shared: []
                    iid: 35692677-e60e-43d9-ac45-1987cea88975
                    next:
                      iid: 6f510ea1-e1d3-4f3f-bdb9-f9c6f6e9d609
                      text: Thanks!
                      ts: "1508804378.000219"
                      type: message
                      user: U2U85HJ7R
                      username: john
                    permalink: https://example.slack.com/archives/C2U86NC6M/p1508804330000296
                    previous:
                      iid: aba8603c-0543-4fb2-9118-a5ac85f3d138
                      text: Can you send me the Slack workflow diagram?
                      ts: "1508804301.000026"
                      type: message
                      user: U2U85HJ7R
                      username: john
                    team: T2U81E2FZ
                    text: 'uploaded a file: <https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png|slack
                      workflow diagram> and commented: Sure! Here''s the workflow
                      diagram!'
                    ts: "1508804330.000296"
                    type: message
                    user: U2U85N1RZ
                    username: amy
                  pagination:
                    first: 1
                    last: 1
                    page: 1
                    page_count: 1
                    per_page: 20
                    total_count: 1
                  paging:
                    count: 20
                    page: 1
                    pages: 1
                    total: 1
                  total: 1
                ok: true
                posts:
                  matches: []
                  total: 0
                query: diagram
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: missing_scope
                needed: search:read
                ok: false
                provided: identify,bot:basic
      security:
      - slackAuth:
        - search:read
  /search.files:
    get:
      tags:
      - search
      description: Searches for files matching a query.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/search.files
      operationId: search_files
      parameters:
      - name: sort_dir
        in: query
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        schema:
          type: string
      - name: query
        in: query
        description: Search query.
        schema:
          type: string
      - name: sort
        in: query
        description: Return matches sorted by either `score` or `timestamp`.
        schema:
          type: string
      - name: highlight
        in: query
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        schema:
          type: boolean
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `search:read`'
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                files:
                  matches:
                  - channels: []
                    comments_count: 1
                    created: 1507850315
                    deanimate_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_deanimate_gif.png
                    display_as_bot: false
                    editable: false
                    external_type: ""
                    filetype: gif
                    groups: []
                    id: F7H0D7ZBB
                    image_exif_rotation: 1
                    ims: []
                    is_external: false
                    is_public: true
                    mimetype: image/gif
                    mode: hosted
                    name: computer.gif
                    original_h: 313
                    original_w: 500
                    permalink: https://eventsdemo.slack.com/files/U2U85N1RZ/F7H0D7ZBB/computer.gif
                    permalink_public: https://slack-files.com/T2U81E2BB-F7H0D7ZBB-85b7f5557e
                    pretty_type: GIF
                    public_url_shared: false
                    reactions:
                    - count: 1
                      name: stuck_out_tongue_winking_eye
                      users:
                      - U2U85N1RZ
                    score: "0.38899223746309"
                    size: 1639034
                    thumb_160: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_160.png
                    thumb_360: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.png
                    thumb_360_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.gif
                    thumb_360_h: 225
                    thumb_360_w: 360
                    thumb_480: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.png
                    thumb_480_gif: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.gif
                    thumb_480_h: 300
                    thumb_480_w: 480
                    thumb_64: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_64.png
                    thumb_80: https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_80.png
                    timestamp: 1507850315
                    title: computer.gif
                    top_file: false
                    url_private: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/computer.gif
                    url_private_download: https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/download/computer.gif
                    user: U2U85N1RZ
                    username: ""
                  pagination:
                    first: 1
                    last: 3
                    page: 1
                    page_count: 1
                    per_page: 20
                    total_count: 3
                  paging:
                    count: 20
                    page: 1
                    pages: 1
                    total: 3
                  total: 3
                ok: true
                query: computer.gif
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: No query passed
                ok: false
      security:
      - slackAuth:
        - search:read
  /search.messages:
    get:
      tags:
      - search
      description: Searches for messages matching a query.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/search.messages
      operationId: search_messages
      parameters:
      - name: sort_dir
        in: query
        description: Change sort direction to ascending (`asc`) or descending (`desc`).
        schema:
          type: string
      - name: query
        in: query
        description: Search query.
        schema:
          type: string
      - name: sort
        in: query
        description: Return matches sorted by either `score` or `timestamp`.
        schema:
          type: string
      - name: count
        in: query
        description: Pass the number of results you want per "page". Maximum of `100`.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `search:read`'
        schema:
          type: string
      - name: highlight
        in: query
        description: Pass a value of `true` to enable query highlight markers (see
          below).
        schema:
          type: boolean
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                messages:
                  matches:
                  - channel:
                      id: C12345678
                      is_ext_shared: false
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_shared: false
                      name: general
                      pending_shared: []
                    iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9
                    permalink: https://hitchhikers.slack.com/archives/C12345678/p1508284197000015
                    team: T12345678
                    text: The meaning of life the universe and everything is 42.
                    ts: "1508284197.000015"
                    type: message
                    user: U2U85N1RV
                    username: roach
                  - channel:
                      id: C12345678
                      is_ext_shared: false
                      is_mpim: false
                      is_org_shared: false
                      is_pending_ext_shared: false
                      is_private: false
                      is_shared: false
                      name: random
                      pending_shared: []
                    iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90
                    permalink: https://hitchhikers.slack.com/archives/C12345678/p1508795665000236
                    team: T12345678
                    text: The meaning of life the universe and everything is 101010
                    ts: "1508795665.000236"
                    type: message
                    user: ""
                    username: robot overlord
                  pagination:
                    first: 1
                    last: 2
                    page: 1
                    page_count: 1
                    per_page: 20
                    total_count: 2
                  paging:
                    count: 20
                    page: 1
                    pages: 1
                    total: 2
                  total: 2
                ok: true
                query: The meaning of life the universe and everything
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: No query passed
                ok: false
      security:
      - slackAuth:
        - search:read
  /stars.add:
    post:
      tags:
      - stars
      description: Adds a star to an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.add
      operationId: stars_add
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `stars:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to add star to.
                timestamp:
                  type: number
                  description: Timestamp of the message to add star to.
                channel:
                  type: string
                  description: Channel to add star to, or channel where the message
                    to add star to was posted (used with `timestamp`).
                file:
                  type: string
                  description: File to add star to.
          application/json:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to add star to.
                timestamp:
                  type: number
                  description: Timestamp of the message to add star to.
                channel:
                  type: string
                  description: Channel to add star to, or channel where the message
                    to add star to was posted (used with `timestamp`).
                file:
                  type: string
                  description: File to add star to.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - stars:write
  /stars.list:
    get:
      tags:
      - stars
      description: Lists stars for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.list
      operationId: stars_list
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `stars:read`'
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - stars:read
  /stars.remove:
    post:
      tags:
      - stars
      description: Removes a star from an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.remove
      operationId: stars_remove
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `stars:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to remove star from.
                timestamp:
                  type: number
                  description: Timestamp of the message to remove star from.
                channel:
                  type: string
                  description: Channel to remove star from, or channel where the message
                    to remove star from was posted (used with `timestamp`).
                file:
                  type: string
                  description: File to remove star from.
          application/json:
            schema:
              properties:
                file_comment:
                  type: string
                  description: File comment to remove star from.
                timestamp:
                  type: number
                  description: Timestamp of the message to remove star from.
                channel:
                  type: string
                  description: Channel to remove star from, or channel where the message
                    to remove star from was posted (used with `timestamp`).
                file:
                  type: string
                  description: File to remove star from.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - stars:write
  /team.accessLogs:
    get:
      tags:
      - team
      description: Gets the access logs for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.accessLogs
      operationId: team_accessLogs
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `admin`'
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: before
        in: query
        description: End of time range of logs to include in results (inclusive).
        schema:
          type: integer
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - admin
  /team.billableInfo:
    get:
      tags:
      - team
      description: Gets billable users information for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.billableInfo
      operationId: team_billableInfo
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `admin`'
        schema:
          type: string
      - name: user
        in: query
        description: A user to retrieve the billable information for. Defaults to
          all users.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - admin
  /team.info:
    get:
      tags:
      - team
      description: Gets information about the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.info
      operationId: team_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `team:read`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: team.info schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from team.info method
              example:
                ok: true
                team:
                  domain: example
                  email_domain: example.com
                  enterprise_id: E1234A12AB
                  enterprise_name: Umbrella Corporation
                  icon:
                    image_102: https://...
                    image_132: https://...
                    image_34: https://...
                    image_44: https://...
                    image_68: https://...
                    image_88: https://...
                    image_default: true
                  id: T12345
                  name: My Team
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: team.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from team.info method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - team:read
  /team.integrationLogs:
    get:
      tags:
      - team
      description: Gets the integration logs for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.integrationLogs
      operationId: team_integrationLogs
      parameters:
      - name: count
        in: query
        schema:
          type: string
      - name: change_type
        in: query
        description: Filter logs with this change type. Defaults to all logs.
        schema:
          type: string
      - name: app_id
        in: query
        description: Filter logs to this Slack app. Defaults to all logs.
        schema:
          type: integer
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `admin`'
        schema:
          type: string
      - name: user
        in: query
        description: Filter logs generated by this user’s actions. Defaults to all
          logs.
        schema:
          type: string
      - name: service_id
        in: query
        description: Filter logs to this service. Defaults to all logs.
        schema:
          type: integer
      - name: page
        in: query
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - admin
  /team.profile.get:
    get:
      tags:
      - team.profile
      - team
      description: Retrieve a team's profile.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.profile.get
      operationId: team_profile_get
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users.profile:read`'
        schema:
          type: string
      - name: visibility
        in: query
        description: Filter by visibility.
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: team.profile.get success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from team.profile.get
                  method
              example:
                ok: true
                profile:
                  fields:
                  - hint: Enter the extension to reach your desk
                    id: Xf06054AAA
                    is_hidden: 1
                    label: Phone extension
                    ordering: 0
                    type: text
                  - hint: When you were born
                    id: Xf06054BBB
                    label: Date of birth
                    ordering: 1
                    type: date
                  - hint: Enter a link to your Facebook profile
                    id: Xf06054CCC
                    label: Facebook
                    ordering: 2
                    type: link
                  - hint: Hogwarts, obviously
                    id: Xf06054DDD
                    label: House
                    ordering: 3
                    possible_values:
                    - Gryffindor
                    - Hufflepuff
                    - Ravenclaw
                    - Slytherin
                    type: options_list
                  - hint: Office location (LDAP)
                    id: Xf06054EEE
                    label: Location
                    options:
                      is_protected: 1
                    ordering: 4
                    type: text
                  - hint: The boss
                    id: Xf06054FFF
                    label: Manager
                    ordering: 5
                    type: user
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: team.profile.get error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from team.profile.get method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users.profile:read
  /usergroups.create:
    post:
      tags:
      - usergroups
      description: Create a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.create
      operationId: usergroups_create
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `usergroups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                handle:
                  type: string
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User
                    Groups.
                channels:
                  type: string
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                include_count:
                  type: boolean
                  description: Include the number of users in each User Group.
                description:
                  type: string
                  description: A short description of the User Group.
          application/json:
            schema:
              properties:
                handle:
                  type: string
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User
                    Groups.
                channels:
                  type: string
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                include_count:
                  type: boolean
                  description: Include the number of users in each User Group.
                description:
                  type: string
                  description: A short description of the User Group.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:write
  /usergroups.disable:
    post:
      tags:
      - usergroups
      description: Disable an existing User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.disable
      operationId: usergroups_disable
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `usergroups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to disable.
          application/json:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to disable.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:write
  /usergroups.enable:
    post:
      tags:
      - usergroups
      description: Enable a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.enable
      operationId: usergroups_enable
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `usergroups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to enable.
          application/json:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to enable.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:write
  /usergroups.list:
    get:
      tags:
      - usergroups
      description: List all User Groups for a team
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.list
      operationId: usergroups_list
      parameters:
      - name: include_users
        in: query
        description: Include the list of users for each User Group.
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `usergroups:read`'
        schema:
          type: string
      - name: include_count
        in: query
        description: Include the number of users in each User Group.
        schema:
          type: boolean
      - name: include_disabled
        in: query
        description: Include disabled User Groups.
        schema:
          type: boolean
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
                usergroups:
                - auto_type: admin
                  created_by: USLACKBOT
                  date_create: 1446598059
                  date_delete: 0
                  date_update: 1446670362
                  description: A group of all Administrators on your team.
                  handle: admins
                  id: S0614TZR7
                  is_external: false
                  is_usergroup: true
                  name: Team Admins
                  prefs:
                    channels: []
                    groups: []
                  team_id: T060RNRCH
                  updated_by: U060RNRCZ
                  user_count: "2"
                - auto_type: owner
                  created_by: USLACKBOT
                  date_create: 1446678371
                  date_delete: 0
                  date_update: 1446678371
                  description: A group of all Owners on your team.
                  handle: owners
                  id: S06158AV7
                  is_external: false
                  is_usergroup: true
                  name: Team Owners
                  prefs:
                    channels: []
                    groups: []
                  team_id: T060RNRCH
                  updated_by: USLACKBOT
                  user_count: "1"
                - created_by: U060RNRCZ
                  date_create: 1446746793
                  date_delete: 1446748865
                  date_update: 1446747767
                  description: Marketing gurus, PR experts and product advocates.
                  handle: marketing-team
                  id: S0615G0KT
                  is_external: false
                  is_usergroup: true
                  name: Marketing Team
                  prefs:
                    channels: []
                    groups: []
                  team_id: T060RNRCH
                  updated_by: U060RNRCZ
                  user_count: "0"
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:read
  /usergroups.update:
    post:
      tags:
      - usergroups
      description: Update an existing User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.update
      operationId: usergroups_update
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `usergroups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                handle:
                  type: string
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                description:
                  type: string
                  description: A short description of the User Group.
                channels:
                  type: string
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User
                    Groups.
          application/json:
            schema:
              properties:
                handle:
                  type: string
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                description:
                  type: string
                  description: A short description of the User Group.
                channels:
                  type: string
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
                name:
                  type: string
                  description: A name for the User Group. Must be unique among User
                    Groups.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
                usergroup:
                  created_by: U060R4BJ4
                  date_create: 1447096577
                  date_delete: 0
                  date_update: 1447102109
                  description: Marketing gurus, PR experts and product advocates.
                  handle: marketing-team
                  id: S0616NG6M
                  is_external: false
                  is_usergroup: true
                  name: Marketing Team
                  prefs:
                    channels: []
                    groups: []
                  team_id: T060R4BHN
                  updated_by: U060R4BJ4
                  user_count: 1
                  users:
                  - U060R4BJ4
                  - U060RNRCZ
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:write
  /usergroups.users.list:
    get:
      tags:
      - usergroups.users
      - usergroups
      description: List all users in a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.list
      operationId: usergroups_users_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `usergroups:read`'
        schema:
          type: string
      - name: include_disabled
        in: query
        description: Allow results that involve disabled User Groups.
        schema:
          type: boolean
      - name: usergroup
        in: query
        description: The encoded ID of the User Group to update.
        schema:
          type: string
      responses:
        200:
          description: Standard success response when used with a user token
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
                users:
                - U060R4BJ4
                - W123A4BC5
        default:
          description: Standard failure response when used with an invalid token
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:read
  /usergroups.users.update:
    post:
      tags:
      - usergroups.users
      - usergroups
      description: Update the list of users for a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.update
      operationId: usergroups_users_update
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `usergroups:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                users:
                  type: string
                  description: A comma separated string of encoded user IDs that represent
                    the entire list of users for the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
          application/json:
            schema:
              properties:
                include_count:
                  type: boolean
                  description: Include the number of users in the User Group.
                users:
                  type: string
                  description: A comma separated string of encoded user IDs that represent
                    the entire list of users for the User Group.
                usergroup:
                  type: string
                  description: The encoded ID of the User Group to update.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
                usergroup:
                  created_by: U060R4BJ4
                  date_create: 1447096577
                  date_delete: 0
                  date_update: 1447102109
                  description: Marketing gurus, PR experts and product advocates.
                  handle: marketing-team
                  id: S0616NG6M
                  is_external: false
                  is_usergroup: true
                  name: Marketing Team
                  prefs:
                    channels: []
                    groups: []
                  team_id: T060R4BHN
                  updated_by: U060R4BJ4
                  user_count: 1
                  users:
                  - U060R4BJ4
                  - U060RNRCZ
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - usergroups:write
  /users.conversations:
    get:
      tags:
      - users
      description: List conversations the calling user may access.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.conversations
      operationId: users_conversations
      parameters:
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        schema:
          type: integer
      - name: user
        in: query
        description: Browse conversations by a specific user ID's membership. Non-public
          channels are restricted to those where the calling user shares membership.
        schema:
          type: string
      - name: exclude_archived
        in: query
        description: Set to `true` to exclude archived channels from the list
        schema:
          type: boolean
      - name: types
        in: query
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        schema:
          type: string
      responses:
        200:
          description: Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical `conversations`
            objects.
          content:
            application/json:
              schema:
                title: users.conversations success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.conversations
                  method. Returned conversation objects do not include `num_members`
                  or `is_member`
              example:
                channels:
                - created: 1449252889
                  creator: U012A3CDE
                  id: C012AB3CD
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: true
                  is_group: false
                  is_im: false
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  name: general
                  name_normalized: general
                  pending_shared: []
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: This channel is for team-wide communication and announcements.
                      All team members are in this channel.
                  topic:
                    creator: ""
                    last_set: 0
                    value: Company-wide announcements and work-based matters
                  unlinked: 0
                - created: 1449252889
                  creator: U061F7AUR
                  id: C061EG9T2
                  is_archived: false
                  is_channel: true
                  is_ext_shared: false
                  is_general: false
                  is_group: false
                  is_im: false
                  is_mpim: false
                  is_org_shared: false
                  is_pending_ext_shared: false
                  is_private: false
                  is_shared: false
                  name: random
                  name_normalized: random
                  pending_shared: []
                  previous_names: []
                  purpose:
                    creator: ""
                    last_set: 0
                    value: A place for non-work-related flimflam, faffing, hodge-podge
                      or jibber-jabber you'd prefer to keep out of more focused work-related
                      channels.
                  topic:
                    creator: ""
                    last_set: 0
                    value: Non-work banter and water cooler conversation
                  unlinked: 0
                ok: true
                response_metadata:
                  next_cursor: dGVhbTpDMDYxRkE1UEI=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.conversations error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.conversations method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
  /users.deletePhoto:
    post:
      tags:
      - users
      description: Delete the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.deletePhoto
      operationId: users_deletePhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users.profile:write
  /users.getPresence:
    get:
      tags:
      - users
      description: Gets user presence information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.getPresence
      operationId: users_getPresence
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        schema:
          type: string
      - name: user
        in: query
        description: User to get presence info on. Defaults to the authed user.
        schema:
          type: string
      responses:
        200:
          description: When requesting information for a different user, this method
            just returns the current presence (either `active` or `away`).
          content:
            application/json:
              schema:
                title: 'API method: users.getPresence'
                type: object
                additionalProperties:
                  type: object
                description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
              example:
                ok: true
                presence: active
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.counts error schema
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: Schema for error response users.getPresence method
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users:read
  /users.identity:
    get:
      tags:
      - users
      description: Get a user's identity.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.identity
      operationId: users_identity
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `identity.basic`'
        schema:
          type: string
      responses:
        200:
          description: 'You will receive at a minimum the following information:'
          content:
            application/json:
              schema:
                title: users.identity schema
                type: object
                description: Schema for successful response from users.identity method
              example:
                ok: true
                team:
                  id: T0G9PQBBK
                user:
                  id: U0G9QF9C6
                  name: Sonny Whether
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.identity error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.identity method
              example:
                error: account_inactive
                ok: false
      security:
      - slackAuth:
        - identity.basic
  /users.info:
    get:
      tags:
      - users
      description: Gets information about a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.info
      operationId: users_info
      parameters:
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for this user. Defaults
          to `false`
        schema:
          type: boolean
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        schema:
          type: string
      - name: user
        in: query
        description: User to get info on
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.info method
              example:
                ok: true
                user:
                  color: 9f69e7
                  deleted: false
                  has_2fa: false
                  id: W012A3CDE
                  is_admin: true
                  is_app_user: false
                  is_bot: false
                  is_owner: false
                  is_primary_owner: false
                  is_restricted: false
                  is_ultra_restricted: false
                  name: spengler
                  profile:
                    avatar_hash: ge3b51ca72de
                    display_name: spengler
                    display_name_normalized: spengler
                    email: spengler@ghostbusters.example.com
                    image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    real_name: Egon Spengler
                    real_name_normalized: Egon Spengler
                    status_emoji: ':books:'
                    status_text: Print is dead
                    team: T012AB3C4
                  real_name: Egon Spengler
                  team_id: T012AB3C4
                  tz: America/Los_Angeles
                  tz_label: Pacific Daylight Time
                  tz_offset: -25200
                  updated: 1502138686
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.info method
              example:
                error: user_not_found
                ok: false
      security:
      - slackAuth:
        - users:read
  /users.list:
    get:
      tags:
      - users
      description: Lists all users in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.list
      operationId: users_list
      parameters:
      - name: presence
        in: query
        description: Deprecated. Whether to include presence data in the output. Defaults
          to `false`. Setting this to `true` reduces performance, especially with
          large teams.
        schema:
          type: boolean
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        schema:
          type: integer
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for users. Defaults
          to `false`
        schema:
          type: boolean
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.list schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.list method
              example:
                cache_ts: 1498777272
                members:
                - color: 9f69e7
                  deleted: false
                  has_2fa: false
                  id: W012A3CDE
                  is_admin: true
                  is_app_user: false
                  is_bot: false
                  is_owner: false
                  is_primary_owner: false
                  is_restricted: false
                  is_ultra_restricted: false
                  name: spengler
                  profile:
                    avatar_hash: ge3b51ca72de
                    display_name: spengler
                    display_name_normalized: spengler
                    email: spengler@ghostbusters.example.com
                    image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    real_name: Egon Spengler
                    real_name_normalized: Egon Spengler
                    status_emoji: ':books:'
                    status_text: Print is dead
                    team: T012AB3C4
                  real_name: spengler
                  team_id: T012AB3C4
                  tz: America/Los_Angeles
                  tz_label: Pacific Daylight Time
                  tz_offset: -25200
                  updated: 1502138686
                - color: 9f69e7
                  deleted: false
                  has_2fa: false
                  id: W07QCRPA4
                  is_admin: true
                  is_bot: false
                  is_owner: false
                  is_primary_owner: false
                  is_restricted: false
                  is_ultra_restricted: false
                  name: glinda
                  profile:
                    avatar_hash: 8fbdd10b41c6
                    display_name: Glinda the Fairly Good
                    display_name_normalized: Glinda the Fairly Good
                    email: glenda@south.oz.coven
                    first_name: Glinda
                    image_1024: https://a.slack-edge.com...png
                    image_192: https://a.slack-edge.com...png
                    image_24: https://a.slack-edge.com...png
                    image_32: https://a.slack-edge.com...png
                    image_48: https://a.slack-edge.com...png
                    image_512: https://a.slack-edge.com...png
                    image_72: https://a.slack-edge.com...png
                    image_original: https://a.slack-edge.com...png
                    last_name: Southgood
                    phone: ""
                    real_name: Glinda Southgood
                    real_name_normalized: Glinda Southgood
                    skype: ""
                    title: Glinda the Good
                  real_name: Glinda Southgood
                  team_id: T0G9PQBBK
                  tz: America/Los_Angeles
                  tz_label: Pacific Daylight Time
                  tz_offset: -25200
                  updated: 1480527098
                ok: true
                response_metadata:
                  next_cursor: dXNlcjpVMEc5V0ZYTlo=
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.list method
              example:
                error: invalid_cursor
                ok: false
      security:
      - slackAuth:
        - users:read
  /users.lookupByEmail:
    get:
      tags:
      - users
      description: Find a user with an email address.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.lookupByEmail
      operationId: users_lookupByEmail
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read.email`'
        schema:
          type: string
      - name: email
        in: query
        description: An email address belonging to a user in the workspace
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.lookupByEmail success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.lookupByEmail
                  method
              example:
                ok: true
                user:
                  color: 9f69e7
                  deleted: false
                  has_2fa: false
                  id: W012A3CDE
                  is_admin: true
                  is_app_user: false
                  is_bot: false
                  is_owner: false
                  is_primary_owner: false
                  is_restricted: false
                  is_ultra_restricted: false
                  name: spengler
                  profile:
                    avatar_hash: ge3b51ca72de
                    display_name: spengler
                    display_name_normalized: spengler
                    email: spengler@ghostbusters.example.com
                    image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                    real_name: Egon Spengler
                    real_name_normalized: Egon Spengler
                    status_emoji: ':books:'
                    status_text: Print is dead
                    team: T012AB3C4
                  real_name: Egon Spengler
                  team_id: T012AB3C4
                  tz: America/Los_Angeles
                  tz_label: Pacific Daylight Time
                  tz_offset: -25200
                  updated: 1502138686
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.lookupByEmail error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.lookupByEmail method
              example:
                error: users_not_found
                ok: false
      security:
      - slackAuth:
        - users:read.email
  /users.profile.get:
    get:
      tags:
      - users.profile
      - users
      description: Retrieves a user's profile information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.get
      operationId: users_profile_get
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users.profile:read`'
        schema:
          type: string
      - name: include_labels
        in: query
        description: Include labels for each ID in custom profile fields
        schema:
          type: boolean
      - name: user
        in: query
        description: User to retrieve profile info for
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.profile.get schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.get
                  method
              example:
                ok: true
                profile:
                  avatar_hash: ge3b51ca72de
                  display_name: spengler
                  display_name_normalized: spengler
                  email: spengler@ghostbusters.example.com
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  real_name: Egon Spengler
                  real_name_normalized: Egon Spengler
                  status_emoji: ':books:'
                  status_text: Print is dead
                  team: T012AB3C4
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.profile.get error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.get method
              example:
                error: user_not_found
                ok: false
      security:
      - slackAuth:
        - users.profile:read
  /users.profile.set:
    post:
      tags:
      - users.profile
      - users
      description: Set the profile information for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.set
      operationId: users_profile_set
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users.profile:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                profile:
                  type: string
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash.
                user:
                  type: string
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                value:
                  type: string
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
                name:
                  type: string
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
          application/json:
            schema:
              properties:
                profile:
                  type: string
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash.
                user:
                  type: string
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                value:
                  type: string
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
                name:
                  type: string
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.profile.set schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.set
                  method
              example:
                ok: true
                profile:
                  avatar_hash: ge3b51ca72de
                  display_name: spengler
                  display_name_normalized: spengler
                  email: spengler@ghostbusters.example.com
                  image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg
                  real_name: Egon Spengler
                  real_name_normalized: Egon Spengler
                  status_emoji: ':books:'
                  status_text: Print is dead
                  team: T012AB3C4
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.profile.set error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.set method
              example:
                error: invalid_profile
                ok: false
      security:
      - slackAuth:
        - users.profile:write
  /users.setActive:
    post:
      tags:
      - users
      description: Marked a user as active. Deprecated and non-functional.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setActive
      operationId: users_setActive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users:write`'
        schema:
          type: string
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users:write
  /users.setPhoto:
    post:
      tags:
      - users
      description: Set the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPhoto
      operationId: users_setPhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                image:
                  type: string
                  description: File contents via `multipart/form-data`.
                crop_w:
                  type: integer
                  description: Width/height of crop box (always square)
                  format: int32
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                crop_y:
                  type: integer
                  description: Y coordinate of top-left corner of crop box
                  format: int32
                crop_x:
                  type: integer
                  description: X coordinate of top-left corner of crop box
                  format: int32
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users.profile:write
  /users.setPresence:
    post:
      tags:
      - users
      description: Manually sets user presence.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPresence
      operationId: users_setPresence
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users:write`'
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                presence:
                  type: string
                  description: Either `auto` or `away`
          application/json:
            schema:
              properties:
                presence:
                  type: string
                  description: Either `auto` or `away`
      responses:
        200:
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                ok: true
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: Verbose schema not yet ready for this method.
              example:
                error: invalid_auth
                ok: false
      security:
      - slackAuth:
        - users:write
components:
  schemas:
    defs_app_id:
      title: App ID
      pattern: ^A[A-Z0-9]{8}$
      type: string
    defs_bot_id:
      title: Bot User ID
      pattern: ^B[A-Z0-9]{8}$
      type: string
    defs_channel:
      title: Channel-like conversation ID
      pattern: ^[CGD][A-Z0-9]{8}$
      type: string
    defs_channel_id:
      title: Channel ID
      pattern: ^[C][A-Z0-9]{8}$
      type: string
    defs_channel_name:
      title: Name of a channel
      type: string
    defs_comment_id:
      title: File Comment ID
      pattern: ^Fc[A-Z0-9]{8}$
      type: string
    defs_dm_id:
      title: Direct Message Channel ID
      pattern: ^[D][A-Z0-9]{8}$
      type: string
    defs_file_id:
      title: File ID
      pattern: ^[F][A-Z0-9]{8}$
      type: string
    defs_group_id:
      title: Private Channel ID
      pattern: ^[G][A-Z0-9]{8}$
      type: string
    defs_ok_false:
      title: default failure response
      type: boolean
      enum:
      - false
    defs_ok_true:
      title: default success response
      type: boolean
      enum:
      - true
    defs_pinned_info:
      title: Info for a pinned item
      type: object
      additionalProperties:
        required:
        - pinned_by
        - pinned_ts
        type: object
        properties:
          pinned_by:
            $ref: '#/components/schemas/defs_user_id'
          pinned_ts:
            type: integer
    defs_team:
      title: Team ID
      pattern: ^[T][A-Z0-9]{8}$
      type: string
    defs_topic_purpose_creator:
      title: User ID or empty string, used for topic and purpose creation
      pattern: ^[UW][A-Z0-9]{8}$|^$
      type: string
    defs_ts:
      title: Timestamp in format 0123456789.012345
      pattern: ^\d{10}\.\d{6}$
      type: string
    defs_user_id:
      title: User ID
      pattern: ^[UW][A-Z0-9]{8}$
      type: string
    objs_channel:
      title: Channel Object
      required:
      - created
      - creator
      - id
      - is_channel
      - is_mpim
      - is_org_shared
      - is_private
      - is_shared
      - members
      - name
      - name_normalized
      - purpose
      - topic
      type: object
      properties:
        accepted_user:
          $ref: '#/components/schemas/defs_user_id'
        created:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_channel_id'
        is_archived:
          type: boolean
        is_channel:
          type: boolean
        is_general:
          type: boolean
        is_member:
          type: boolean
        is_moved:
          type: integer
        is_mpim:
          type: boolean
        is_org_shared:
          type: boolean
        is_pending_ext_shared:
          type: boolean
        is_private:
          type: boolean
        is_read_only:
          type: boolean
        is_shared:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest:
          type: object
        members:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_user_id'
        name:
          type: string
        name_normalized:
          type: string
        num_members:
          type: integer
        pending_shared:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_team'
        previous_names:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_channel_name'
        priority:
          type: integer
        purpose:
          required:
          - creator
          - last_set
          - value
          type: object
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
        topic:
          required:
          - creator
          - last_set
          - value
          type: object
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
        unread_count:
          type: integer
        unread_count_display:
          type: integer
    objs_comment:
      title: File Comment Object
      type: object
      properties:
        comment:
          type: string
        created:
          type: integer
        id:
          $ref: '#/components/schemas/defs_comment_id'
        is_intro:
          type: boolean
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          type: array
          items:
            $ref: '#/components/schemas/defs_channel'
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/objs_reaction'
        timestamp:
          type: integer
        user:
          type: string
    objs_comments:
      title: file comments object
      type: array
      items:
        type: object
        properties: {}
    objs_conversation:
      type: object
    objs_file:
      title: file object
      type: object
      properties:
        channels:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_channel_id'
        comments_count:
          type: integer
        created:
          type: integer
        display_as_bot:
          type: boolean
        editable:
          type: boolean
        external_type:
          type: string
        filetype:
          type: string
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_group_id'
        id:
          $ref: '#/components/schemas/defs_file_id'
        image_exif_rotation:
          type: integer
        ims:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_dm_id'
        is_external:
          type: boolean
        is_public:
          type: boolean
        mimetype:
          type: string
        mode:
          type: string
        name:
          type: string
        original_h:
          type: integer
        original_w:
          type: integer
        permalink:
          type: string
          format: uri
        permalink_public:
          type: string
          format: uri
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          type: array
          items:
            $ref: '#/components/schemas/defs_channel'
        pretty_type:
          type: string
        public_url_shared:
          type: boolean
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/objs_reaction'
        size:
          type: integer
        thumb_1024:
          type: string
          format: uri
        thumb_1024_h:
          type: integer
        thumb_1024_w:
          type: integer
        thumb_160:
          type: string
          format: uri
        thumb_360:
          type: string
          format: uri
        thumb_360_h:
          type: integer
        thumb_360_w:
          type: integer
        thumb_480:
          type: string
          format: uri
        thumb_480_h:
          type: integer
        thumb_480_w:
          type: integer
        thumb_64:
          type: string
          format: uri
        thumb_720:
          type: string
          format: uri
        thumb_720_h:
          type: integer
        thumb_720_w:
          type: integer
        thumb_80:
          type: string
          format: uri
        thumb_800:
          type: string
          format: uri
        thumb_800_h:
          type: integer
        thumb_800_w:
          type: integer
        thumb_960:
          type: string
          format: uri
        thumb_960_h:
          type: integer
        thumb_960_w:
          type: integer
        timestamp:
          type: integer
        title:
          type: string
        url_private:
          type: string
          format: uri
        url_private_download:
          type: string
          format: uri
        user:
          type: string
        username:
          type: string
    objs_group:
      title: Group object
      required:
      - created
      - creator
      - id
      - is_group
      - members
      - name
      - name_normalized
      - purpose
      - topic
      type: object
      properties:
        created:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_group_id'
        is_archived:
          type: boolean
        is_group:
          type: boolean
        is_moved:
          type: integer
        is_mpim:
          type: boolean
        is_open:
          type: boolean
        is_pending_ext_shared:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest:
          type: object
        members:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/defs_user_id'
        name:
          type: string
        name_normalized:
          type: string
        priority:
          type: integer
        purpose:
          required:
          - creator
          - last_set
          - value
          type: object
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
        topic:
          required:
          - creator
          - last_set
          - value
          type: object
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
        unread_count:
          type: integer
        unread_count_display:
          type: integer
    objs_im:
      title: IM Object
      required:
      - created
      - id
      - is_im
      - is_org_shared
      - is_user_deleted
      - user
      type: object
      properties:
        created:
          type: integer
        id:
          $ref: '#/components/schemas/defs_dm_id'
        is_im:
          type: boolean
        is_org_shared:
          type: boolean
        is_user_deleted:
          type: boolean
        priority:
          type: integer
        user:
          $ref: '#/components/schemas/defs_user_id'
    objs_message:
      title: Message object
      required:
      - text
      - ts
      - type
      type: object
      properties:
        attachments:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            required:
            - id
            type: object
            properties:
              fallback:
                type: string
              id:
                type: integer
              image_bytes:
                type: integer
              image_height:
                type: integer
              image_url:
                type: string
              image_width:
                type: integer
        bot_id:
          type: object
        comment:
          $ref: '#/components/schemas/objs_comment'
        display_as_bot:
          type: boolean
        file:
          $ref: '#/components/schemas/objs_file'
        icons:
          type: object
          properties:
            emoji:
              type: string
        inviter:
          $ref: '#/components/schemas/defs_user_id'
        is_intro:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        name:
          type: string
        old_name:
          type: string
        permalink:
          type: string
          format: uri
        pinned_to:
          type: array
          items:
            $ref: '#/components/schemas/defs_channel'
        purpose:
          type: string
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/objs_reaction'
        replies:
          type: array
          items:
            required:
            - ts
            - user
            type: object
            properties:
              ts:
                $ref: '#/components/schemas/defs_ts'
              user:
                $ref: '#/components/schemas/defs_user_id'
        reply_count:
          type: integer
        source_team:
          $ref: '#/components/schemas/defs_team'
        subscribed:
          type: boolean
        subtype:
          type: string
        team:
          $ref: '#/components/schemas/defs_team'
        text:
          type: string
        thread_ts:
          $ref: '#/components/schemas/defs_ts'
        topic:
          type: string
        ts:
          $ref: '#/components/schemas/defs_ts'
        type:
          type: string
        unread_count:
          type: integer
        upload:
          type: boolean
        user:
          $ref: '#/components/schemas/defs_user_id'
        user_profile:
          $ref: '#/components/schemas/objs_user_profile_short'
        user_team:
          $ref: '#/components/schemas/defs_team'
        username:
          type: string
    objs_paging:
      title: paging object for files
      required:
      - count
      - page
      - total
      type: object
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        total:
          type: integer
    objs_reaction:
      title: Reaction object
      required:
      - count
      - name
      - users
      type: object
      properties:
        count:
          type: integer
        name:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/defs_user_id'
    objs_scopes:
      type: array
      items:
        title: Named OAuth scopes
        type: string
    objs_team:
      title: Team Object
      required:
      - domain
      - email_domain
      - icon
      - id
      - name
      type: object
      properties:
        avatar_base_url:
          type: string
          format: uri
        domain:
          type: string
        email_domain:
          type: string
        enterprise_id:
          type: string
        enterprise_name:
          type: string
        has_compliance_export:
          type: boolean
        icon:
          type: object
          properties:
            image_102:
              type: string
            image_132:
              type: string
            image_230:
              type: string
            image_34:
              type: string
            image_44:
              type: string
            image_68:
              type: string
            image_88:
              type: string
            image_default:
              type: boolean
        id:
          $ref: '#/components/schemas/defs_team'
        messages_count:
          type: integer
        msg_edit_window_mins:
          type: integer
        name:
          type: string
        over_integrations_limit:
          type: boolean
        over_storage_limit:
          type: boolean
        plan:
          type: string
    objs_team_profile_field:
      required:
      - hint
      - id
      - label
      - options
      - ordering
      - type
      type: object
      properties:
        field_name:
          type: string
        hint:
          type: string
        id:
          pattern: ^X[a-zA-Z0-9]{9}$
          type: string
        is_hidden:
          type: boolean
        label:
          type: string
        options:
          type: array
          items:
            type: string
        ordering:
          type: number
        possible_values:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - text
          - date
          - link
          - mailto
          - options_list
          - user
    objs_user:
      required:
      - color
      - deleted
      - id
      - is_admin
      - is_app_user
      - is_bot
      - is_owner
      - is_primary_owner
      - is_restricted
      - is_ultra_restricted
      - name
      - profile
      - real_name
      - team_id
      - tz
      - tz_label
      - tz_offset
      - updated
      type: object
      properties:
        color:
          pattern: ^[a-fA-F0-9]{6}$
          type: string
        deleted:
          type: boolean
        has_2fa:
          type: boolean
        id:
          $ref: '#/components/schemas/defs_user_id'
        is_admin:
          type: boolean
        is_app_user:
          type: boolean
        is_bot:
          type: boolean
        is_owner:
          type: boolean
        is_primary_owner:
          type: boolean
        is_restricted:
          type: boolean
        is_ultra_restricted:
          type: boolean
        locale:
          type: string
        name:
          type: string
        presence:
          type: string
        profile:
          $ref: '#/components/schemas/objs_user_profile'
        real_name:
          type: string
        team_id:
          $ref: '#/components/schemas/defs_team'
        tz:
          type: string
        tz_label:
          type: string
        tz_offset:
          type: number
        updated:
          type: number
    objs_user_profile:
      title: User profile object
      required:
      - avatar_hash
      - display_name
      - display_name_normalized
      - image_192
      - image_24
      - image_32
      - image_48
      - image_72
      - real_name
      - real_name_normalized
      type: object
      properties:
        always_active:
          type: boolean
        avatar_hash:
          type: string
        display_name:
          type: string
        display_name_normalized:
          type: string
        email:
          type: string
          format: email
        fields:
          type: object
          properties: {}
        first_name:
          type: string
        guest_channels:
          type: string
        image_192:
          type: string
          format: uri
        image_24:
          type: string
          format: uri
        image_32:
          type: string
          format: uri
        image_48:
          type: string
          format: uri
        image_512:
          type: string
          format: uri
        image_72:
          type: string
          format: uri
        image_original:
          type: string
          format: uri
        last_name:
          type: string
        phone:
          type: string
        real_name:
          type: string
        real_name_normalized:
          type: string
        skype:
          type: string
        status_emoji:
          type: string
        status_expiration:
          type: integer
        status_text:
          type: string
        status_text_canonical:
          type: string
        team:
          $ref: '#/components/schemas/defs_team'
        title:
          type: string
    objs_user_profile_short:
      required:
      - avatar_hash
      - display_name
      - first_name
      - image_72
      - is_restricted
      - is_ultra_restricted
      - name
      - real_name
      - team
      type: object
      properties:
        avatar_hash:
          type: string
        display_name:
          type: string
        first_name:
          type: string
        image_72:
          type: string
          format: uri
        is_restricted:
          type: boolean
        is_ultra_restricted:
          type: boolean
        name:
          type: string
        real_name:
          type: string
        team:
          $ref: '#/components/schemas/defs_team'
  securitySchemes:
    slackAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://slack.com/oauth/authorize
          tokenUrl: https://slack.com/api/oauth.access
          scopes:
            admin: admin
            bot: Bot user scope
            channels:history: channels:history
            channels:read: channels:read
            channels:write: channels:write
            chat:write: chat:write
            chat:write:bot: Author messages as a bot
            chat:write:user: chat:write:user
            conversations:history: conversations:history
            conversations:read: conversations:read
            conversations:write: conversations:write
            dnd:read: dnd:read
            dnd:write: dnd:write
            emoji:read: emoji:read
            files:read: files:read
            files:write:user: files:write:user
            groups:history: groups:history
            groups:read: groups:read
            groups:write: groups:write
            identity.basic: identity.basic
            im:history: im:history
            im:read: im:read
            im:write: im:write
            links:write: links:write
            mpim:history: mpim:history
            mpim:read: mpim:read
            mpim:write: mpim:write
            none: No scope required
            pins:read: pins:read
            pins:write: pins:write
            reactions:read: reactions:read
            reactions:write: reactions:write
            reminders:read: reminders:read
            reminders:write: reminders:write
            rtm:stream: rtm:stream
            search:read: search:read
            stars:read: stars:read
            stars:write: stars:write
            team:read: team:read
            tokens.basic: tokens.basic
            usergroups:read: usergroups:read
            usergroups:write: usergroups:write
            users.profile:read: users.profile:read
            users.profile:write: users.profile:write
            users:read: users:read
            users:read.email: users:read.email
            users:write: users:write
