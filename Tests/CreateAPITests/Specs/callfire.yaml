openapi: 3.0.1
info:
  title: CallFire API Documentation
  description: CallFire
  termsOfService: https://www.callfire.com/terms
  contact:
    name: CallFire
    url: https://www.callfire.com
    email: support@callfire.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: V2
servers:
- url: https://api.callfire.com/v2
tags:
- name: calls
- name: campaigns
- name: contacts
- name: keywords
- name: me
- name: media
- name: numbers
- name: orders
- name: reports
- name: texts
- name: ticket
- name: webhooks
paths:
  /calls:
    get:
      tags:
      - calls
      summary: Find calls
      description: To search for all calls sent or received by the user. Use "id=0"
        for the campaignId parameter to query for all calls sent through the POST
        /calls API. See [call states and results](https://developers.callfire.com/results-responses-errors.html)
      operationId: findCalls
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: id
        in: query
        description: Lists the Call ids to search for. If calls ids are specified
          then other query parameters can be ignored
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: campaignId
        in: query
        description: An id of a campaign, queries for calls included to a particular
          campaign. Specify null for all campaigns and 0 for default campaign
        schema:
          type: integer
          format: int64
      - name: batchId
        in: query
        description: An id of a contact batch, queries for calls of a particular contact
          batch
        schema:
          type: integer
          format: int64
      - name: fromNumber
        in: query
        description: 'Phone number in E.164 format (11-digit) that call was from.
          Example: 12132000384'
        schema:
          type: string
      - name: toNumber
        in: query
        description: 'Phone number in E.164 format (11-digit) that call was sent to.
          Example: 12132000384'
        schema:
          type: string
      - name: label
        in: query
        description: A label for a specific call
        schema:
          type: string
      - name: states
        in: query
        description: 'Searches for all calls which correspond to statuses listed in
          a comma separated string. Available values: READY, SELECTED, CALLBACK, FINISHED,
          DISABLED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT. See [call states and
          results](https://developers.callfire.com/results-responses-errors.html)'
        schema:
          type: string
      - name: results
        in: query
        description: 'Searches for all calls with statuses listed in a comma separated
          string. Available values: SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR,
          CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED. See [call states and results](https://developers.callfire.com/results-responses-errors.html)'
        schema:
          type: string
      - name: inbound
        in: query
        description: Filters inbound calls for "true" value and outbound calls for
          "false" value
        schema:
          type: boolean
      - name: intervalBegin
        in: query
        description: 'Start of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/findCalls.sh
      x-sample-curl-response-url: /curl/calls/findCalls.json
      x-sample-java-url: /java/calls/findCalls.java
      x-sample-csharp-url: /csharp/calls/findCalls.cs
      x-sample-php-url: /php/calls/findCalls.php
      x-sample-js-url: /js/calls/findCalls.js
      x-sample-python-url: /python/calls/findCalls.py
      x-sample-go-url: /go/calls/findCalls.go
      x-sample-description-url: /description/calls/findCalls.md
    post:
      tags:
      - calls
      summary: Send calls
      description: Use the /calls API to send individual calls quickly. A verified
        Caller ID and sufficient credits are required to make a call. CallRecipient
        represents a single recipient identified by phone number or contact id in
        CallFire system. You can attach user-defined attributes to a Call action via
        CallRecipient.attributes property, attributes are available in Call action
        response
      operationId: sendCalls
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: campaignId
        in: query
        description: Specifies a campaignId to send calls quickly on a previously
          created campaign
        schema:
          type: integer
          format: int64
      - name: defaultLiveMessage
        in: query
        description: Text to be turned into a sound, this text will be played when
          the phone is answered. Parameter can be overridden for any particular CallRecipient
        schema:
          type: string
      - name: defaultMachineMessage
        in: query
        description: Text to be turned into a sound, this text will be played when
          answering machine is detected. Parameter can be overridden for any particular
          CallRecipient
        schema:
          type: string
      - name: defaultLiveMessageSoundId
        in: query
        description: Id of sound file to play if phone is answered. Parameter can
          be overridden for any particular CallRecipient
        schema:
          type: integer
          format: int64
      - name: defaultMachineMessageSoundId
        in: query
        description: An id of a sound file to play if answering machine is detected.
          Parameter can be overridden for any particular CallRecipient
        schema:
          type: integer
          format: int64
      - name: defaultVoice
        in: query
        description: The voice set by default for all text-to-speech messages defined
          in CallRecipient objects or as default *Message properties
        schema:
          type: string
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: "An array of CallRecipient objects. \nLimitations:\n1. Max number\
          \ of CallRecipient objects is 10\n"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CallRecipient'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/sendCalls.sh
      x-sample-curl-response-url: /curl/calls/sendCalls.json
      x-sample-java-url: /java/calls/sendCalls.java
      x-sample-csharp-url: /csharp/calls/sendCalls.cs
      x-sample-php-url: /php/calls/sendCalls.php
      x-sample-js-url: /js/calls/sendCalls.js
      x-sample-python-url: /python/calls/sendCalls.py
      x-sample-go-url: /go/calls/sendCalls.go
      x-sample-description-url: /description/calls/sendCalls.md
      x-codegen-request-body-name: body
  /calls/broadcasts:
    get:
      tags:
      - calls
      summary: Find call broadcasts
      description: Searches for all voice broadcasts created by user. Can query on
        label, name, and the current running status of the campaign. Returns a paged
        list of voice broadcasts
      operationId: findCallBroadcasts
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 10
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: label
        in: query
        description: A label of a voice broadcast
        schema:
          type: string
      - name: name
        in: query
        description: A name of voice broadcast
        schema:
          type: string
      - name: running
        in: query
        description: Specify whether the campaigns should be running or not
        schema:
          type: boolean
      - name: scheduled
        in: query
        description: Specify whether the campaigns should be scheduled or not
        schema:
          type: boolean
      - name: intervalBegin
        in: query
        description: 'Start of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallBroadcastPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/findCallBroadcasts.sh
      x-sample-curl-response-url: /curl/calls/findCallBroadcasts.json
      x-sample-java-url: /java/calls/findCallBroadcasts.java
      x-sample-csharp-url: /csharp/calls/findCallBroadcasts.cs
      x-sample-php-url: /php/calls/findCallBroadcasts.php
      x-sample-js-url: /js/calls/findCallBroadcasts.js
      x-sample-python-url: /python/calls/findCallBroadcasts.py
      x-sample-go-url: /go/calls/findCallBroadcasts.go
      x-sample-description-url: /description/calls/findCallBroadcasts.md
    post:
      tags:
      - calls
      summary: Create a call broadcast
      description: Creates a call broadcast campaign using the Call Broadcast API.
        Send a CallBroadcast in the message body to add details in a voice broadcast
        campaign. The campaign can be created without contacts and bare minimum configuration,
        but contacts will have to be added further on to use the campaign
      operationId: createCallBroadcast
      parameters:
      - name: start
        in: query
        description: Specify whether to immediately start this campaign (not required)
        schema:
          type: boolean
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A CallBroadcast object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallBroadcast'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/createCallBroadcast.sh
      x-sample-curl-response-url: /curl/calls/createCallBroadcast.json
      x-sample-java-url: /java/calls/createCallBroadcast.java
      x-sample-csharp-url: /csharp/calls/createCallBroadcast.cs
      x-sample-php-url: /php/calls/createCallBroadcast.php
      x-sample-js-url: /js/calls/createCallBroadcast.js
      x-sample-python-url: /python/calls/createCallBroadcast.py
      x-sample-go-url: /go/calls/createCallBroadcast.go
      x-sample-description-url: /description/calls/createCallBroadcast.md
      x-codegen-request-body-name: body
  /calls/broadcasts/{id}:
    get:
      tags:
      - calls
      summary: Find a specific call broadcast
      description: Returns a single CallBroadcast instance for a given call broadcast
        campaign id
      operationId: getCallBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a CallBroadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallBroadcast'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallBroadcast.sh
      x-sample-curl-response-url: /curl/calls/getCallBroadcast.json
      x-sample-java-url: /java/calls/getCallBroadcast.java
      x-sample-csharp-url: /csharp/calls/getCallBroadcast.cs
      x-sample-php-url: /php/calls/getCallBroadcast.php
      x-sample-js-url: /js/calls/getCallBroadcast.js
      x-sample-python-url: /python/calls/getCallBroadcast.py
      x-sample-go-url: /go/calls/getCallBroadcast.go
      x-sample-description-url: /description/calls/getCallBroadcast.md
    put:
      tags:
      - calls
      summary: Update a call broadcast
      description: This operation lets the user modify the configuration of a voice
        broadcast campaign after call broadcast campaign is created. See CallBroadcast
        for more information on what can/can't be updated on this API
      operationId: updateCallBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a voice broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A CallBroadcast object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallBroadcast'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/updateCallBroadcast.sh
      x-sample-curl-response-url: /curl/calls/updateCallBroadcast.json
      x-sample-java-url: /java/calls/updateCallBroadcast.java
      x-sample-csharp-url: /csharp/calls/updateCallBroadcast.cs
      x-sample-php-url: /php/calls/updateCallBroadcast.php
      x-sample-js-url: /js/calls/updateCallBroadcast.js
      x-sample-python-url: /python/calls/updateCallBroadcast.py
      x-sample-go-url: /go/calls/updateCallBroadcast.go
      x-sample-description-url: /description/calls/updateCallBroadcast.md
      x-codegen-request-body-name: body
  /calls/broadcasts/{id}/archive:
    post:
      tags:
      - calls
      summary: Archive voice broadcast
      description: Archives a voice broadcast (voice broadcast will be hidden in search
        results)
      operationId: archiveVoiceBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a voice broadcast to archive
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/archiveVoiceBroadcast.sh
      x-sample-curl-response-url: /curl/calls/archiveVoiceBroadcast.json
      x-sample-java-url: /java/calls/archiveVoiceBroadcast.java
      x-sample-csharp-url: /csharp/calls/archiveVoiceBroadcast.cs
      x-sample-php-url: /php/calls/archiveVoiceBroadcast.php
      x-sample-js-url: /js/calls/archiveVoiceBroadcast.js
      x-sample-python-url: /python/calls/archiveVoiceBroadcast.py
      x-sample-go-url: /go/calls/archiveVoiceBroadcast.go
      x-sample-description-url: /description/calls/archiveVoiceBroadcast.md
  /calls/broadcasts/{id}/batches:
    get:
      tags:
      - calls
      summary: Find batches in a call broadcast
      description: This endpoint will enable the user to page through all of the batches
        for a particular voice broadcast campaign
      operationId: getCallBroadcastBatches
      parameters:
      - name: id
        in: path
        description: An id of a call broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallBroadcastBatches.sh
      x-sample-curl-response-url: /curl/calls/getCallBroadcastBatches.json
      x-sample-java-url: /java/calls/getCallBroadcastBatches.java
      x-sample-csharp-url: /csharp/calls/getCallBroadcastBatches.cs
      x-sample-php-url: /php/calls/getCallBroadcastBatches.php
      x-sample-js-url: /js/calls/getCallBroadcastBatches.js
      x-sample-python-url: /python/calls/getCallBroadcastBatches.py
      x-sample-go-url: /go/calls/getCallBroadcastBatches.go
      x-sample-description-url: /description/calls/getCallBroadcastBatches.md
    post:
      tags:
      - calls
      summary: Add batches to a call broadcast
      description: The 'add batch' API allows user to add additional batches to an
        already created voice broadcast campaign. The added batch will go through
        the CallFire validation process, unlike in the recipients version of this
        API. That is why you can use the scrubDuplicates flag to remove duplicates
        from your batch. Batches may be added as a contact list id, a list of contact
        ids, or a list of numbers
      operationId: addCallBroadcastBatch
      parameters:
      - name: id
        in: path
        description: An id of a call broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/addCallBroadcastBatch.sh
      x-sample-curl-response-url: /curl/calls/addCallBroadcastBatch.json
      x-sample-java-url: /java/calls/addCallBroadcastBatch.java
      x-sample-csharp-url: /csharp/calls/addCallBroadcastBatch.cs
      x-sample-php-url: /php/calls/addCallBroadcastBatch.php
      x-sample-js-url: /js/calls/addCallBroadcastBatch.js
      x-sample-python-url: /python/calls/addCallBroadcastBatch.py
      x-sample-go-url: /go/calls/addCallBroadcastBatch.go
      x-sample-description-url: /description/calls/addCallBroadcastBatch.md
      x-codegen-request-body-name: body
  /calls/broadcasts/{id}/calls:
    get:
      tags:
      - calls
      summary: Find calls in a call broadcast
      description: This endpoint will enable the user to page through all calls for
        a particular call broadcast campaign
      operationId: getCallBroadcastCalls
      parameters:
      - name: id
        in: path
        description: An Id of a call broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: batchId
        in: query
        description: An id of a particular batch associated with broadcast
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallBroadcastCalls.sh
      x-sample-curl-response-url: /curl/calls/getCallBroadcastCalls.json
      x-sample-java-url: /java/calls/getCallBroadcastCalls.java
      x-sample-csharp-url: /csharp/calls/getCallBroadcastCalls.cs
      x-sample-php-url: /php/calls/getCallBroadcastCalls.php
      x-sample-js-url: /js/calls/getCallBroadcastCalls.js
      x-sample-python-url: /python/calls/getCallBroadcastCalls.py
      x-sample-go-url: /go/calls/getCallBroadcastCalls.go
      x-sample-description-url: /description/calls/getCallBroadcastCalls.md
  /calls/broadcasts/{id}/recipients:
    post:
      tags:
      - calls
      summary: Add recipients to a call broadcast
      description: Use this API to add the recipients to an existing voice broadcast.
        Post a list of Recipient objects to be added to the voice broadcast campaign.
        These contacts will not go through validation process, and will be acted upon
        as they are added. Recipients may be added as a list of contact ids, or list
        of numbers
      operationId: addCallBroadcastRecipients
      parameters:
      - name: id
        in: path
        description: An id of a call broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A list of CallRecipient objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Recipient'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/addCallBroadcastRecipients.sh
      x-sample-curl-response-url: /curl/calls/addCallBroadcastRecipients.json
      x-sample-java-url: /java/calls/addCallBroadcastRecipients.java
      x-sample-csharp-url: /csharp/calls/addCallBroadcastRecipients.cs
      x-sample-php-url: /php/calls/addCallBroadcastRecipients.php
      x-sample-js-url: /js/calls/addCallBroadcastRecipients.js
      x-sample-python-url: /python/calls/addCallBroadcastRecipients.py
      x-sample-go-url: /go/calls/addCallBroadcastRecipients.go
      x-sample-description-url: /description/calls/addCallBroadcastRecipients.md
      x-codegen-request-body-name: body
  /calls/broadcasts/{id}/start:
    post:
      tags:
      - calls
      summary: Start voice broadcast
      description: Start a voice broadcast
      operationId: startVoiceBroadcast
      parameters:
      - name: id
        in: path
        description: An id of voice broadcast to start
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/startVoiceBroadcast.sh
      x-sample-curl-response-url: /curl/calls/startVoiceBroadcast.json
      x-sample-java-url: /java/calls/startVoiceBroadcast.java
      x-sample-csharp-url: /csharp/calls/startVoiceBroadcast.cs
      x-sample-php-url: /php/calls/startVoiceBroadcast.php
      x-sample-js-url: /js/calls/startVoiceBroadcast.js
      x-sample-python-url: /python/calls/startVoiceBroadcast.py
      x-sample-go-url: /go/calls/startVoiceBroadcast.go
      x-sample-description-url: /description/calls/startVoiceBroadcast.md
  /calls/broadcasts/{id}/stats:
    get:
      tags:
      - calls
      summary: Get statistics on call broadcast
      description: Returns broadcast statistics like total number of sent/received
        actions, total cost, number of remaining outbound actions, error count, etc
      operationId: getCallBroadcastStats
      parameters:
      - name: id
        in: path
        description: An id of a call broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: begin
        in: query
        description: 'Start of the search time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        description: 'End of the search time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallBroadcastStats'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallBroadcastStats.sh
      x-sample-curl-response-url: /curl/calls/getCallBroadcastStats.json
      x-sample-java-url: /java/calls/getCallBroadcastStats.java
      x-sample-csharp-url: /csharp/calls/getCallBroadcastStats.cs
      x-sample-php-url: /php/calls/getCallBroadcastStats.php
      x-sample-js-url: /js/calls/getCallBroadcastStats.js
      x-sample-python-url: /python/calls/getCallBroadcastStats.py
      x-sample-go-url: /go/calls/getCallBroadcastStats.go
      x-sample-description-url: /description/calls/getCallBroadcastStats.md
  /calls/broadcasts/{id}/stop:
    post:
      tags:
      - calls
      summary: Stop voice broadcast
      description: Stop a voice broadcast
      operationId: stopVoiceBroadcast
      parameters:
      - name: id
        in: path
        description: An id of voice broadcast to stop
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/stopVoiceBroadcast.sh
      x-sample-curl-response-url: /curl/calls/stopVoiceBroadcast.json
      x-sample-java-url: /java/calls/stopVoiceBroadcast.java
      x-sample-csharp-url: /csharp/calls/stopVoiceBroadcast.cs
      x-sample-php-url: /php/calls/stopVoiceBroadcast.php
      x-sample-js-url: /js/calls/stopVoiceBroadcast.js
      x-sample-python-url: /python/calls/stopVoiceBroadcast.py
      x-sample-go-url: /go/calls/stopVoiceBroadcast.go
      x-sample-description-url: /description/calls/stopVoiceBroadcast.md
  /calls/broadcasts/{id}/toggleRecipientsStatus:
    post:
      tags:
      - calls
      summary: Disable/enable undialed recipients in broadcast
      description: This operation lets the user to disable/enable undialed recipients
        in created broadcast
      operationId: toggleCallBroadcastRecipientsStatus
      parameters:
      - name: id
        in: path
        description: An id of a voice broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: enable
        in: query
        description: Flag which indicate what to do with calls (true will enable call
          in DISABLED status and vice versa)
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of Recipient objects. By recipient we mean either phone
          number or contact id.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Recipient'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/toggleCallBroadcastRecipientsStatus.sh
      x-sample-curl-response-url: /curl/calls/toggleCallBroadcastRecipientsStatus.json
      x-sample-java-url: /java/calls/toggleCallBroadcastRecipientsStatus.java
      x-sample-csharp-url: /csharp/calls/toggleCallBroadcastRecipientsStatus.cs
      x-sample-php-url: /php/calls/toggleCallBroadcastRecipientsStatus.php
      x-sample-js-url: /js/calls/toggleCallBroadcastRecipientsStatus.js
      x-sample-python-url: /python/calls/toggleCallBroadcastRecipientsStatus.py
      x-sample-go-url: /go/calls/toggleCallBroadcastRecipientsStatus.go
      x-sample-description-url: /description/calls/toggleCallBroadcastRecipientsStatus.md
      x-codegen-request-body-name: body
  /calls/recordings/{id}:
    get:
      tags:
      - calls
      summary: Get call recording by id
      description: Returns metadata of recording of a particular call. Metadata contains
        a link to a MP3 recording
      operationId: getCallRecording
      parameters:
      - name: id
        in: path
        description: ~
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallRecording'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallRecording.sh
      x-sample-curl-response-url: /curl/calls/getCallRecording.json
      x-sample-java-url: /java/calls/getCallRecording.java
      x-sample-csharp-url: /csharp/calls/getCallRecording.cs
      x-sample-php-url: /php/calls/getCallRecording.php
      x-sample-js-url: /js/calls/getCallRecording.js
      x-sample-python-url: /python/calls/getCallRecording.py
      x-sample-go-url: /go/calls/getCallRecording.go
      x-sample-description-url: /description/calls/getCallRecording.md
  /calls/recordings/{id}.mp3:
    get:
      tags:
      - calls
      summary: Get call recording in mp3 format
      description: Returns an MP3 recording of particular call, response contains
        binary data, content type is 'audio/mpeg'
      operationId: getCallRecordingMp3
      parameters:
      - name: id
        in: path
        description: An id of a call
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputStream'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallRecordingMp3.sh
      x-sample-curl-response-url: /curl/calls/getCallRecordingMp3.json
      x-sample-java-url: /java/calls/getCallRecordingMp3.java
      x-sample-csharp-url: /csharp/calls/getCallRecordingMp3.cs
      x-sample-php-url: /php/calls/getCallRecordingMp3.php
      x-sample-js-url: /js/calls/getCallRecordingMp3.js
      x-sample-python-url: /python/calls/getCallRecordingMp3.py
      x-sample-go-url: /go/calls/getCallRecordingMp3.go
      x-sample-description-url: /description/calls/getCallRecordingMp3.md
  /calls/{id}:
    get:
      tags:
      - calls
      summary: Find a specific call
      description: Returns a single Call instance for a given call id.
      operationId: getCall
      parameters:
      - name: id
        in: path
        description: An id of a call
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCall.sh
      x-sample-curl-response-url: /curl/calls/getCall.json
      x-sample-java-url: /java/calls/getCall.java
      x-sample-csharp-url: /csharp/calls/getCall.cs
      x-sample-php-url: /php/calls/getCall.php
      x-sample-js-url: /js/calls/getCall.js
      x-sample-python-url: /python/calls/getCall.py
      x-sample-go-url: /go/calls/getCall.go
      x-sample-description-url: /description/calls/getCall.md
  /calls/{id}/recordings:
    get:
      tags:
      - calls
      summary: Get call recordings for a call
      description: Returns a list of recordings metadata of particular call. Metadata
        contains link to a MP3 recording
      operationId: getCallRecordings
      parameters:
      - name: id
        in: path
        description: An id of a call
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallRecordingList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallRecordings.sh
      x-sample-curl-response-url: /curl/calls/getCallRecordings.json
      x-sample-java-url: /java/calls/getCallRecordings.java
      x-sample-csharp-url: /csharp/calls/getCallRecordings.cs
      x-sample-php-url: /php/calls/getCallRecordings.php
      x-sample-js-url: /js/calls/getCallRecordings.js
      x-sample-python-url: /python/calls/getCallRecordings.py
      x-sample-go-url: /go/calls/getCallRecordings.go
      x-sample-description-url: /description/calls/getCallRecordings.md
  /calls/{id}/recordings/{name}:
    get:
      tags:
      - calls
      summary: Get call recording by name
      description: Returns recording metadata of particular call. Metadata contains
        link to a MP3 recording
      operationId: getCallRecordingByName
      parameters:
      - name: id
        in: path
        description: An id of a call
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: path
        description: A name of a recording
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallRecording'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallRecordingByName.sh
      x-sample-curl-response-url: /curl/calls/getCallRecordingByName.json
      x-sample-java-url: /java/calls/getCallRecordingByName.java
      x-sample-csharp-url: /csharp/calls/getCallRecordingByName.cs
      x-sample-php-url: /php/calls/getCallRecordingByName.php
      x-sample-js-url: /js/calls/getCallRecordingByName.js
      x-sample-python-url: /python/calls/getCallRecordingByName.py
      x-sample-go-url: /go/calls/getCallRecordingByName.go
      x-sample-description-url: /description/calls/getCallRecordingByName.md
  /calls/{id}/recordings/{name}.mp3:
    get:
      tags:
      - calls
      summary: Get call mp3 recording by name
      description: Returns a MP3 recording of a particular call, response contains
        binary data, content type is 'audio/mpeg'
      operationId: getCallRecordingMp3ByName
      parameters:
      - name: id
        in: path
        description: An id of a call
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: path
        description: A name of a recording
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/InputStream'
        400:
          description: Bad request
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/calls/getCallRecordingMp3ByName.sh
      x-sample-curl-response-url: /curl/calls/getCallRecordingMp3ByName.json
      x-sample-java-url: /java/calls/getCallRecordingMp3ByName.java
      x-sample-csharp-url: /csharp/calls/getCallRecordingMp3ByName.cs
      x-sample-php-url: /php/calls/getCallRecordingMp3ByName.php
      x-sample-js-url: /js/calls/getCallRecordingMp3ByName.js
      x-sample-python-url: /python/calls/getCallRecordingMp3ByName.py
      x-sample-go-url: /go/calls/getCallRecordingMp3ByName.go
      x-sample-description-url: /description/calls/getCallRecordingMp3ByName.md
  /campaigns/batches/{id}:
    get:
      tags:
      - campaigns
      summary: Find a specific batch
      description: Returns a single Batch instance for a given batch id. This API
        is useful for determining the state of a validating batch
      operationId: getCampaignBatch
      parameters:
      - name: id
        in: path
        description: An id of a batch
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/getCampaignBatch.sh
      x-sample-curl-response-url: /curl/campaigns/getCampaignBatch.json
      x-sample-java-url: /java/campaigns/getCampaignBatch.java
      x-sample-csharp-url: /csharp/campaigns/getCampaignBatch.cs
      x-sample-php-url: /php/campaigns/getCampaignBatch.php
      x-sample-js-url: /js/campaigns/getCampaignBatch.js
      x-sample-python-url: /python/campaigns/getCampaignBatch.py
      x-sample-go-url: /go/campaigns/getCampaignBatch.go
      x-sample-description-url: /description/campaigns/getCampaignBatch.md
    put:
      tags:
      - campaigns
      summary: Update a batch
      description: Updates a single Batch instance, currently batch can only be turned
        "on/off"
      operationId: updateCampaignBatch
      parameters:
      - name: id
        in: path
        description: An id of a batch to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A batch instance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/updateCampaignBatch.sh
      x-sample-curl-response-url: /curl/campaigns/updateCampaignBatch.json
      x-sample-java-url: /java/campaigns/updateCampaignBatch.java
      x-sample-csharp-url: /csharp/campaigns/updateCampaignBatch.cs
      x-sample-php-url: /php/campaigns/updateCampaignBatch.php
      x-sample-js-url: /js/campaigns/updateCampaignBatch.js
      x-sample-python-url: /python/campaigns/updateCampaignBatch.py
      x-sample-go-url: /go/campaigns/updateCampaignBatch.go
      x-sample-description-url: /description/campaigns/updateCampaignBatch.md
      x-codegen-request-body-name: body
  /campaigns/sounds:
    get:
      tags:
      - campaigns
      summary: Find sounds
      description: To find all campaign sounds which were created by user. Returns
        all sounds available to be used in campaigns
      operationId: findCampaignSounds
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: filter
        in: query
        description: value to filter file names again; this value is used to check
          if the filename contains the filter value.
        schema:
          type: string
      - name: includeArchived
        in: query
        description: Includes ARCHIVED sounds for "true" value
        schema:
          type: boolean
      - name: includePending
        in: query
        description: Includes UPLOAD/RECORDING sounds for "true" value
        schema:
          type: boolean
      - name: includeScrubbed
        in: query
        description: Includes SCRUBBED sounds for "true" value
        schema:
          type: boolean
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSoundPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/findCampaignSounds.sh
      x-sample-curl-response-url: /curl/campaigns/findCampaignSounds.json
      x-sample-java-url: /java/campaigns/findCampaignSounds.java
      x-sample-csharp-url: /csharp/campaigns/findCampaignSounds.cs
      x-sample-php-url: /php/campaigns/findCampaignSounds.php
      x-sample-js-url: /js/campaigns/findCampaignSounds.js
      x-sample-python-url: /python/campaigns/findCampaignSounds.py
      x-sample-go-url: /go/campaigns/findCampaignSounds.go
      x-sample-description-url: /description/campaigns/findCampaignSounds.md
  /campaigns/sounds/calls:
    post:
      tags:
      - campaigns
      summary: Add sound via call
      description: Use this API to create a sound via a phone call. Provide the required
        phone number in the CallCreateSound object inside the request, and user will
        receive a call shortly after with instructions on how to record a sound over
        the phone.
      operationId: postCallCampaignSound
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        description: Request object containing the name of a new campaign sound and
          phone number to call up
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallCreateSound'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSound'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/postCallCampaignSound.sh
      x-sample-curl-response-url: /curl/campaigns/postCallCampaignSound.json
      x-sample-java-url: /java/campaigns/postCallCampaignSound.java
      x-sample-csharp-url: /csharp/campaigns/postCallCampaignSound.cs
      x-sample-php-url: /php/campaigns/postCallCampaignSound.php
      x-sample-js-url: /js/campaigns/postCallCampaignSound.js
      x-sample-python-url: /python/campaigns/postCallCampaignSound.py
      x-sample-go-url: /go/campaigns/postCallCampaignSound.go
      x-sample-description-url: /description/campaigns/postCallCampaignSound.md
      x-codegen-request-body-name: body
  /campaigns/sounds/files:
    post:
      tags:
      - campaigns
      summary: Add sound via file
      description: Create a campaign sound file via a supplied .mp3 or .wav file
      operationId: postFileCampaignSound
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: A sound file encoded in binary form
                  format: binary
                name:
                  type: string
                  description: Optional name of a sound file, if the name is empty
                    than it will be taken from a file
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSound'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/postFileCampaignSound.sh
      x-sample-curl-response-url: /curl/campaigns/postFileCampaignSound.json
      x-sample-java-url: /java/campaigns/postFileCampaignSound.java
      x-sample-csharp-url: /csharp/campaigns/postFileCampaignSound.cs
      x-sample-php-url: /php/campaigns/postFileCampaignSound.php
      x-sample-js-url: /js/campaigns/postFileCampaignSound.js
      x-sample-python-url: /python/campaigns/postFileCampaignSound.py
      x-sample-go-url: /go/campaigns/postFileCampaignSound.go
      x-sample-description-url: /description/campaigns/postFileCampaignSound.md
  /campaigns/sounds/tts:
    post:
      tags:
      - campaigns
      summary: Add sound via text-to-speech
      description: 'Use this API to create a sound file via a supplied string of text.
        Add a text in the TextToSpeech.message field, and pick a voice in the TextToSpeech.voice
        field. Available voices are: MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1'
      operationId: postTTSCampaignSound
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        description: textToSpeech
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextToSpeech'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSound'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/postTTSCampaignSound.sh
      x-sample-curl-response-url: /curl/campaigns/postTTSCampaignSound.json
      x-sample-java-url: /java/campaigns/postTTSCampaignSound.java
      x-sample-csharp-url: /csharp/campaigns/postTTSCampaignSound.cs
      x-sample-php-url: /php/campaigns/postTTSCampaignSound.php
      x-sample-js-url: /js/campaigns/postTTSCampaignSound.js
      x-sample-python-url: /python/campaigns/postTTSCampaignSound.py
      x-sample-go-url: /go/campaigns/postTTSCampaignSound.go
      x-sample-description-url: /description/campaigns/postTTSCampaignSound.md
      x-codegen-request-body-name: body
  /campaigns/sounds/{id}:
    get:
      tags:
      - campaigns
      summary: Find a specific sound
      description: Returns a single CampaignSound instance for a given sound id in
        campaign. This is a meta data to the sounds. No audio data is returned from
        this API
      operationId: getCampaignSound
      parameters:
      - name: id
        in: path
        description: An id of a sound campaign
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSound'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/getCampaignSound.sh
      x-sample-curl-response-url: /curl/campaigns/getCampaignSound.json
      x-sample-java-url: /java/campaigns/getCampaignSound.java
      x-sample-csharp-url: /csharp/campaigns/getCampaignSound.cs
      x-sample-php-url: /php/campaigns/getCampaignSound.php
      x-sample-js-url: /js/campaigns/getCampaignSound.js
      x-sample-python-url: /python/campaigns/getCampaignSound.py
      x-sample-go-url: /go/campaigns/getCampaignSound.go
      x-sample-description-url: /description/campaigns/getCampaignSound.md
    delete:
      tags:
      - campaigns
      summary: Delete a specific sound
      description: Deletes a single campaign sound instance for a specific campaign
        sound id, this operation does not delete sound completely, it sets sound status
        to ARCHIVED which means that sound will no longer appear in 'find' operation
        results, but still accessible via 'get' operation
      operationId: deleteCampaignSound
      parameters:
      - name: id
        in: path
        description: An id of a campaign sound
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/deleteCampaignSound.sh
      x-sample-curl-response-url: /curl/campaigns/deleteCampaignSound.json
      x-sample-java-url: /java/campaigns/deleteCampaignSound.java
      x-sample-csharp-url: /csharp/campaigns/deleteCampaignSound.cs
      x-sample-php-url: /php/campaigns/deleteCampaignSound.php
      x-sample-js-url: /js/campaigns/deleteCampaignSound.js
      x-sample-python-url: /python/campaigns/deleteCampaignSound.py
      x-sample-go-url: /go/campaigns/deleteCampaignSound.go
      x-sample-description-url: /description/campaigns/deleteCampaignSound.md
  /campaigns/sounds/{id}.mp3:
    get:
      tags:
      - campaigns
      summary: Download a MP3 sound
      description: Download the MP3 version of a hosted file. This is an audio data
        endpoint. Returns binary response of the 'audio/mpeg' content type
      operationId: getCampaignSoundDataMp3
      parameters:
      - name: id
        in: path
        description: An id of a campaign sound
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/StreamingOutput'
        400:
          description: Bad request
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            audio/mpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/getCampaignSoundDataMp3.sh
      x-sample-curl-response-url: /curl/campaigns/getCampaignSoundDataMp3.json
      x-sample-java-url: /java/campaigns/getCampaignSoundDataMp3.java
      x-sample-csharp-url: /csharp/campaigns/getCampaignSoundDataMp3.cs
      x-sample-php-url: /php/campaigns/getCampaignSoundDataMp3.php
      x-sample-js-url: /js/campaigns/getCampaignSoundDataMp3.js
      x-sample-python-url: /python/campaigns/getCampaignSoundDataMp3.py
      x-sample-go-url: /go/campaigns/getCampaignSoundDataMp3.go
      x-sample-description-url: /description/campaigns/getCampaignSoundDataMp3.md
  /campaigns/sounds/{id}.wav:
    get:
      tags:
      - campaigns
      summary: Download a WAV sound
      description: Download the WAV version of the hosted file. This is an audio data
        endpoint. Returns binary response of the 'audio/mpeg' content type
      operationId: getCampaignSoundDataWav
      parameters:
      - name: id
        in: path
        description: An id of a campaign sound
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/StreamingOutput'
        400:
          description: Bad request
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/campaigns/getCampaignSoundDataWav.sh
      x-sample-curl-response-url: /curl/campaigns/getCampaignSoundDataWav.json
      x-sample-java-url: /java/campaigns/getCampaignSoundDataWav.java
      x-sample-csharp-url: /csharp/campaigns/getCampaignSoundDataWav.cs
      x-sample-php-url: /php/campaigns/getCampaignSoundDataWav.php
      x-sample-js-url: /js/campaigns/getCampaignSoundDataWav.js
      x-sample-python-url: /python/campaigns/getCampaignSoundDataWav.py
      x-sample-go-url: /go/campaigns/getCampaignSoundDataWav.go
      x-sample-description-url: /description/campaigns/getCampaignSoundDataWav.md
  /contacts:
    get:
      tags:
      - contacts
      summary: Find contacts
      description: Find user's contacts by id, contact list, or on any property name.
        Returns a paged list of contacts
      operationId: findContacts
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: id
        in: query
        description: A list of contact IDs. If the id parameter is included, the other
          query parameters are ignored.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: number
        in: query
        description: Multiple contact numbers can be specified. If the number parameter
          is included, the other query parameters are ignored.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: contactListId
        in: query
        description: Filters contacts by a particular contact list
        schema:
          type: integer
          format: int64
      - name: propertyName
        in: query
        description: Name of a contact property to search by
        schema:
          type: string
      - name: propertyValue
        in: query
        description: Value of a contact property to search by
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/findContacts.sh
      x-sample-curl-response-url: /curl/contacts/findContacts.json
      x-sample-java-url: /java/contacts/findContacts.java
      x-sample-csharp-url: /csharp/contacts/findContacts.cs
      x-sample-php-url: /php/contacts/findContacts.php
      x-sample-js-url: /js/contacts/findContacts.js
      x-sample-python-url: /python/contacts/findContacts.py
      x-sample-go-url: /go/contacts/findContacts.go
      x-sample-description-url: /description/contacts/findContacts.md
    post:
      tags:
      - contacts
      summary: Create contacts
      description: 'Creates contacts in CallFire system. Only values from the next
        list can be used as external system parameter in contact creation: **NATION_BUILDER,
        SALES_FORCE_CONTACTS, SALES_FORCE_LEADS, SALES_FORCE_REPORTS, ZOHO, NETSUITE,
        MAIL_CHIMP**. See [contacts validation rules](https://www.callfire.com/help/docs/getting-started/managing-contacts/validating-contacts#section1)'
      operationId: createContacts
      requestBody:
        description: A list of a contact objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceIdList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/createContacts.sh
      x-sample-curl-response-url: /curl/contacts/createContacts.json
      x-sample-java-url: /java/contacts/createContacts.java
      x-sample-csharp-url: /csharp/contacts/createContacts.cs
      x-sample-php-url: /php/contacts/createContacts.php
      x-sample-js-url: /js/contacts/createContacts.js
      x-sample-python-url: /python/contacts/createContacts.py
      x-sample-go-url: /go/contacts/createContacts.go
      x-sample-description-url: /description/contacts/createContacts.md
      x-codegen-request-body-name: body
  /contacts/dncs:
    get:
      tags:
      - contacts
      summary: Find do not contact (dnc) items
      description: Searches for all Do Not Contact (DNC) objects created by user.
        These DoNotContact entries only affect calls/texts/campaigns on this account.
        Returns a paged list of DoNotContact objects
      operationId: findDoNotContacts
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: prefix
        in: query
        description: Prefix (1-10 digits) of phone numbers
        schema:
          type: string
      - name: campaignId
        in: query
        description: A campaign id which was used to send a message to a DNC number
        schema:
          type: integer
          format: int64
      - name: source
        in: query
        description: A DNC source name to search for DNCs
        schema:
          type: string
      - name: call
        in: query
        description: Show only Do-Not-Call numbers
        schema:
          type: boolean
      - name: text
        in: query
        description: Show only Do-Not-Text numbers
        schema:
          type: boolean
      - name: inboundCall
        in: query
        description: ~
        schema:
          type: boolean
      - name: inboundText
        in: query
        description: ~
        schema:
          type: boolean
      - name: number
        in: query
        description: ~
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoNotContactPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/findDoNotContacts.sh
      x-sample-curl-response-url: /curl/contacts/findDoNotContacts.json
      x-sample-java-url: /java/contacts/findDoNotContacts.java
      x-sample-csharp-url: /csharp/contacts/findDoNotContacts.cs
      x-sample-php-url: /php/contacts/findDoNotContacts.php
      x-sample-js-url: /js/contacts/findDoNotContacts.js
      x-sample-python-url: /python/contacts/findDoNotContacts.py
      x-sample-go-url: /go/contacts/findDoNotContacts.go
      x-sample-description-url: /description/contacts/findDoNotContacts.md
    post:
      tags:
      - contacts
      summary: Add do not contact (dnc) numbers
      description: Add or update a list of Do Not Contact (DNC) contact entries. Can
        toggle whether the DNCs are enabled for calls/texts.
      operationId: addDoNotContacts
      requestBody:
        description: AddDoNotContactsRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDoNotContactRequest'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/addDoNotContacts.sh
      x-sample-curl-response-url: /curl/contacts/addDoNotContacts.json
      x-sample-java-url: /java/contacts/addDoNotContacts.java
      x-sample-csharp-url: /csharp/contacts/addDoNotContacts.cs
      x-sample-php-url: /php/contacts/addDoNotContacts.php
      x-sample-js-url: /js/contacts/addDoNotContacts.js
      x-sample-python-url: /python/contacts/addDoNotContacts.py
      x-sample-go-url: /go/contacts/addDoNotContacts.go
      x-sample-description-url: /description/contacts/addDoNotContacts.md
      x-codegen-request-body-name: body
  /contacts/dncs/sources/{source}:
    delete:
      tags:
      - contacts
      summary: Delete do not contact (dnc) numbers contained in source.
      description: Delete Do Not Contact (DNC) contact entries contained in source.
      operationId: deleteDoNotContactsBySource
      parameters:
      - name: source
        in: path
        description: Source associated with Do Not Contact (DNC) entry.
        required: true
        schema:
          type: string
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/deleteDoNotContactsBySource.sh
      x-sample-curl-response-url: /curl/contacts/deleteDoNotContactsBySource.json
      x-sample-java-url: /java/contacts/deleteDoNotContactsBySource.java
      x-sample-csharp-url: /csharp/contacts/deleteDoNotContactsBySource.cs
      x-sample-php-url: /php/contacts/deleteDoNotContactsBySource.php
      x-sample-js-url: /js/contacts/deleteDoNotContactsBySource.js
      x-sample-python-url: /python/contacts/deleteDoNotContactsBySource.py
      x-sample-go-url: /go/contacts/deleteDoNotContactsBySource.go
      x-sample-description-url: /description/contacts/deleteDoNotContactsBySource.md
  /contacts/dncs/universals/{toNumber}:
    get:
      tags:
      - contacts
      summary: Find universal do not contacts (udnc) associated with toNumber
      description: Searches for a UniversalDoNotContact object for a given phone number.
        Shows whether inbound/outbound actions are allowed for a given number
      operationId: getUniversalDoNotContacts
      parameters:
      - name: toNumber
        in: path
        description: 'A required destination phone number in E.164 format (11-digit).
          Example: 12132000384'
        required: true
        schema:
          type: string
      - name: fromNumber
        in: query
        description: 'An optional destination/source number for DNC, specified in
          E.164 format (11-digit). Example: 12132000384'
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemListUniversalDoNotContact'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getUniversalDoNotContacts.sh
      x-sample-curl-response-url: /curl/contacts/getUniversalDoNotContacts.json
      x-sample-java-url: /java/contacts/getUniversalDoNotContacts.java
      x-sample-csharp-url: /csharp/contacts/getUniversalDoNotContacts.cs
      x-sample-php-url: /php/contacts/getUniversalDoNotContacts.php
      x-sample-js-url: /js/contacts/getUniversalDoNotContacts.js
      x-sample-python-url: /python/contacts/getUniversalDoNotContacts.py
      x-sample-go-url: /go/contacts/getUniversalDoNotContacts.go
      x-sample-description-url: /description/contacts/getUniversalDoNotContacts.md
  /contacts/dncs/{number}:
    get:
      tags:
      - contacts
      summary: Get do not contact (dnc)
      description: Get Do Not Contact (DNC) object create by user. This DoNotContact
        entry only affects calls/texts/campaigns on this account.
      operationId: getDoNotContact
      parameters:
      - name: number
        in: path
        description: Number associated with Do Not Contact (DNC) entry.
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoNotContact'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getDoNotContact.sh
      x-sample-curl-response-url: /curl/contacts/getDoNotContact.json
      x-sample-java-url: /java/contacts/getDoNotContact.java
      x-sample-csharp-url: /csharp/contacts/getDoNotContact.cs
      x-sample-php-url: /php/contacts/getDoNotContact.php
      x-sample-js-url: /js/contacts/getDoNotContact.js
      x-sample-python-url: /python/contacts/getDoNotContact.py
      x-sample-go-url: /go/contacts/getDoNotContact.go
      x-sample-description-url: /description/contacts/getDoNotContact.md
    put:
      tags:
      - contacts
      summary: Update an individual do not contact (dnc) number
      description: Update a Do Not Contact (DNC) contact entry. Can toggle whether
        the DNC is enabled for calls/texts.
      operationId: updateDoNotContact
      parameters:
      - name: number
        in: path
        description: ~
        required: true
        schema:
          type: string
      requestBody:
        description: DoNotContact object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoNotContact'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/updateDoNotContact.sh
      x-sample-curl-response-url: /curl/contacts/updateDoNotContact.json
      x-sample-java-url: /java/contacts/updateDoNotContact.java
      x-sample-csharp-url: /csharp/contacts/updateDoNotContact.cs
      x-sample-php-url: /php/contacts/updateDoNotContact.php
      x-sample-js-url: /js/contacts/updateDoNotContact.js
      x-sample-python-url: /python/contacts/updateDoNotContact.py
      x-sample-go-url: /go/contacts/updateDoNotContact.go
      x-sample-description-url: /description/contacts/updateDoNotContact.md
      x-codegen-request-body-name: body
    delete:
      tags:
      - contacts
      summary: Delete do not contact (dnc) number. If number contains commas treat
        as list of numbers
      description: Delete a Do Not Contact (DNC) contact entry.
      operationId: deleteDoNotContact
      parameters:
      - name: number
        in: path
        description: Number associated with Do Not Contact (DNC) entry.
        required: true
        schema:
          type: string
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/deleteDoNotContact.sh
      x-sample-curl-response-url: /curl/contacts/deleteDoNotContact.json
      x-sample-java-url: /java/contacts/deleteDoNotContact.java
      x-sample-csharp-url: /csharp/contacts/deleteDoNotContact.cs
      x-sample-php-url: /php/contacts/deleteDoNotContact.php
      x-sample-js-url: /js/contacts/deleteDoNotContact.js
      x-sample-python-url: /python/contacts/deleteDoNotContact.py
      x-sample-go-url: /go/contacts/deleteDoNotContact.go
      x-sample-description-url: /description/contacts/deleteDoNotContact.md
  /contacts/lists:
    get:
      tags:
      - contacts
      summary: Find contact lists
      description: Searches for all contact lists which are available for the current
        user. Returns a paged list of contact lists
      operationId: findContactLists
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: name
        in: query
        description: A name or a partial name of a contact list
        schema:
          type: string
      - name: exactMatch
        in: query
        description: ~
        schema:
          type: boolean
      - name: contactCount
        in: query
        description: ~
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: ~
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/findContactLists.sh
      x-sample-curl-response-url: /curl/contacts/findContactLists.json
      x-sample-java-url: /java/contacts/findContactLists.java
      x-sample-csharp-url: /csharp/contacts/findContactLists.cs
      x-sample-php-url: /php/contacts/findContactLists.php
      x-sample-js-url: /js/contacts/findContactLists.js
      x-sample-python-url: /python/contacts/findContactLists.py
      x-sample-go-url: /go/contacts/findContactLists.go
      x-sample-description-url: /description/contacts/findContactLists.md
    post:
      tags:
      - contacts
      summary: Create contact lists
      description: Creates a contact list for use with campaigns using 1 of 3 inputs.
        A List of Contact objects, a list of String E.164 numbers, or a list of CallFire
        contactIds can be used as the data source for the created contact list. After
        contact list is added into the CallFire system, contact lists goes through
        seven system safeguards that check the accuracy and consistency of the data.
        For example, our system checks that contact number is formatted correctly,
        is valid, is not duplicated in another contact list, or is not added on a
        specific DNC list. You can configure to keep/merge or remove contacts which
        do not complies these rules. If contacts were not added to a contact list
        after the validation, this means the data needs to be properly formatted and
        corrected before calling this API
      operationId: createContactList
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        description: A request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactListRequest'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/createContactList.sh
      x-sample-curl-response-url: /curl/contacts/createContactList.json
      x-sample-java-url: /java/contacts/createContactList.java
      x-sample-csharp-url: /csharp/contacts/createContactList.cs
      x-sample-php-url: /php/contacts/createContactList.php
      x-sample-js-url: /js/contacts/createContactList.js
      x-sample-python-url: /python/contacts/createContactList.py
      x-sample-go-url: /go/contacts/createContactList.go
      x-sample-description-url: /description/contacts/createContactList.md
      x-codegen-request-body-name: body
  /contacts/lists/upload:
    post:
      tags:
      - contacts
      summary: Create contact list from file
      description: Creates a contact list to be used with campaigns through uploading
        a .csv file. Returns the id of created list
      operationId: createContactListFromFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: CSV file to be uploaded
                  format: binary
                name:
                  type: string
                  description: A name of a contact list
                useCustomFields:
                  type: boolean
                  description: A flag to indicate how to define property names for
                    contacts. If true, uses the field and property names exactly as
                    defined. If false will assign custom properties and fields to
                    A, B, C, etc
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/createContactListFromFile.sh
      x-sample-curl-response-url: /curl/contacts/createContactListFromFile.json
      x-sample-java-url: /java/contacts/createContactListFromFile.java
      x-sample-csharp-url: /csharp/contacts/createContactListFromFile.cs
      x-sample-php-url: /php/contacts/createContactListFromFile.php
      x-sample-js-url: /js/contacts/createContactListFromFile.js
      x-sample-python-url: /python/contacts/createContactListFromFile.py
      x-sample-go-url: /go/contacts/createContactListFromFile.go
      x-sample-description-url: /description/contacts/createContactListFromFile.md
  /contacts/lists/{id}:
    get:
      tags:
      - contacts
      summary: Find a specific contact list
      description: Returns a single ContactList instance for a given contact list
        id
      operationId: getContactList
      parameters:
      - name: id
        in: path
        description: An id of a contact list to return
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getContactList.sh
      x-sample-curl-response-url: /curl/contacts/getContactList.json
      x-sample-java-url: /java/contacts/getContactList.java
      x-sample-csharp-url: /csharp/contacts/getContactList.cs
      x-sample-php-url: /php/contacts/getContactList.php
      x-sample-js-url: /js/contacts/getContactList.js
      x-sample-python-url: /python/contacts/getContactList.py
      x-sample-go-url: /go/contacts/getContactList.go
      x-sample-description-url: /description/contacts/getContactList.md
    put:
      tags:
      - contacts
      summary: Update a contact list
      description: Updates contact list instance.
      operationId: updateContactList
      parameters:
      - name: id
        in: path
        description: An id of contact list to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactListRequest'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/updateContactList.sh
      x-sample-curl-response-url: /curl/contacts/updateContactList.json
      x-sample-java-url: /java/contacts/updateContactList.java
      x-sample-csharp-url: /csharp/contacts/updateContactList.cs
      x-sample-php-url: /php/contacts/updateContactList.php
      x-sample-js-url: /js/contacts/updateContactList.js
      x-sample-python-url: /python/contacts/updateContactList.py
      x-sample-go-url: /go/contacts/updateContactList.go
      x-sample-description-url: /description/contacts/updateContactList.md
      x-codegen-request-body-name: body
    delete:
      tags:
      - contacts
      summary: Delete a contact list
      description: Deletes a contact list, included contacts will not be deleted.
      operationId: deleteContactList
      parameters:
      - name: id
        in: path
        description: An id of the contact list to be deleted
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/deleteContactList.sh
      x-sample-curl-response-url: /curl/contacts/deleteContactList.json
      x-sample-java-url: /java/contacts/deleteContactList.java
      x-sample-csharp-url: /csharp/contacts/deleteContactList.cs
      x-sample-php-url: /php/contacts/deleteContactList.php
      x-sample-js-url: /js/contacts/deleteContactList.js
      x-sample-python-url: /python/contacts/deleteContactList.py
      x-sample-go-url: /go/contacts/deleteContactList.go
      x-sample-description-url: /description/contacts/deleteContactList.md
  /contacts/lists/{id}/items:
    get:
      tags:
      - contacts
      summary: Find contacts in a contact list
      description: Searches for all entries in a contact list with specified id. Returns
        a paged list of contact entries
      operationId: getContactListItems
      parameters:
      - name: id
        in: path
        description: An id of a contact list
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getContactListItems.sh
      x-sample-curl-response-url: /curl/contacts/getContactListItems.json
      x-sample-java-url: /java/contacts/getContactListItems.java
      x-sample-csharp-url: /csharp/contacts/getContactListItems.cs
      x-sample-php-url: /php/contacts/getContactListItems.php
      x-sample-js-url: /js/contacts/getContactListItems.js
      x-sample-python-url: /python/contacts/getContactListItems.py
      x-sample-go-url: /go/contacts/getContactListItems.go
      x-sample-description-url: /description/contacts/getContactListItems.md
    post:
      tags:
      - contacts
      summary: Add contacts to a contact list
      description: 'Adds contacts to a contact list. Available contact sources are:
        list of the contact entities, list of ids of existing contacts in user''s
        account, list of phone numbers in E.164 format (11-digits)'
      operationId: addContactListItems
      parameters:
      - name: id
        in: path
        description: An id of a contact list
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactListContactsRequest'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/addContactListItems.sh
      x-sample-curl-response-url: /curl/contacts/addContactListItems.json
      x-sample-java-url: /java/contacts/addContactListItems.java
      x-sample-csharp-url: /csharp/contacts/addContactListItems.cs
      x-sample-php-url: /php/contacts/addContactListItems.php
      x-sample-js-url: /js/contacts/addContactListItems.js
      x-sample-python-url: /python/contacts/addContactListItems.py
      x-sample-go-url: /go/contacts/addContactListItems.go
      x-sample-description-url: /description/contacts/addContactListItems.md
      x-codegen-request-body-name: body
    delete:
      tags:
      - contacts
      summary: Delete contacts from a contact list
      description: Deletes contacts from a contact list. List the contact ids in request
        to delete multiple contacts with one request.
      operationId: removeContactListItems
      parameters:
      - name: id
        in: path
        description: A id of a contact list
        required: true
        schema:
          type: integer
          format: int64
      - name: contactId
        in: query
        description: An id of a contact entity in the CallFire system
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/removeContactListItems.sh
      x-sample-curl-response-url: /curl/contacts/removeContactListItems.json
      x-sample-java-url: /java/contacts/removeContactListItems.java
      x-sample-csharp-url: /csharp/contacts/removeContactListItems.cs
      x-sample-php-url: /php/contacts/removeContactListItems.php
      x-sample-js-url: /js/contacts/removeContactListItems.js
      x-sample-python-url: /python/contacts/removeContactListItems.py
      x-sample-go-url: /go/contacts/removeContactListItems.go
      x-sample-description-url: /description/contacts/removeContactListItems.md
  /contacts/lists/{id}/items/{contactId}:
    delete:
      tags:
      - contacts
      summary: Delete a contact from a contact list
      description: Deletes a single contact from a contact list
      operationId: removeContactListItem
      parameters:
      - name: id
        in: path
        description: An id of a contact list
        required: true
        schema:
          type: integer
          format: int64
      - name: contactId
        in: path
        description: An id of a contact
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/removeContactListItem.sh
      x-sample-curl-response-url: /curl/contacts/removeContactListItem.json
      x-sample-java-url: /java/contacts/removeContactListItem.java
      x-sample-csharp-url: /csharp/contacts/removeContactListItem.cs
      x-sample-php-url: /php/contacts/removeContactListItem.php
      x-sample-js-url: /js/contacts/removeContactListItem.js
      x-sample-python-url: /python/contacts/removeContactListItem.py
      x-sample-go-url: /go/contacts/removeContactListItem.go
      x-sample-description-url: /description/contacts/removeContactListItem.md
  /contacts/{id}:
    get:
      tags:
      - contacts
      summary: Find a specific contact
      description: Returns a Contact instance for a given contact id. Deleted contacts
        can be still retrieved but will be marked as deleted. Deleted contacts will
        not be shown in search request.
      operationId: getContact
      parameters:
      - name: id
        in: path
        description: An id of a contact
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getContact.sh
      x-sample-curl-response-url: /curl/contacts/getContact.json
      x-sample-java-url: /java/contacts/getContact.java
      x-sample-csharp-url: /csharp/contacts/getContact.cs
      x-sample-php-url: /php/contacts/getContact.php
      x-sample-js-url: /js/contacts/getContact.js
      x-sample-python-url: /python/contacts/getContact.py
      x-sample-go-url: /go/contacts/getContact.go
      x-sample-description-url: /description/contacts/getContact.md
    put:
      tags:
      - contacts
      summary: Update a contact
      description: Updates a single contact instance with id specified. See [contact
        validation rules](https://www.callfire.com/help/docs/getting-started/managing-contacts/validating-contacts#section1)
      operationId: updateContact
      parameters:
      - name: id
        in: path
        description: An id of a contact
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A contact object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/updateContact.sh
      x-sample-curl-response-url: /curl/contacts/updateContact.json
      x-sample-java-url: /java/contacts/updateContact.java
      x-sample-csharp-url: /csharp/contacts/updateContact.cs
      x-sample-php-url: /php/contacts/updateContact.php
      x-sample-js-url: /js/contacts/updateContact.js
      x-sample-python-url: /python/contacts/updateContact.py
      x-sample-go-url: /go/contacts/updateContact.go
      x-sample-description-url: /description/contacts/updateContact.md
      x-codegen-request-body-name: body
    delete:
      tags:
      - contacts
      summary: Delete a contact
      description: Deletes a contact instance from account
      operationId: deleteContact
      parameters:
      - name: id
        in: path
        description: An Id of a contact
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/deleteContact.sh
      x-sample-curl-response-url: /curl/contacts/deleteContact.json
      x-sample-java-url: /java/contacts/deleteContact.java
      x-sample-csharp-url: /csharp/contacts/deleteContact.cs
      x-sample-php-url: /php/contacts/deleteContact.php
      x-sample-js-url: /js/contacts/deleteContact.js
      x-sample-python-url: /python/contacts/deleteContact.py
      x-sample-go-url: /go/contacts/deleteContact.go
      x-sample-description-url: /description/contacts/deleteContact.md
  /contacts/{id}/history:
    get:
      tags:
      - contacts
      summary: Find a contact's history
      description: Searches for all texts and calls attributed to a contact. Returns
        a list of calls and texts a contact has been involved with
      operationId: getContactHistory
      parameters:
      - name: id
        in: path
        description: An Id of a contact
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactHistory'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/contacts/getContactHistory.sh
      x-sample-curl-response-url: /curl/contacts/getContactHistory.json
      x-sample-java-url: /java/contacts/getContactHistory.java
      x-sample-csharp-url: /csharp/contacts/getContactHistory.cs
      x-sample-php-url: /php/contacts/getContactHistory.php
      x-sample-js-url: /js/contacts/getContactHistory.js
      x-sample-python-url: /python/contacts/getContactHistory.py
      x-sample-go-url: /go/contacts/getContactHistory.go
      x-sample-description-url: /description/contacts/getContactHistory.md
  /keywords:
    get:
      tags:
      - keywords
      summary: Find keywords
      description: Searches for all keywords available for purchase on the CallFire
        platform. If a keyword appears in the response, it is available for purchase.
        List the 'keywords' in a query parameter to search for multiple keywords (at
        least one keyword should be sent in request). Keyword should only consist
        of uppercase and lowercase letters and numbers. Number of characters must
        be greater than 2, but less than 65.
      operationId: findKeywords
      parameters:
      - name: keywords
        in: query
        description: A keyword to search for
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/findKeywords.sh
      x-sample-curl-response-url: /curl/keywords/findKeywords.json
      x-sample-java-url: /java/keywords/findKeywords.java
      x-sample-csharp-url: /csharp/keywords/findKeywords.cs
      x-sample-php-url: /php/keywords/findKeywords.php
      x-sample-js-url: /js/keywords/findKeywords.js
      x-sample-python-url: /python/keywords/findKeywords.py
      x-sample-go-url: /go/keywords/findKeywords.go
      x-sample-description-url: /description/keywords/findKeywords.md
  /keywords/leases:
    get:
      tags:
      - keywords
      summary: Find keyword leases
      description: Searches for all keywords owned by user. A keyword lease is the
        ownership information involving a keyword
      operationId: findKeywordLeases
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: filter
        in: query
        description: Filter by part of Keyword name or Label name of Keyword
        schema:
          type: string
      - name: labelName
        in: query
        description: An exact label name to search by
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordLeasePage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/findKeywordLeases.sh
      x-sample-curl-response-url: /curl/keywords/findKeywordLeases.json
      x-sample-java-url: /java/keywords/findKeywordLeases.java
      x-sample-csharp-url: /csharp/keywords/findKeywordLeases.cs
      x-sample-php-url: /php/keywords/findKeywordLeases.php
      x-sample-js-url: /js/keywords/findKeywordLeases.js
      x-sample-python-url: /python/keywords/findKeywordLeases.py
      x-sample-go-url: /go/keywords/findKeywordLeases.go
      x-sample-description-url: /description/keywords/findKeywordLeases.md
  /keywords/leases/configs:
    get:
      tags:
      - keywords
      summary: Find keyword lease configs
      description: Searches for all keyword lease configs for the user. Returns a
        paged list of KeywordConfig
      operationId: findKeywordLeaseConfigs
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 20
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: filter
        in: query
        description: Filter by part of Keyword name or Label name of Keyword
        schema:
          type: string
      - name: labelName
        in: query
        description: An exact label name to search by
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/findKeywordLeaseConfigs.sh
      x-sample-curl-response-url: /curl/keywords/findKeywordLeaseConfigs.json
      x-sample-java-url: /java/keywords/findKeywordLeaseConfigs.java
      x-sample-csharp-url: /csharp/keywords/findKeywordLeaseConfigs.cs
      x-sample-php-url: /php/keywords/findKeywordLeaseConfigs.php
      x-sample-js-url: /js/keywords/findKeywordLeaseConfigs.js
      x-sample-python-url: /python/keywords/findKeywordLeaseConfigs.py
      x-sample-go-url: /go/keywords/findKeywordLeaseConfigs.go
      x-sample-description-url: /description/keywords/findKeywordLeaseConfigs.md
  /keywords/leases/configs/{keyword}:
    get:
      tags:
      - keywords
      summary: Find a specific keyword lease config
      description: Returns a single KeywordConfig instance for a given keyword lease
      operationId: getKeywordLeaseConfig
      parameters:
      - name: keyword
        in: path
        description: A Keyword to get KeywordConfig by
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordConfig'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/getKeywordLeaseConfig.sh
      x-sample-curl-response-url: /curl/keywords/getKeywordLeaseConfig.json
      x-sample-java-url: /java/keywords/getKeywordLeaseConfig.java
      x-sample-csharp-url: /csharp/keywords/getKeywordLeaseConfig.cs
      x-sample-php-url: /php/keywords/getKeywordLeaseConfig.php
      x-sample-js-url: /js/keywords/getKeywordLeaseConfig.js
      x-sample-python-url: /python/keywords/getKeywordLeaseConfig.py
      x-sample-go-url: /go/keywords/getKeywordLeaseConfig.go
      x-sample-description-url: /description/keywords/getKeywordLeaseConfig.md
    put:
      tags:
      - keywords
      summary: Update a keyword lease config
      description: Updates a keyword lease configuration. Use this API endpoint to
        enable/disable inbound SMS forwarding, set forward number. Forward number
        must be in E.164 format)
      operationId: updateKeywordLeaseConfig
      parameters:
      - name: keyword
        in: path
        description: To update a keyword lease config
        required: true
        schema:
          type: string
      requestBody:
        description: The configuration of a keyword lease object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordConfig'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/updateKeywordLeaseConfig.sh
      x-sample-curl-response-url: /curl/keywords/updateKeywordLeaseConfig.json
      x-sample-java-url: /java/keywords/updateKeywordLeaseConfig.java
      x-sample-csharp-url: /csharp/keywords/updateKeywordLeaseConfig.cs
      x-sample-php-url: /php/keywords/updateKeywordLeaseConfig.php
      x-sample-js-url: /js/keywords/updateKeywordLeaseConfig.js
      x-sample-python-url: /python/keywords/updateKeywordLeaseConfig.py
      x-sample-go-url: /go/keywords/updateKeywordLeaseConfig.go
      x-sample-description-url: /description/keywords/updateKeywordLeaseConfig.md
      x-codegen-request-body-name: body
  /keywords/leases/id/{id}:
    get:
      tags:
      - keywords
      summary: Find a keyword by id
      description: Get keyword by id
      operationId: getKeywordLeaseById
      parameters:
      - name: id
        in: path
        description: ~
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordLease'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/getKeywordLeaseById.sh
      x-sample-curl-response-url: /curl/keywords/getKeywordLeaseById.json
      x-sample-java-url: /java/keywords/getKeywordLeaseById.java
      x-sample-csharp-url: /csharp/keywords/getKeywordLeaseById.cs
      x-sample-php-url: /php/keywords/getKeywordLeaseById.php
      x-sample-js-url: /js/keywords/getKeywordLeaseById.js
      x-sample-python-url: /python/keywords/getKeywordLeaseById.py
      x-sample-go-url: /go/keywords/getKeywordLeaseById.go
      x-sample-description-url: /description/keywords/getKeywordLeaseById.md
  /keywords/leases/{keyword}:
    get:
      tags:
      - keywords
      summary: Find a specific lease
      description: Searches for all keywords owned by user
      operationId: getKeywordLease
      parameters:
      - name: keyword
        in: path
        description: Keyword text that a lease is desired for
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordLease'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/getKeywordLease.sh
      x-sample-curl-response-url: /curl/keywords/getKeywordLease.json
      x-sample-java-url: /java/keywords/getKeywordLease.java
      x-sample-csharp-url: /csharp/keywords/getKeywordLease.cs
      x-sample-php-url: /php/keywords/getKeywordLease.php
      x-sample-js-url: /js/keywords/getKeywordLease.js
      x-sample-python-url: /python/keywords/getKeywordLease.py
      x-sample-go-url: /go/keywords/getKeywordLease.go
      x-sample-description-url: /description/keywords/getKeywordLease.md
    put:
      tags:
      - keywords
      summary: Update a lease
      description: Updates a keyword lease. Turns the autoRenew on/off. Configure
        double opt in feature. Add/remove contact list from keyword.
      operationId: updateKeywordLease
      parameters:
      - name: keyword
        in: path
        description: To update a keyword lease
        required: true
        schema:
          type: string
      requestBody:
        description: A keyword lease object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordLease'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/updateKeywordLease.sh
      x-sample-curl-response-url: /curl/keywords/updateKeywordLease.json
      x-sample-java-url: /java/keywords/updateKeywordLease.java
      x-sample-csharp-url: /csharp/keywords/updateKeywordLease.cs
      x-sample-php-url: /php/keywords/updateKeywordLease.php
      x-sample-js-url: /js/keywords/updateKeywordLease.js
      x-sample-python-url: /python/keywords/updateKeywordLease.py
      x-sample-go-url: /go/keywords/updateKeywordLease.go
      x-sample-description-url: /description/keywords/updateKeywordLease.md
      x-codegen-request-body-name: body
  /keywords/{keyword}/available:
    get:
      tags:
      - keywords
      summary: Check for a specific keyword
      description: Searches for the specific keyword to purchase on the CallFire platform.
        Returns 'true' if keyword is available. Keyword should only consist of uppercase
        and lowercase letters and numbers. Number of characters must be greater than
        2, but less than 65.
      operationId: isKeywordAvailable
      parameters:
      - name: keyword
        in: path
        description: 'To specify a keyword to search for. Example: SUN, MOON'
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/keywords/isKeywordAvailable.sh
      x-sample-curl-response-url: /curl/keywords/isKeywordAvailable.json
      x-sample-java-url: /java/keywords/isKeywordAvailable.java
      x-sample-csharp-url: /csharp/keywords/isKeywordAvailable.cs
      x-sample-php-url: /php/keywords/isKeywordAvailable.php
      x-sample-js-url: /js/keywords/isKeywordAvailable.js
      x-sample-python-url: /python/keywords/isKeywordAvailable.py
      x-sample-go-url: /go/keywords/isKeywordAvailable.go
      x-sample-description-url: /description/keywords/isKeywordAvailable.md
  /me/account:
    get:
      tags:
      - me
      summary: Find account details
      description: Searches for the user account details. Details include name, email,
        and basic account permissions. For authentication use api credentials.
      operationId: getAccount
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/getAccount.sh
      x-sample-curl-response-url: /curl/me/getAccount.json
      x-sample-java-url: /java/me/getAccount.java
      x-sample-csharp-url: /csharp/me/getAccount.cs
      x-sample-php-url: /php/me/getAccount.php
      x-sample-js-url: /js/me/getAccount.js
      x-sample-python-url: /python/me/getAccount.py
      x-sample-go-url: /go/me/getAccount.go
      x-sample-description-url: /description/me/getAccount.md
  /me/api/credentials:
    get:
      tags:
      - me
      summary: Find api credentials
      description: Searches for all credentials generated by user. Returns a paged
        list of the API credentials. Only ACCOUNT_HOLDER can invoke this API. For
        authentication use account credentials.
      operationId: findApiCredentials
      parameters:
      - name: name
        in: query
        description: Filter by name
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCredentialPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/findApiCredentials.sh
      x-sample-curl-response-url: /curl/me/findApiCredentials.json
      x-sample-java-url: /java/me/findApiCredentials.java
      x-sample-csharp-url: /csharp/me/findApiCredentials.cs
      x-sample-php-url: /php/me/findApiCredentials.php
      x-sample-js-url: /js/me/findApiCredentials.js
      x-sample-python-url: /python/me/findApiCredentials.py
      x-sample-go-url: /go/me/findApiCredentials.go
      x-sample-description-url: /description/me/findApiCredentials.md
    post:
      tags:
      - me
      summary: Create api credentials
      description: Creates an API credentials for the CallFire API. This endpoint
        requires full CallFire account credentials to be used, authenticated using
        Basic Authentication. At the moment user provides only the name for the credentials.
        The generated credentials can be used to access any CallFire APIs. For authentication
        use account credentials.
      operationId: createApiCredential
      requestBody:
        description: To create the API credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCredential'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCredential'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/createApiCredential.sh
      x-sample-curl-response-url: /curl/me/createApiCredential.json
      x-sample-java-url: /java/me/createApiCredential.java
      x-sample-csharp-url: /csharp/me/createApiCredential.cs
      x-sample-php-url: /php/me/createApiCredential.php
      x-sample-js-url: /js/me/createApiCredential.js
      x-sample-python-url: /python/me/createApiCredential.py
      x-sample-go-url: /go/me/createApiCredential.go
      x-sample-description-url: /description/me/createApiCredential.md
      x-codegen-request-body-name: body
  /me/api/credentials/{id}:
    get:
      tags:
      - me
      summary: Find a specific api credential
      description: Returns an API credential instance for a given api credential id.
        Only ACCOUNT_HOLDER can invoke this API. For authentication use account credentials.
      operationId: getApiCredential
      parameters:
      - name: id
        in: path
        description: An id of an API credential
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCredential'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/getApiCredential.sh
      x-sample-curl-response-url: /curl/me/getApiCredential.json
      x-sample-java-url: /java/me/getApiCredential.java
      x-sample-csharp-url: /csharp/me/getApiCredential.cs
      x-sample-php-url: /php/me/getApiCredential.php
      x-sample-js-url: /js/me/getApiCredential.js
      x-sample-python-url: /python/me/getApiCredential.py
      x-sample-go-url: /go/me/getApiCredential.go
      x-sample-description-url: /description/me/getApiCredential.md
    delete:
      tags:
      - me
      summary: Delete api credentials
      description: Deletes a specified API credential. Currently, removes the ability
        to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication
        use account credentials.
      operationId: deleteApiCredential
      parameters:
      - name: id
        in: path
        description: An id of an API credential
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/deleteApiCredential.sh
      x-sample-curl-response-url: /curl/me/deleteApiCredential.json
      x-sample-java-url: /java/me/deleteApiCredential.java
      x-sample-csharp-url: /csharp/me/deleteApiCredential.cs
      x-sample-php-url: /php/me/deleteApiCredential.php
      x-sample-js-url: /js/me/deleteApiCredential.js
      x-sample-python-url: /python/me/deleteApiCredential.py
      x-sample-go-url: /go/me/deleteApiCredential.go
      x-sample-description-url: /description/me/deleteApiCredential.md
  /me/api/credentials/{id}/disable:
    post:
      tags:
      - me
      summary: Disable specified API credentials
      description: Disables a specified API credential. Currently, removes the ability
        to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication
        use account credentials.
      operationId: disableApiCredentials
      parameters:
      - name: id
        in: path
        description: An id of an API credential
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/disableApiCredentials.sh
      x-sample-curl-response-url: /curl/me/disableApiCredentials.json
      x-sample-java-url: /java/me/disableApiCredentials.java
      x-sample-csharp-url: /csharp/me/disableApiCredentials.cs
      x-sample-php-url: /php/me/disableApiCredentials.php
      x-sample-js-url: /js/me/disableApiCredentials.js
      x-sample-python-url: /python/me/disableApiCredentials.py
      x-sample-go-url: /go/me/disableApiCredentials.go
      x-sample-description-url: /description/me/disableApiCredentials.md
  /me/api/credentials/{id}/enable:
    post:
      tags:
      - me
      summary: Enable specified API credentials
      description: Enables a specified API credential. Currently, adds the ability
        to access the API. Only ACCOUNT_HOLDER can invoke this API. For authentication
        use account credentials.
      operationId: enableApiCredentials
      parameters:
      - name: id
        in: path
        description: An id of an API credential
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/enableApiCredentials.sh
      x-sample-curl-response-url: /curl/me/enableApiCredentials.json
      x-sample-java-url: /java/me/enableApiCredentials.java
      x-sample-csharp-url: /csharp/me/enableApiCredentials.cs
      x-sample-php-url: /php/me/enableApiCredentials.php
      x-sample-js-url: /js/me/enableApiCredentials.js
      x-sample-python-url: /python/me/enableApiCredentials.py
      x-sample-go-url: /go/me/enableApiCredentials.go
      x-sample-description-url: /description/me/enableApiCredentials.md
  /me/billing/credit-usage:
    get:
      tags:
      - me
      summary: Find credit usage
      description: Find credit usage for the user. Returns credits usage for time
        period specified or if unspecified then total for all time. For authentication
        use api credentials.
      operationId: getCreditUsage
      parameters:
      - name: intervalBegin
        in: query
        description: 'Beginning of usage period formatted in unix time milliseconds.
          Example: 1473781817000'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of usage period formatted in unix time milliseconds. Example:
          1473781817000'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditUsage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/getCreditUsage.sh
      x-sample-curl-response-url: /curl/me/getCreditUsage.json
      x-sample-java-url: /java/me/getCreditUsage.java
      x-sample-csharp-url: /csharp/me/getCreditUsage.cs
      x-sample-php-url: /php/me/getCreditUsage.php
      x-sample-js-url: /js/me/getCreditUsage.js
      x-sample-python-url: /python/me/getCreditUsage.py
      x-sample-go-url: /go/me/getCreditUsage.go
      x-sample-description-url: /description/me/getCreditUsage.md
  /me/billing/plan-usage:
    get:
      tags:
      - me
      summary: Find plan usage
      description: Searches for the data of a billing plan usage for the user. Returns
        the data of a billing plan usage for the current month. For authentication
        use api credentials.
      operationId: getBillingPlanUsage
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPlanUsage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/getBillingPlanUsage.sh
      x-sample-curl-response-url: /curl/me/getBillingPlanUsage.json
      x-sample-java-url: /java/me/getBillingPlanUsage.java
      x-sample-csharp-url: /csharp/me/getBillingPlanUsage.cs
      x-sample-php-url: /php/me/getBillingPlanUsage.php
      x-sample-js-url: /js/me/getBillingPlanUsage.js
      x-sample-python-url: /python/me/getBillingPlanUsage.py
      x-sample-go-url: /go/me/getBillingPlanUsage.go
      x-sample-description-url: /description/me/getBillingPlanUsage.md
  /me/callerids:
    get:
      tags:
      - me
      summary: Find caller ids
      description: Returns a list of verified caller ids. If the number is not shown
        in the list, then it is not verified. In this case sending of a verification
        code is required. For authentication use api credentials.
      operationId: getCallerIds
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallerIdList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/getCallerIds.sh
      x-sample-curl-response-url: /curl/me/getCallerIds.json
      x-sample-java-url: /java/me/getCallerIds.java
      x-sample-csharp-url: /csharp/me/getCallerIds.cs
      x-sample-php-url: /php/me/getCallerIds.php
      x-sample-js-url: /js/me/getCallerIds.js
      x-sample-python-url: /python/me/getCallerIds.py
      x-sample-go-url: /go/me/getCallerIds.go
      x-sample-description-url: /description/me/getCallerIds.md
  /me/callerids/{callerid}:
    post:
      tags:
      - me
      summary: Create a caller id
      description: Generates and sends a verification code to the phone number provided
        in the path. The verification code is delivered via a phone call. This code
        needs to be submitted to the verify caller id API endpoint to complete verification.
        For authentication use api credentials.
      operationId: sendVerificationCodeToCallerId
      parameters:
      - name: callerid
        in: path
        description: 'A phone number in E.164 format (11-digit) which needs to be
          verified. Example: 12132000384'
        required: true
        schema:
          type: string
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/sendVerificationCodeToCallerId.sh
      x-sample-curl-response-url: /curl/me/sendVerificationCodeToCallerId.json
      x-sample-java-url: /java/me/sendVerificationCodeToCallerId.java
      x-sample-csharp-url: /csharp/me/sendVerificationCodeToCallerId.cs
      x-sample-php-url: /php/me/sendVerificationCodeToCallerId.php
      x-sample-js-url: /js/me/sendVerificationCodeToCallerId.js
      x-sample-python-url: /python/me/sendVerificationCodeToCallerId.py
      x-sample-go-url: /go/me/sendVerificationCodeToCallerId.go
      x-sample-description-url: /description/me/sendVerificationCodeToCallerId.md
  /me/callerids/{callerid}/verification-code:
    post:
      tags:
      - me
      summary: Verify a caller id
      description: With the verification code received from the Create caller id endpoint,
        a call to this endpoint is required to finish verification. For authentication
        use api credentials.
      operationId: verifyCallerId
      parameters:
      - name: callerid
        in: path
        description: 'A phone number in E.164 format (11-digit) which needs to be
          verified. Example: 12132000384'
        required: true
        schema:
          type: string
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallerIdVerificationRequest'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/me/verifyCallerId.sh
      x-sample-curl-response-url: /curl/me/verifyCallerId.json
      x-sample-java-url: /java/me/verifyCallerId.java
      x-sample-csharp-url: /csharp/me/verifyCallerId.cs
      x-sample-php-url: /php/me/verifyCallerId.php
      x-sample-js-url: /js/me/verifyCallerId.js
      x-sample-python-url: /python/me/verifyCallerId.py
      x-sample-go-url: /go/me/verifyCallerId.go
      x-sample-description-url: /description/me/verifyCallerId.md
      x-codegen-request-body-name: body
  /media:
    get:
      tags:
      - media
      summary: Find media
      description: Find media files created by user
      operationId: findMedia
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: filter
        in: query
        description: value to filter file names again; this value is used to check
          if the filename contains the filter value.
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/findMedia.sh
      x-sample-curl-response-url: /curl/media/findMedia.json
      x-sample-java-url: /java/media/findMedia.java
      x-sample-csharp-url: /csharp/media/findMedia.cs
      x-sample-php-url: /php/media/findMedia.php
      x-sample-js-url: /js/media/findMedia.js
      x-sample-python-url: /python/media/findMedia.py
      x-sample-go-url: /go/media/findMedia.go
      x-sample-description-url: /description/media/findMedia.md
    post:
      tags:
      - media
      summary: Create media
      description: 'Uploads media file to account, acceptable media formats: bmp,
        gif, jpg, m4a, mp3, mp4, png, wav'
      operationId: createMedia
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: Binary media file
                  format: binary
                name:
                  type: string
                  description: A name of a media file
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/createMedia.sh
      x-sample-curl-response-url: /curl/media/createMedia.json
      x-sample-java-url: /java/media/createMedia.java
      x-sample-csharp-url: /csharp/media/createMedia.cs
      x-sample-php-url: /php/media/createMedia.php
      x-sample-js-url: /js/media/createMedia.js
      x-sample-python-url: /python/media/createMedia.py
      x-sample-go-url: /go/media/createMedia.go
      x-sample-description-url: /description/media/createMedia.md
  /media/public/{key}.{extension}:
    get:
      tags:
      - media
      summary: Download media by extension
      description: 'Download a media file. Available types of files: bmp, gif, jpg,
        m4a, mp3, mp4, png, wav. Content type in response depends on ''extension''
        parameter, e.g. image/jpeg, image/png, audio/mp3, etc'
      operationId: getMediaDataByKey
      parameters:
      - name: key
        in: path
        description: A hash-key of a media resource
        required: true
        schema:
          type: string
      - name: extension
        in: path
        description: 'Media file type, available types: bmp, gif, jpg, m4a, mp3, mp4,
          png, wav'
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/png:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/gif:
              schema:
                $ref: '#/components/schemas/InputStream'
            video/mp4:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/wav:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/InputStream'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/InputStream'
        400:
          description: Bad request
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/getMediaDataByKey.sh
      x-sample-curl-response-url: /curl/media/getMediaDataByKey.json
      x-sample-java-url: /java/media/getMediaDataByKey.java
      x-sample-csharp-url: /csharp/media/getMediaDataByKey.cs
      x-sample-php-url: /php/media/getMediaDataByKey.php
      x-sample-js-url: /js/media/getMediaDataByKey.js
      x-sample-python-url: /python/media/getMediaDataByKey.py
      x-sample-go-url: /go/media/getMediaDataByKey.go
      x-sample-description-url: /description/media/getMediaDataByKey.md
  /media/{id}:
    get:
      tags:
      - media
      summary: Get a specific media
      description: Get media resource by id
      operationId: getMedia
      parameters:
      - name: id
        in: path
        description: An id of a media resource
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/getMedia.sh
      x-sample-curl-response-url: /curl/media/getMedia.json
      x-sample-java-url: /java/media/getMedia.java
      x-sample-csharp-url: /csharp/media/getMedia.cs
      x-sample-php-url: /php/media/getMedia.php
      x-sample-js-url: /js/media/getMedia.js
      x-sample-python-url: /python/media/getMedia.py
      x-sample-go-url: /go/media/getMedia.go
      x-sample-description-url: /description/media/getMedia.md
  /media/{id}.{extension}:
    get:
      tags:
      - media
      summary: Download media by extension
      description: 'Download a media file. Available types of files: bmp, gif, jpg,
        m4a, mp3, mp4, png, wav. Content type in response depends on ''extension''
        parameter, e.g. image/jpeg, image/png, audio/mp3, etc'
      operationId: getMediaData
      parameters:
      - name: id
        in: path
        description: An id of a media resource
        required: true
        schema:
          type: integer
          format: int64
      - name: extension
        in: path
        description: 'Media file type. Available types: bmp, gif, jpg, m4a, mp3, mp4,
          png, wav'
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/png:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/InputStream'
            image/gif:
              schema:
                $ref: '#/components/schemas/InputStream'
            video/mp4:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/wav:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/InputStream'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/InputStream'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/InputStream'
        400:
          description: Bad request
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/x-bmp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            image/gif:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/mp4:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/wav:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/mp3:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            audio/m4a:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            video/3gpp:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/getMediaData.sh
      x-sample-curl-response-url: /curl/media/getMediaData.json
      x-sample-java-url: /java/media/getMediaData.java
      x-sample-csharp-url: /csharp/media/getMediaData.cs
      x-sample-php-url: /php/media/getMediaData.php
      x-sample-js-url: /js/media/getMediaData.js
      x-sample-python-url: /python/media/getMediaData.py
      x-sample-go-url: /go/media/getMediaData.go
      x-sample-description-url: /description/media/getMediaData.md
  /media/{id}/file:
    get:
      tags:
      - media
      summary: Download a MP3 media
      description: Download a MP3 media, endpoint returns application/binary content-type
      operationId: getMediaDataBinary
      parameters:
      - name: id
        in: path
        description: An id of a media resource
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/InputStream'
        400:
          description: Bad request
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/binary:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/media/getMediaDataBinary.sh
      x-sample-curl-response-url: /curl/media/getMediaDataBinary.json
      x-sample-java-url: /java/media/getMediaDataBinary.java
      x-sample-csharp-url: /csharp/media/getMediaDataBinary.cs
      x-sample-php-url: /php/media/getMediaDataBinary.php
      x-sample-js-url: /js/media/getMediaDataBinary.js
      x-sample-python-url: /python/media/getMediaDataBinary.py
      x-sample-go-url: /go/media/getMediaDataBinary.go
      x-sample-description-url: /description/media/getMediaDataBinary.md
  /numbers/leases:
    get:
      tags:
      - numbers
      summary: Find leases
      description: Searches for all numbers leased by account user. This API is useful
        for finding all numbers currently owned by the user. Returns a paged list
        of number leases.
      operationId: findNumberLeases
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: prefix
        in: query
        description: A 4-7 digit prefix
        schema:
          type: string
      - name: city
        in: query
        description: A city name
        schema:
          type: string
      - name: state
        in: query
        description: 'A two-letter state code. Example: CA, IL, etc.'
        schema:
          type: string
      - name: zipcode
        in: query
        description: A five-digit Zipcode
        schema:
          type: string
      - name: labelName
        in: query
        description: A label name
        schema:
          type: string
      - name: tollFree
        in: query
        description: ~
        schema:
          type: boolean
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberLeasePage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/findNumberLeases.sh
      x-sample-curl-response-url: /curl/numbers/findNumberLeases.json
      x-sample-java-url: /java/numbers/findNumberLeases.java
      x-sample-csharp-url: /csharp/numbers/findNumberLeases.cs
      x-sample-php-url: /php/numbers/findNumberLeases.php
      x-sample-js-url: /js/numbers/findNumberLeases.js
      x-sample-python-url: /python/numbers/findNumberLeases.py
      x-sample-go-url: /go/numbers/findNumberLeases.go
      x-sample-description-url: /description/numbers/findNumberLeases.md
  /numbers/leases/configs:
    get:
      tags:
      - numbers
      summary: Find lease configs
      description: Searches for all number lease configs for the user. Returns a paged
        list of NumberConfig
      operationId: findNumberLeaseConfigs
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: prefix
        in: query
        description: A 4-7 digit prefix
        schema:
          type: string
      - name: city
        in: query
        description: A city name
        schema:
          type: string
      - name: state
        in: query
        description: 'A two-letter state code. Example: CA, IL, etc.'
        schema:
          type: string
      - name: zipcode
        in: query
        description: A five-digit Zipcode
        schema:
          type: string
      - name: labelName
        in: query
        description: A label name
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberConfigPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/findNumberLeaseConfigs.sh
      x-sample-curl-response-url: /curl/numbers/findNumberLeaseConfigs.json
      x-sample-java-url: /java/numbers/findNumberLeaseConfigs.java
      x-sample-csharp-url: /csharp/numbers/findNumberLeaseConfigs.cs
      x-sample-php-url: /php/numbers/findNumberLeaseConfigs.php
      x-sample-js-url: /js/numbers/findNumberLeaseConfigs.js
      x-sample-python-url: /python/numbers/findNumberLeaseConfigs.py
      x-sample-go-url: /go/numbers/findNumberLeaseConfigs.go
      x-sample-description-url: /description/numbers/findNumberLeaseConfigs.md
  /numbers/leases/configs/{number}:
    get:
      tags:
      - numbers
      summary: Find a specific lease config
      description: Returns a single NumberConfig instance for a given number lease
      operationId: getNumberLeaseConfig
      parameters:
      - name: number
        in: path
        description: 'A phone number in E.164 format (11-digit). Example: 12132000384'
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberConfig'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/getNumberLeaseConfig.sh
      x-sample-curl-response-url: /curl/numbers/getNumberLeaseConfig.json
      x-sample-java-url: /java/numbers/getNumberLeaseConfig.java
      x-sample-csharp-url: /csharp/numbers/getNumberLeaseConfig.cs
      x-sample-php-url: /php/numbers/getNumberLeaseConfig.php
      x-sample-js-url: /js/numbers/getNumberLeaseConfig.js
      x-sample-python-url: /python/numbers/getNumberLeaseConfig.py
      x-sample-go-url: /go/numbers/getNumberLeaseConfig.go
      x-sample-description-url: /description/numbers/getNumberLeaseConfig.md
    put:
      tags:
      - numbers
      summary: Update a lease config
      description: Updates a phone number lease configuration. Use this API endpoint
        to add an Inbound IVR or Call Tracking feature to a CallFire phone number.
        Call tracking configuration allows you to track the incoming calls, to analyze
        and to respond customers using sms or voice replies. For more information
        see [call tracking page](https://www.callfire.com/products/call-tracking)
      operationId: updateNumberLeaseConfig
      parameters:
      - name: number
        in: path
        description: 'A phone number in E.164 format (11-digit) which needs to be
          verified. Example: 12132000384'
        required: true
        schema:
          type: string
      requestBody:
        description: 'The configuration of a number lease object. There are two available
          types of configuration: IVR, TRACKING '
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberConfig'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/updateNumberLeaseConfig.sh
      x-sample-curl-response-url: /curl/numbers/updateNumberLeaseConfig.json
      x-sample-java-url: /java/numbers/updateNumberLeaseConfig.java
      x-sample-csharp-url: /csharp/numbers/updateNumberLeaseConfig.cs
      x-sample-php-url: /php/numbers/updateNumberLeaseConfig.php
      x-sample-js-url: /js/numbers/updateNumberLeaseConfig.js
      x-sample-python-url: /python/numbers/updateNumberLeaseConfig.py
      x-sample-go-url: /go/numbers/updateNumberLeaseConfig.go
      x-sample-description-url: /description/numbers/updateNumberLeaseConfig.md
      x-codegen-request-body-name: body
  /numbers/leases/{number}:
    get:
      tags:
      - numbers
      summary: Find a specific lease
      description: Returns a single NumberLease instance for a given number
      operationId: getNumberLease
      parameters:
      - name: number
        in: path
        description: 'A phone number in E.164 format (11-digit). Example: 12132000384'
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberLease'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/getNumberLease.sh
      x-sample-curl-response-url: /curl/numbers/getNumberLease.json
      x-sample-java-url: /java/numbers/getNumberLease.java
      x-sample-csharp-url: /csharp/numbers/getNumberLease.cs
      x-sample-php-url: /php/numbers/getNumberLease.php
      x-sample-js-url: /js/numbers/getNumberLease.js
      x-sample-python-url: /python/numbers/getNumberLease.py
      x-sample-go-url: /go/numbers/getNumberLease.go
      x-sample-description-url: /description/numbers/getNumberLease.md
    put:
      tags:
      - numbers
      summary: Update a lease
      description: Updates a number lease instance. Ability to turn on/off autoRenew
        and toggle call/text features for a particular number
      operationId: updateNumberLease
      parameters:
      - name: number
        in: path
        description: 'A phone number in E.164 format (11-digit). Example: 12132000384'
        required: true
        schema:
          type: string
      requestBody:
        description: A NumberLease object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberLease'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/updateNumberLease.sh
      x-sample-curl-response-url: /curl/numbers/updateNumberLease.json
      x-sample-java-url: /java/numbers/updateNumberLease.java
      x-sample-csharp-url: /csharp/numbers/updateNumberLease.cs
      x-sample-php-url: /php/numbers/updateNumberLease.php
      x-sample-js-url: /js/numbers/updateNumberLease.js
      x-sample-python-url: /python/numbers/updateNumberLease.py
      x-sample-go-url: /go/numbers/updateNumberLease.go
      x-sample-description-url: /description/numbers/updateNumberLease.md
      x-codegen-request-body-name: body
  /numbers/local:
    get:
      tags:
      - numbers
      summary: Find local numbers
      description: Searches for numbers available for purchase in CallFire local numbers
        catalog . At least one additional parameter is required. User may filter local
        numbers by their region information. If all numbers with desirable zip code
        is already busy search will return available numbers with nearest zip code.
      operationId: findNumbersLocal
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: prefix
        in: query
        description: A 4-7 digit prefix
        schema:
          type: string
      - name: city
        in: query
        description: A city name
        schema:
          type: string
      - name: state
        in: query
        description: 'A two-letter state code. Example: CA, IL, etc.'
        schema:
          type: string
      - name: zipcode
        in: query
        description: A five-digit Zipcode
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/findNumbersLocal.sh
      x-sample-curl-response-url: /curl/numbers/findNumbersLocal.json
      x-sample-java-url: /java/numbers/findNumbersLocal.java
      x-sample-csharp-url: /csharp/numbers/findNumbersLocal.cs
      x-sample-php-url: /php/numbers/findNumbersLocal.php
      x-sample-js-url: /js/numbers/findNumbersLocal.js
      x-sample-python-url: /python/numbers/findNumbersLocal.py
      x-sample-go-url: /go/numbers/findNumbersLocal.go
      x-sample-description-url: /description/numbers/findNumbersLocal.md
  /numbers/regions:
    get:
      tags:
      - numbers
      summary: Find number regions
      description: Searches for region information. Use this API to obtain detailed
        region information that can be used to query for more specific phone numbers
        than a general query.
      operationId: findNumberRegions
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: prefix
        in: query
        description: A 4-7 digit prefix
        schema:
          type: string
      - name: city
        in: query
        description: A city name
        schema:
          type: string
      - name: state
        in: query
        description: 'A two-letter state code. Example: CA, IL, etc.'
        schema:
          type: string
      - name: zipcode
        in: query
        description: A five-digit Zipcode
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/findNumberRegions.sh
      x-sample-curl-response-url: /curl/numbers/findNumberRegions.json
      x-sample-java-url: /java/numbers/findNumberRegions.java
      x-sample-csharp-url: /csharp/numbers/findNumberRegions.cs
      x-sample-php-url: /php/numbers/findNumberRegions.php
      x-sample-js-url: /js/numbers/findNumberRegions.js
      x-sample-python-url: /python/numbers/findNumberRegions.py
      x-sample-go-url: /go/numbers/findNumberRegions.go
      x-sample-description-url: /description/numbers/findNumberRegions.md
  /numbers/tollfree:
    get:
      tags:
      - numbers
      summary: Find tollfree numbers
      description: Searches for the toll free numbers which are available for purchase
        in the CallFire catalog
      operationId: findNumbersTollfree
      parameters:
      - name: pattern
        in: query
        description: 'Filter toll free numbers by prefix, pattern must be 3 char long
          and should end with ''*''. Examples: 8**, 85*, 87* (but 855 will fail because
          pattern must end with ''*'').'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/numbers/findNumbersTollfree.sh
      x-sample-curl-response-url: /curl/numbers/findNumbersTollfree.json
      x-sample-java-url: /java/numbers/findNumbersTollfree.java
      x-sample-csharp-url: /csharp/numbers/findNumbersTollfree.cs
      x-sample-php-url: /php/numbers/findNumbersTollfree.php
      x-sample-js-url: /js/numbers/findNumbersTollfree.js
      x-sample-python-url: /python/numbers/findNumbersTollfree.py
      x-sample-go-url: /go/numbers/findNumbersTollfree.go
      x-sample-description-url: /description/numbers/findNumbersTollfree.md
  /orders:
    get:
      tags:
      - orders
      summary: Find orders
      description: Searches for account orders
      operationId: findOrders
      parameters:
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 20
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: status
        in: query
        description: 'Filter by order status, accepts multiple values in comma separated
          string, available values: [PROCESSING, FINISHED, PAYMENT_ERROR, VOID, WAIT_FOR_PAYMENT,
          PARTIALLY_ADJUSTED, ADJUSTED]'
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: intervalBegin
        in: query
        description: 'Start of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNumberOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/orders/findOrders.sh
      x-sample-curl-response-url: /curl/orders/findOrders.json
      x-sample-java-url: /java/orders/findOrders.java
      x-sample-csharp-url: /csharp/orders/findOrders.cs
      x-sample-php-url: /php/orders/findOrders.php
      x-sample-js-url: /js/orders/findOrders.js
      x-sample-python-url: /python/orders/findOrders.py
      x-sample-go-url: /go/orders/findOrders.go
      x-sample-description-url: /description/orders/findOrders.md
  /orders/keywords:
    post:
      tags:
      - orders
      summary: Purchase keywords
      description: Purchase keywords. Send a list of available keywords into this
        API to purchase them using CallFire credits. Make sure the account has enough
        credits before trying to purchase the keywords. Keyword should only consist
        of uppercase and lowercase letters and numbers. Number of characters must
        be greater than 2, but less than 65.
      operationId: orderKeywords
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        description: Request object which contains a list of keywords to buy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordPurchaseRequest'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/orders/orderKeywords.sh
      x-sample-curl-response-url: /curl/orders/orderKeywords.json
      x-sample-java-url: /java/orders/orderKeywords.java
      x-sample-csharp-url: /csharp/orders/orderKeywords.cs
      x-sample-php-url: /php/orders/orderKeywords.php
      x-sample-js-url: /js/orders/orderKeywords.js
      x-sample-python-url: /python/orders/orderKeywords.py
      x-sample-go-url: /go/orders/orderKeywords.go
      x-sample-description-url: /description/orders/orderKeywords.md
      x-codegen-request-body-name: body
  /orders/numbers:
    post:
      tags:
      - orders
      summary: Purchase numbers
      description: Purchase numbers. There are many ways to purchase a number. Set
        either 'tollFreeCount' or 'localCount' along with some querying fields to
        purchase numbers by bulk query. Set the list of numbers to purchase by list.
        Available numbers will be purchased using CallFire credits owned by the user.
        Make sure the account has enough credits before trying to purchase
      operationId: orderNumbers
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      requestBody:
        description: 'Request object contains a list of numbers to buy, you can filter
          the numbers by their region information: city, state, zipcode, etc'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberPurchaseRequest'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/orders/orderNumbers.sh
      x-sample-curl-response-url: /curl/orders/orderNumbers.json
      x-sample-java-url: /java/orders/orderNumbers.java
      x-sample-csharp-url: /csharp/orders/orderNumbers.cs
      x-sample-php-url: /php/orders/orderNumbers.php
      x-sample-js-url: /js/orders/orderNumbers.js
      x-sample-python-url: /python/orders/orderNumbers.py
      x-sample-go-url: /go/orders/orderNumbers.go
      x-sample-description-url: /description/orders/orderNumbers.md
      x-codegen-request-body-name: body
  /orders/{id}:
    get:
      tags:
      - orders
      summary: Find a specific order
      description: Returns a single NumberOrder instance for a given order id. Order
        contains information about purchased keywords, local, toll-free numbers
      operationId: getOrder
      parameters:
      - name: id
        in: path
        description: An id of an order
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/orders/getOrder.sh
      x-sample-curl-response-url: /curl/orders/getOrder.json
      x-sample-java-url: /java/orders/getOrder.java
      x-sample-csharp-url: /csharp/orders/getOrder.cs
      x-sample-php-url: /php/orders/getOrder.php
      x-sample-js-url: /js/orders/getOrder.js
      x-sample-python-url: /python/orders/getOrder.py
      x-sample-go-url: /go/orders/getOrder.go
      x-sample-description-url: /description/orders/getOrder.md
  /reports/delivery:
    get:
      tags:
      - reports
      summary: Get delivery reports by ad hoc criteria
      description: Get delivery reports
      operationId: getDeliveryReports
      parameters:
      - name: startDate
        in: query
        description: ~
        schema:
          type: string
      - name: endDate
        in: query
        description: ~
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: campaignId
        in: query
        description: ~
        schema:
          type: integer
          format: int64
      - name: fromNumber
        in: query
        description: ~
        schema:
          type: string
      - name: toNumber
        in: query
        description: ~
        schema:
          type: string
      - name: deliveryCategory
        in: query
        description: ~
        schema:
          type: string
          enum:
          - NO_DATA
          - OPTED_OUT
          - BOUNCED
          - NO_CREDITS
          - DELIVERED
      - name: deliveryState
        in: query
        description: ~
        schema:
          type: string
          enum:
          - DELIVERED
          - UNSENT_OPTED_OUT_GLOBAL
          - UNSENT_OPTED_OUT_LOCAL
          - UNSENT_NO_CREDITS
          - GATEWAY_REJECTED
          - CARRIER_REJECTED
          - NOT_DELIVERED
          - UNSENT_INVALID_NUMBER
          - UNSENT_BAD_DATA
          - UNSENT_FORCE_STOPPED
          - UNSENT_PERIOD_LIMIT
          - UNSENT_INTERNATIONAL
          - UNSENT_INVALID_TIMEZONE_OR_DNC
          - UNSENT_ALREADY_SCRUBBED
          - UNSENT_SYSTEM_ERROR
          - UNSENT_NO_WIRELESS_CARRIER
          - UNSENT_MESSAGE_TOO_LONG
          - UNSENT_MESSAGE_BLOCKED
          - UNSENT_QUEUE_LIMIT_REACHED
          - UNSENT_TOKEN_LIMIT_REACHED
          - UNSENT_TIME_LIMIT_REACHED
          - UNSENT_SCHEDULER_CAPACITY_EXCEEDED
          - SPAM_DETECTED
          - UNSENT_NO_GATEWAY
          - ORIGINATED
          - SUBMITTED
          - FORWARDED
          - NOT_GIVEN
          - UNKNOWN
          - RETRY_MMS_AS_SMS
          - QUEUED
          - QUEUED_TRANSCODE
          - ORIGINAL
          - DUPE
          - TRUNCATED
          - REQUEUED_RATE_LIMITED
          - BUFFERED
          - RATE_LIMIT_EXCEEDED
          - SERVICE_UNAVAILABLE
          - SEND_MMS_AS_SMS
          - REQUEUED_RECOVERABLE_ERROR
          - SEND_WITH_ADDITIONAL_SPID
      - name: carrier
        in: query
        description: ~
        schema:
          type: string
      - name: messageText
        in: query
        description: ~
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDeliveryReport'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/reports/getDeliveryReports.sh
      x-sample-curl-response-url: /curl/reports/getDeliveryReports.json
      x-sample-java-url: /java/reports/getDeliveryReports.java
      x-sample-csharp-url: /csharp/reports/getDeliveryReports.cs
      x-sample-php-url: /php/reports/getDeliveryReports.php
      x-sample-js-url: /js/reports/getDeliveryReports.js
      x-sample-python-url: /python/reports/getDeliveryReports.py
      x-sample-go-url: /go/reports/getDeliveryReports.go
      x-sample-description-url: /description/reports/getDeliveryReports.md
  /texts:
    get:
      tags:
      - texts
      summary: Find texts
      description: Searches for texts sent or received by user. Use "campaignId=0"
        parameter to query for all texts sent through the POST /texts API. See [call
        states and results](https://developers.callfire.com/results-responses-errors.html)
      operationId: findTexts
      parameters:
      - name: id
        in: query
        description: List of Text ids to search for, if ids specified other query
          params ignored
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: campaignId
        in: query
        description: An id of a campaign, queries for texts inside a particular campaign.
          Specify null to list texts of all campaigns or 0 for a default campaign
        schema:
          type: integer
          format: int64
      - name: batchId
        in: query
        description: An Id of a contact batch, queries for texts which are used in
          the particular contact batch
        schema:
          type: integer
          format: int64
      - name: fromNumber
        in: query
        description: 'A phone number in E.164 format (11-digit). Example: 12132000384,
          67076'
        schema:
          type: string
      - name: toNumber
        in: query
        description: 'A phone number in E.164 format (11-digit). Example: 12132000384,
          67076'
        schema:
          type: string
      - name: label
        in: query
        description: A label of a text message
        schema:
          type: string
      - name: states
        in: query
        description: 'Expected text statuses in comma separated string, available
          values: READY, SELECTED, CALLBACK, FINISHED, DISABLED, DNC, DUP, INVALID,
          TIMEOUT, PERIOD_LIMIT. See [call states and results](https://developers.callfire.com/results-responses-errors.html)'
        schema:
          type: string
      - name: results
        in: query
        description: 'Expected text results in comma separated string, available values:
          SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR,
          UNDIALED. See [call states and results](https://developers.callfire.com/results-responses-errors.html)'
        schema:
          type: string
      - name: inbound
        in: query
        description: Specify true for inbound or false for outbounds. Do not specify
          this parameter if you need to get both inbound and outbound texts listed
          in response
        schema:
          type: boolean
      - name: intervalBegin
        in: query
        description: 'Start of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000'
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 10
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/findTexts.sh
      x-sample-curl-response-url: /curl/texts/findTexts.json
      x-sample-java-url: /java/texts/findTexts.java
      x-sample-csharp-url: /csharp/texts/findTexts.cs
      x-sample-php-url: /php/texts/findTexts.php
      x-sample-js-url: /js/texts/findTexts.js
      x-sample-python-url: /python/texts/findTexts.py
      x-sample-go-url: /go/texts/findTexts.go
      x-sample-description-url: /description/texts/findTexts.md
    post:
      tags:
      - texts
      summary: Send texts
      description: 'Use the /texts API to send individual texts quickly. By default
        all texts are going out from CallFire''s dedicated short code. Example: 67076,
        818818 etc'
      operationId: sendTexts
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: campaignId
        in: query
        description: Specifies a campaignId to send texts through a previously created
          campaign
        schema:
          type: integer
          format: int64
      - name: defaultMessage
        in: query
        description: Text message can be overridden by TextRecipient.message field.
          If multiple recipients have the same text message to a different recipients
          it is better to specify a single default message and do not duplicate it
          in each recipient.
        schema:
          type: string
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients
        schema:
          type: boolean
      requestBody:
        description: List of TextRecipient objects. By recipient we mean either phone
          number or contact with user-defined attributes added to action. Text messaging
          supports media files, provide a list of ids of media files for recipient
          to attach media to the message.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TextRecipient'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/sendTexts.sh
      x-sample-curl-response-url: /curl/texts/sendTexts.json
      x-sample-java-url: /java/texts/sendTexts.java
      x-sample-csharp-url: /csharp/texts/sendTexts.cs
      x-sample-php-url: /php/texts/sendTexts.php
      x-sample-js-url: /js/texts/sendTexts.js
      x-sample-python-url: /python/texts/sendTexts.py
      x-sample-go-url: /go/texts/sendTexts.go
      x-sample-description-url: /description/texts/sendTexts.md
      x-codegen-request-body-name: body
  /texts/auto-replys:
    get:
      tags:
      - texts
      summary: Find auto replies
      description: Find all text autoreplies created by user. Returns a paged list
        of TextAutoReply
      operationId: findTextAutoReplys
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: number
        in: query
        description: 'Phone number in E.164 format (11-digit) which contains a TextAutoReply.
          Example: 12132000384. If number is empty then operator returns all autoreplies
          configured for the user''s account'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextAutoReplyPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/findTextAutoReplys.sh
      x-sample-curl-response-url: /curl/texts/findTextAutoReplys.json
      x-sample-java-url: /java/texts/findTextAutoReplys.java
      x-sample-csharp-url: /csharp/texts/findTextAutoReplys.cs
      x-sample-php-url: /php/texts/findTextAutoReplys.php
      x-sample-js-url: /js/texts/findTextAutoReplys.js
      x-sample-python-url: /python/texts/findTextAutoReplys.py
      x-sample-go-url: /go/texts/findTextAutoReplys.go
      x-sample-description-url: /description/texts/findTextAutoReplys.md
    post:
      tags:
      - texts
      summary: Create an auto reply
      description: CallFire gives you possibility to set up auto reply messages for
        your numbers and keywords. You can set a general auto reply for anyone who
        texts your number, keyword, and/or include a text to match, so that the auto
        reply would be sent only to those who text the matched text
      operationId: createTextAutoReply
      requestBody:
        description: TextAutoReply object, keyword or number should be specified with
          response message and text to match if needed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextAutoReply'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/createTextAutoReply.sh
      x-sample-curl-response-url: /curl/texts/createTextAutoReply.json
      x-sample-java-url: /java/texts/createTextAutoReply.java
      x-sample-csharp-url: /csharp/texts/createTextAutoReply.cs
      x-sample-php-url: /php/texts/createTextAutoReply.php
      x-sample-js-url: /js/texts/createTextAutoReply.js
      x-sample-python-url: /python/texts/createTextAutoReply.py
      x-sample-go-url: /go/texts/createTextAutoReply.go
      x-sample-description-url: /description/texts/createTextAutoReply.md
      x-codegen-request-body-name: body
  /texts/auto-replys/{id}:
    get:
      tags:
      - texts
      summary: Find a specific auto reply
      description: Returns a single TextAutoReply instance for a given text auto reply
        id
      operationId: getTextAutoReply
      parameters:
      - name: id
        in: path
        description: An id of a text auto reply
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextAutoReply'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getTextAutoReply.sh
      x-sample-curl-response-url: /curl/texts/getTextAutoReply.json
      x-sample-java-url: /java/texts/getTextAutoReply.java
      x-sample-csharp-url: /csharp/texts/getTextAutoReply.cs
      x-sample-php-url: /php/texts/getTextAutoReply.php
      x-sample-js-url: /js/texts/getTextAutoReply.js
      x-sample-python-url: /python/texts/getTextAutoReply.py
      x-sample-go-url: /go/texts/getTextAutoReply.go
      x-sample-description-url: /description/texts/getTextAutoReply.md
    delete:
      tags:
      - texts
      summary: Delete an auto reply
      description: Deletes a text auto reply and removes the configuration. Can not
        delete a TextAutoReply which is currently active for a campaign
      operationId: deleteTextAutoReply
      parameters:
      - name: id
        in: path
        description: An id of a text auto reply
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/deleteTextAutoReply.sh
      x-sample-curl-response-url: /curl/texts/deleteTextAutoReply.json
      x-sample-java-url: /java/texts/deleteTextAutoReply.java
      x-sample-csharp-url: /csharp/texts/deleteTextAutoReply.cs
      x-sample-php-url: /php/texts/deleteTextAutoReply.php
      x-sample-js-url: /js/texts/deleteTextAutoReply.js
      x-sample-python-url: /python/texts/deleteTextAutoReply.py
      x-sample-go-url: /go/texts/deleteTextAutoReply.go
      x-sample-description-url: /description/texts/deleteTextAutoReply.md
  /texts/broadcasts:
    get:
      tags:
      - texts
      summary: Find text broadcasts
      description: Searches for all text broadcasts created by user. Can query on
        label, name, and the current running status of the campaign. Returns a paged
        list of text broadcasts
      operationId: findTextBroadcasts
      parameters:
      - name: name
        in: query
        description: A name of text broadcast
        schema:
          type: string
      - name: label
        in: query
        description: A label of a text broadcast
        schema:
          type: string
      - name: running
        in: query
        description: Returns broadcasts only in running state.
        schema:
          type: boolean
      - name: scheduled
        in: query
        description: Specify whether the campaigns should be scheduled or not
        schema:
          type: boolean
      - name: intervalBegin
        in: query
        description: 'Start of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: intervalEnd
        in: query
        description: 'End of the find time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 10
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBroadcastPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/findTextBroadcasts.sh
      x-sample-curl-response-url: /curl/texts/findTextBroadcasts.json
      x-sample-java-url: /java/texts/findTextBroadcasts.java
      x-sample-csharp-url: /csharp/texts/findTextBroadcasts.cs
      x-sample-php-url: /php/texts/findTextBroadcasts.php
      x-sample-js-url: /js/texts/findTextBroadcasts.js
      x-sample-python-url: /python/texts/findTextBroadcasts.py
      x-sample-go-url: /go/texts/findTextBroadcasts.go
      x-sample-description-url: /description/texts/findTextBroadcasts.md
    post:
      tags:
      - texts
      summary: Create a text broadcast
      description: Creates a text broadcast campaign using the Text Broadcast API.
        Send a TextBroadcast object in the message body to detail a text broadcast
        campaign. A campaign can be created without contacts and with bare minimum
        configuration, but contacts have to be added further on to use the campaign.
        It supports scheduling, retry logic, pattern-based messages.
      operationId: createTextBroadcast
      parameters:
      - name: start
        in: query
        description: If true then starts the campaign immediately (not required).
        schema:
          type: boolean
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A TextBroadcast object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextBroadcast'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/createTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/createTextBroadcast.json
      x-sample-java-url: /java/texts/createTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/createTextBroadcast.cs
      x-sample-php-url: /php/texts/createTextBroadcast.php
      x-sample-js-url: /js/texts/createTextBroadcast.js
      x-sample-python-url: /python/texts/createTextBroadcast.py
      x-sample-go-url: /go/texts/createTextBroadcast.go
      x-sample-description-url: /description/texts/createTextBroadcast.md
      x-codegen-request-body-name: body
  /texts/broadcasts/{id}:
    get:
      tags:
      - texts
      summary: Find a specific text broadcast
      description: Returns a single TextBroadcast instance for a given text broadcast
        id
      operationId: getTextBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBroadcast'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/getTextBroadcast.json
      x-sample-java-url: /java/texts/getTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/getTextBroadcast.cs
      x-sample-php-url: /php/texts/getTextBroadcast.php
      x-sample-js-url: /js/texts/getTextBroadcast.js
      x-sample-python-url: /python/texts/getTextBroadcast.py
      x-sample-go-url: /go/texts/getTextBroadcast.go
      x-sample-description-url: /description/texts/getTextBroadcast.md
    put:
      tags:
      - texts
      summary: Update a text broadcast
      description: Allows modifying the configuration of existing text broadcast campaign.
        See TextBroadcast for more information on what can/can't be updated on this
        API
      operationId: updateTextBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A TextBroadcast object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextBroadcast'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBroadcastCreateResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/updateTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/updateTextBroadcast.json
      x-sample-java-url: /java/texts/updateTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/updateTextBroadcast.cs
      x-sample-php-url: /php/texts/updateTextBroadcast.php
      x-sample-js-url: /js/texts/updateTextBroadcast.js
      x-sample-python-url: /python/texts/updateTextBroadcast.py
      x-sample-go-url: /go/texts/updateTextBroadcast.go
      x-sample-description-url: /description/texts/updateTextBroadcast.md
      x-codegen-request-body-name: body
  /texts/broadcasts/{id}/archive:
    post:
      tags:
      - texts
      summary: Archive text broadcast
      description: Archives a text broadcast (and hides it in the search results)
      operationId: archiveTextBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast to archive
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/archiveTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/archiveTextBroadcast.json
      x-sample-java-url: /java/texts/archiveTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/archiveTextBroadcast.cs
      x-sample-php-url: /php/texts/archiveTextBroadcast.php
      x-sample-js-url: /js/texts/archiveTextBroadcast.js
      x-sample-python-url: /python/texts/archiveTextBroadcast.py
      x-sample-go-url: /go/texts/archiveTextBroadcast.go
      x-sample-description-url: /description/texts/archiveTextBroadcast.md
  /texts/broadcasts/{id}/batches:
    get:
      tags:
      - texts
      summary: Find batches in a text broadcast
      description: This endpoint will enable the user to page through all of the batches
        for a particular text broadcast campaign
      operationId: getTextBroadcastBatches
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getTextBroadcastBatches.sh
      x-sample-curl-response-url: /curl/texts/getTextBroadcastBatches.json
      x-sample-java-url: /java/texts/getTextBroadcastBatches.java
      x-sample-csharp-url: /csharp/texts/getTextBroadcastBatches.cs
      x-sample-php-url: /php/texts/getTextBroadcastBatches.php
      x-sample-js-url: /js/texts/getTextBroadcastBatches.js
      x-sample-python-url: /python/texts/getTextBroadcastBatches.py
      x-sample-go-url: /go/texts/getTextBroadcastBatches.go
      x-sample-description-url: /description/texts/getTextBroadcastBatches.md
    post:
      tags:
      - texts
      summary: Add batches to a text broadcast
      description: Allows adding an extra batches to an already created text broadcast
        campaign. The batches which being  added pass the CallFire validation process
        (unlike in the recipients version of this API). That is why using of a scrubDuplicates
        flag remove duplicates from your batch. Batches may be added as a contact
        list id, a list of contact ids, or a list of numbers
      operationId: addTextBroadcastBatch
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/addTextBroadcastBatch.sh
      x-sample-curl-response-url: /curl/texts/addTextBroadcastBatch.json
      x-sample-java-url: /java/texts/addTextBroadcastBatch.java
      x-sample-csharp-url: /csharp/texts/addTextBroadcastBatch.cs
      x-sample-php-url: /php/texts/addTextBroadcastBatch.php
      x-sample-js-url: /js/texts/addTextBroadcastBatch.js
      x-sample-python-url: /python/texts/addTextBroadcastBatch.py
      x-sample-go-url: /go/texts/addTextBroadcastBatch.go
      x-sample-description-url: /description/texts/addTextBroadcastBatch.md
      x-codegen-request-body-name: body
  /texts/broadcasts/{id}/recipients:
    post:
      tags:
      - texts
      summary: Add recipients to a text broadcast
      description: Use this API to add recipients to a text broadcast which is already
        created. Post a list of Recipient objects to be immediately added to the text
        broadcast campaign. These contacts will not go through validation process,
        and will be acted upon as they are added. Recipients may be added as a list
        of contact ids, or list of numbers
      operationId: addTextBroadcastRecipients
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: strictValidation
        in: query
        description: Turns on strict validation for recipients. System will reply
          with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't
          pass validation
        schema:
          type: boolean
      requestBody:
        description: A list of the TextRecipient objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TextRecipient'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextList'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/addTextBroadcastRecipients.sh
      x-sample-curl-response-url: /curl/texts/addTextBroadcastRecipients.json
      x-sample-java-url: /java/texts/addTextBroadcastRecipients.java
      x-sample-csharp-url: /csharp/texts/addTextBroadcastRecipients.cs
      x-sample-php-url: /php/texts/addTextBroadcastRecipients.php
      x-sample-js-url: /js/texts/addTextBroadcastRecipients.js
      x-sample-python-url: /python/texts/addTextBroadcastRecipients.py
      x-sample-go-url: /go/texts/addTextBroadcastRecipients.go
      x-sample-description-url: /description/texts/addTextBroadcastRecipients.md
      x-codegen-request-body-name: body
  /texts/broadcasts/{id}/start:
    post:
      tags:
      - texts
      summary: Start text broadcast
      description: Starts a text broadcast
      operationId: startTextBroadcast
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast to start
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/startTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/startTextBroadcast.json
      x-sample-java-url: /java/texts/startTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/startTextBroadcast.cs
      x-sample-php-url: /php/texts/startTextBroadcast.php
      x-sample-js-url: /js/texts/startTextBroadcast.js
      x-sample-python-url: /python/texts/startTextBroadcast.py
      x-sample-go-url: /go/texts/startTextBroadcast.go
      x-sample-description-url: /description/texts/startTextBroadcast.md
  /texts/broadcasts/{id}/stats:
    get:
      tags:
      - texts
      summary: Get statistics on text broadcast
      description: 'Returns the broadcast statistics. Example: total number of the
        sent/received actions, total cost, number of remaining outbound actions, error
        count, etc'
      operationId: getTextBroadcastStats
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: begin
        in: query
        description: 'Start of a search find time interval, formatted in unix time
          milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      - name: end
        in: query
        description: 'End of a search time interval, formatted in unix time milliseconds.
          Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextBroadcastStatsDto'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getTextBroadcastStats.sh
      x-sample-curl-response-url: /curl/texts/getTextBroadcastStats.json
      x-sample-java-url: /java/texts/getTextBroadcastStats.java
      x-sample-csharp-url: /csharp/texts/getTextBroadcastStats.cs
      x-sample-php-url: /php/texts/getTextBroadcastStats.php
      x-sample-js-url: /js/texts/getTextBroadcastStats.js
      x-sample-python-url: /python/texts/getTextBroadcastStats.py
      x-sample-go-url: /go/texts/getTextBroadcastStats.go
      x-sample-description-url: /description/texts/getTextBroadcastStats.md
  /texts/broadcasts/{id}/stop:
    post:
      tags:
      - texts
      summary: Stop text broadcast
      description: Stops a text broadcast
      operationId: stopTextBroadcast
      parameters:
      - name: id
        in: path
        description: An Id of a text broadcast. To stop the broadcast
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/stopTextBroadcast.sh
      x-sample-curl-response-url: /curl/texts/stopTextBroadcast.json
      x-sample-java-url: /java/texts/stopTextBroadcast.java
      x-sample-csharp-url: /csharp/texts/stopTextBroadcast.cs
      x-sample-php-url: /php/texts/stopTextBroadcast.php
      x-sample-js-url: /js/texts/stopTextBroadcast.js
      x-sample-python-url: /python/texts/stopTextBroadcast.py
      x-sample-go-url: /go/texts/stopTextBroadcast.go
      x-sample-description-url: /description/texts/stopTextBroadcast.md
  /texts/broadcasts/{id}/texts:
    get:
      tags:
      - texts
      summary: Find texts in a text broadcast
      description: This endpoint will enable the user to page through all of the texts
        for a particular text broadcast campaign
      operationId: getTextBroadcastTexts
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: batchId
        in: query
        description: ~
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getTextBroadcastTexts.sh
      x-sample-curl-response-url: /curl/texts/getTextBroadcastTexts.json
      x-sample-java-url: /java/texts/getTextBroadcastTexts.java
      x-sample-csharp-url: /csharp/texts/getTextBroadcastTexts.cs
      x-sample-php-url: /php/texts/getTextBroadcastTexts.php
      x-sample-js-url: /js/texts/getTextBroadcastTexts.js
      x-sample-python-url: /python/texts/getTextBroadcastTexts.py
      x-sample-go-url: /go/texts/getTextBroadcastTexts.go
      x-sample-description-url: /description/texts/getTextBroadcastTexts.md
  /texts/broadcasts/{id}/toggleRecipientsStatus:
    post:
      tags:
      - texts
      summary: Disable/enable undialed recipients in broadcast
      description: This operation lets the user to disable/enable undialed contacts
        in created broadcast
      operationId: toggleTextBroadcastRecipientsStatus
      parameters:
      - name: id
        in: path
        description: An id of a text broadcast
        required: true
        schema:
          type: integer
          format: int64
      - name: enable
        in: query
        description: Flag which indicate what to do with texts (true will enable texts
          in DISABLED status and vice versa)
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of Recipient objects. By recipient we mean either phone
          number or contact id.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Recipient'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/toggleTextBroadcastRecipientsStatus.sh
      x-sample-curl-response-url: /curl/texts/toggleTextBroadcastRecipientsStatus.json
      x-sample-java-url: /java/texts/toggleTextBroadcastRecipientsStatus.java
      x-sample-csharp-url: /csharp/texts/toggleTextBroadcastRecipientsStatus.cs
      x-sample-php-url: /php/texts/toggleTextBroadcastRecipientsStatus.php
      x-sample-js-url: /js/texts/toggleTextBroadcastRecipientsStatus.js
      x-sample-python-url: /python/texts/toggleTextBroadcastRecipientsStatus.py
      x-sample-go-url: /go/texts/toggleTextBroadcastRecipientsStatus.go
      x-sample-description-url: /description/texts/toggleTextBroadcastRecipientsStatus.md
      x-codegen-request-body-name: body
  /texts/{id}:
    get:
      tags:
      - texts
      summary: Find a specific text
      description: Returns a single Text instance for a given text id
      operationId: getText
      parameters:
      - name: id
        in: path
        description: An id of a text
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Text'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/texts/getText.sh
      x-sample-curl-response-url: /curl/texts/getText.json
      x-sample-java-url: /java/texts/getText.java
      x-sample-csharp-url: /csharp/texts/getText.cs
      x-sample-php-url: /php/texts/getText.php
      x-sample-js-url: /js/texts/getText.js
      x-sample-python-url: /python/texts/getText.py
      x-sample-go-url: /go/texts/getText.go
      x-sample-description-url: /description/texts/getText.md
  /webhooks:
    get:
      tags:
      - webhooks
      summary: Find webhooks
      description: Searches all webhooks available for a current user. Searches by
        name, resource, event, callback URL, or whether they are enabled. Returns
        a paged list of Webhooks
      operationId: findWebhooks
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      - name: limit
        in: query
        description: To set the maximum number of records to return in a paged list
          response. The default is 100
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: Offset to the start of a given page. The default is 0. Check
          [pagination](https://developers.callfire.com/docs.html#pagination) page
          for more information about pagination in CallFire API.
        schema:
          type: integer
          format: int32
          default: 0
      - name: name
        in: query
        description: A name of a webhook
        schema:
          type: string
      - name: resource
        in: query
        description: 'A name of a resource, available values: ''CccCampaign'', ''CallBroadcast'',
          ''TextBroadcast'',  ''OutboundCall'', ''OutboundText'', ''InboundCall'',
          ''InboundText'', ''ContactList'''
        schema:
          type: string
      - name: event
        in: query
        description: 'A name of event, available values: ''started'', ''stopped'',
          ''finished'''
        schema:
          type: string
      - name: callback
        in: query
        description: A callback URL
        schema:
          type: string
      - name: enabled
        in: query
        description: Specifies whether webhook is enabled
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookPage'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/findWebhooks.sh
      x-sample-curl-response-url: /curl/webhooks/findWebhooks.json
      x-sample-java-url: /java/webhooks/findWebhooks.java
      x-sample-csharp-url: /csharp/webhooks/findWebhooks.cs
      x-sample-php-url: /php/webhooks/findWebhooks.php
      x-sample-js-url: /js/webhooks/findWebhooks.js
      x-sample-python-url: /python/webhooks/findWebhooks.py
      x-sample-go-url: /go/webhooks/findWebhooks.go
      x-sample-description-url: /description/webhooks/findWebhooks.md
    post:
      tags:
      - webhooks
      summary: Create a webhook
      description: 'Create a Webhook for notification in the CallFire system. Use
        the webhooks API to receive notifications of important CallFire events. Select
        the resource to listen to, and then choose the resource events to receive
        notifications on. When an event triggers, a POST will be made to the callback
        URL with a payload of notification information. Available resources and their
        events include ''CccCampaign'': [''started'', ''stopped'', ''finished''],
        ''CallBroadcast'': [''started'', ''stopped'', ''finished''], ''TextBroadcast'':
        [''started'', ''stopped'', ''finished''], ''OutboundCall'': [''finished''],
        ''InboundCall'': [''finished''], ''OutboundText'': [''finished''], ''InboundText'':
        [''finished''], ''ContactList'': [''validationFinished'', ''validationFailed''],
        ''MonthlyRenewal'': [''failed'', ''finished''], ''LowBalance'': [''failed'',
        ''finished'']. Webhooks support secret token which is used as signing key
        to HmacSHA1 hash of json payload which is returned in ''X-CallFire-Signature''
        header. This header can be used to verify callback POST is coming from CallFire.
        See [security guide](https://developers.callfire.com/security-guide.html)'
      operationId: createWebhook
      requestBody:
        description: A webhook object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: false
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/createWebhook.sh
      x-sample-curl-response-url: /curl/webhooks/createWebhook.json
      x-sample-java-url: /java/webhooks/createWebhook.java
      x-sample-csharp-url: /csharp/webhooks/createWebhook.cs
      x-sample-php-url: /php/webhooks/createWebhook.php
      x-sample-js-url: /js/webhooks/createWebhook.js
      x-sample-python-url: /python/webhooks/createWebhook.py
      x-sample-go-url: /go/webhooks/createWebhook.go
      x-sample-description-url: /description/webhooks/createWebhook.md
      x-codegen-request-body-name: body
  /webhooks/resources:
    get:
      tags:
      - webhooks
      summary: Find webhook resources
      description: 'Searches for webhook resources. Available resources include ''CccCampaign'':
        [''started'', ''stopped'', ''finished''], ''CallBroadcast'': [''started'',
        ''stopped'', ''finished''], ''TextBroadcast'': [''started'', ''stopped'',
        ''finished''], ''OutboundCall'': [''finished''], ''InboundCall'': [''finished''],
        ''OutboundText'': [''finished''], ''InboundText'': [''finished''], ''ContactList'':
        [''validationFinished'', ''validationFailed''], ''MonthlyRenewal'': [''failed'',
        ''finished''], ''LowBalance'': [''failed'', ''finished'']'
      operationId: findWebhookResources
      parameters:
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemListWebhookResource'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/findWebhookResources.sh
      x-sample-curl-response-url: /curl/webhooks/findWebhookResources.json
      x-sample-java-url: /java/webhooks/findWebhookResources.java
      x-sample-csharp-url: /csharp/webhooks/findWebhookResources.cs
      x-sample-php-url: /php/webhooks/findWebhookResources.php
      x-sample-js-url: /js/webhooks/findWebhookResources.js
      x-sample-python-url: /python/webhooks/findWebhookResources.py
      x-sample-go-url: /go/webhooks/findWebhookResources.go
      x-sample-description-url: /description/webhooks/findWebhookResources.md
  /webhooks/resources/{resource}:
    get:
      tags:
      - webhooks
      summary: Find specific webhook resource
      description: Returns information about supported events for a given webhook
        resource
      operationId: getWebhookResource
      parameters:
      - name: resource
        in: path
        description: 'A name of a webhook resource. Available resources include ''CccCampaign'':
          [''started'', ''stopped'', ''finished''], ''CallBroadcast'': [''started'',
          ''stopped'', ''finished''], ''TextBroadcast'': [''started'', ''stopped'',
          ''finished''], ''OutboundCall'': [''finished''], ''InboundCall'': [''finished''],
          ''OutboundText'': [''finished''], ''InboundText'': [''finished''], ''ContactList'':
          [''validationFinished'', ''validationFailed''], ''MonthlyRenewal'': [''failed'',
          ''finished''], ''LowBalance'': [''failed'', ''finished'']'
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResource'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/getWebhookResource.sh
      x-sample-curl-response-url: /curl/webhooks/getWebhookResource.json
      x-sample-java-url: /java/webhooks/getWebhookResource.java
      x-sample-csharp-url: /csharp/webhooks/getWebhookResource.cs
      x-sample-php-url: /php/webhooks/getWebhookResource.php
      x-sample-js-url: /js/webhooks/getWebhookResource.js
      x-sample-python-url: /python/webhooks/getWebhookResource.py
      x-sample-go-url: /go/webhooks/getWebhookResource.go
      x-sample-description-url: /description/webhooks/getWebhookResource.md
  /webhooks/{id}:
    get:
      tags:
      - webhooks
      summary: Find a specific webhook
      description: Returns a single Webhook instance for a given webhook id
      operationId: getWebhook
      parameters:
      - name: id
        in: path
        description: An id of a webhook
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 'Limit fields received in response. E.g. fields: id, name or
          fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response)
          page.'
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/getWebhook.sh
      x-sample-curl-response-url: /curl/webhooks/getWebhook.json
      x-sample-java-url: /java/webhooks/getWebhook.java
      x-sample-csharp-url: /csharp/webhooks/getWebhook.cs
      x-sample-php-url: /php/webhooks/getWebhook.php
      x-sample-js-url: /js/webhooks/getWebhook.js
      x-sample-python-url: /python/webhooks/getWebhook.py
      x-sample-go-url: /go/webhooks/getWebhook.go
      x-sample-description-url: /description/webhooks/getWebhook.md
    put:
      tags:
      - webhooks
      summary: Update a webhook
      description: Updates the information in existing webhook
      operationId: updateWebhook
      parameters:
      - name: id
        in: path
        description: An id of a webhook
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: A webhook object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: false
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/updateWebhook.sh
      x-sample-curl-response-url: /curl/webhooks/updateWebhook.json
      x-sample-java-url: /java/webhooks/updateWebhook.java
      x-sample-csharp-url: /csharp/webhooks/updateWebhook.cs
      x-sample-php-url: /php/webhooks/updateWebhook.php
      x-sample-js-url: /js/webhooks/updateWebhook.js
      x-sample-python-url: /python/webhooks/updateWebhook.py
      x-sample-go-url: /go/webhooks/updateWebhook.go
      x-sample-description-url: /description/webhooks/updateWebhook.md
      x-codegen-request-body-name: body
    delete:
      tags:
      - webhooks
      summary: Delete a webhook
      description: Deletes a webhook instance. Will be removed permanently
      operationId: deleteWebhook
      parameters:
      - name: id
        in: path
        description: An Id of a webhook
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - basicAuth: []
      x-sample-curl-request-url: /curl/webhooks/deleteWebhook.sh
      x-sample-curl-response-url: /curl/webhooks/deleteWebhook.json
      x-sample-java-url: /java/webhooks/deleteWebhook.java
      x-sample-csharp-url: /csharp/webhooks/deleteWebhook.cs
      x-sample-php-url: /php/webhooks/deleteWebhook.php
      x-sample-js-url: /js/webhooks/deleteWebhook.js
      x-sample-python-url: /python/webhooks/deleteWebhook.py
      x-sample-go-url: /go/webhooks/deleteWebhook.go
      x-sample-description-url: /description/webhooks/deleteWebhook.md
components:
  schemas:
    A2pUpgradeLeaseDto:
      type: object
      properties:
        id:
          type: integer
          description: ~
          format: int64
        a2pType:
          type: string
          description: ~
          enum:
          - A2P_REGULAR
          - A2P_LITE
        campaignId:
          type: string
          description: ~
        brandId:
          type: string
          description: ~
        invoiceId:
          type: integer
          description: ~
          format: int64
        prepaidDiscountId:
          type: integer
          description: ~
          format: int64
        canceled:
          type: boolean
          description: ~
        deleted:
          type: boolean
          description: ~
        blocked:
          type: string
          description: ~
          format: date-time
        packaged:
          type: boolean
          description: ~
        nextBilling:
          type: string
          description: ~
          format: date-time
        createdAt:
          type: string
          description: ~
          format: date-time
        updatedAt:
          type: string
          description: ~
          format: date-time
        type:
          type: string
          description: ~
          enum:
          - PLAN
          - EXTRA
        upgradedSmsRateLimit:
          type: integer
          description: ~
          format: int32
        upgradedMmsRateLimit:
          type: integer
          description: ~
          format: int32
        price:
          type: number
          description: ~
      description: ~
    A2pUpgradeLeasePage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/A2pUpgradeLeaseDto'
    Account:
      type: object
      properties:
        soaAccount:
          $ref: '#/components/schemas/Account'
        country:
          type: string
          description: ~
          enum:
          - US
          - CA
        locale:
          $ref: '#/components/schemas/Locale'
        timeZone:
          $ref: '#/components/schemas/TimeZone'
        name:
          type: string
          description: Name associated with an account
        key:
          type: string
          description: ~
        id:
          type: integer
          description: An id of an account
          format: int64
        active:
          type: boolean
          description: ~
        created:
          type: string
          description: ~
          format: date-time
        brand:
          type: string
          description: ~
          enum:
          - EZTEXTING
          - CLUBTEXTING
          - GROUPTEXTING
          - TELLMYCELL
          - EZ
          - CALLFIRE
          - TESLA
        allowedToCreateCampaign:
          type: boolean
          description: ~
        ez:
          type: boolean
          description: ~
        agencyManagedAccounts:
          type: boolean
          description: ~
        dateTimeZone:
          $ref: '#/components/schemas/DateTimeZone'
        defaultNumberId:
          type: integer
          description: ~
          format: int64
        industry:
          type: string
          description: ~
          enum:
          - UNKNOWN
          - ADVERTISING
          - AUTOMOTIVE
          - COLLECTIONS
          - CONSULTING
          - DECLINE
          - EDUCATION
          - EMERGENCY
          - ENTERTAINMENT
          - FINANCE
          - HOSPITALITY
          - HEALTHFITNESS
          - HEALTHCARE
          - INSURANCE
          - LEAD
          - OTHER
          - POLITICAL
          - REAL_ESTATE
          - RETAIL
          - SEARCH_MARKETING
          - TELECOM
        trustLevel:
          type: string
          description: ~
          enum:
          - LOCKED
          - SUSPENDED
          - PROBATION
          - NORMAL
          - TRUSTED
        outboundThreshold:
          type: integer
          description: ~
          format: int32
        textOutboundThreshold:
          type: integer
          description: ~
          format: int32
        countryOrDefault:
          type: string
          description: ~
          enum:
          - US
          - CA
        timeZoneId:
          $ref: '#/components/schemas/ZoneId'
        website:
          type: string
          description: ~
        localTimeZoneRestriction:
          $ref: '#/components/schemas/LocalTimeZoneRestriction'
        startCapable:
          type: boolean
          description: ~
        autoAddDoNotContact:
          type: boolean
          description: ~
        scrub:
          type: boolean
          description: ~
        messageClass:
          type: string
          description: ~
        uiContext:
          type: string
          description: ~
        failedVerificationAttempts:
          type: integer
          description: ~
          format: int32
        sharedShortCodeId:
          type: integer
          description: ~
          format: int64
        sharedShortCodeAllowed:
          type: boolean
          description: ~
        canceled:
          type: boolean
          description: ~
        apiCallLimit:
          type: integer
          description: ~
          format: int32
        defaultNotificationTtlMillis:
          type: integer
          description: ~
          format: int64
        tsrAgreement:
          type: string
          description: ~
          format: date-time
        tsrInitials:
          type: string
          description: ~
        receiverPeriodEnabled:
          type: boolean
          description: ~
        receiverPeriodGlobal:
          type: integer
          description: ~
          format: int32
        receiverPeriodCall:
          type: integer
          description: ~
          format: int32
        receiverPeriodText:
          type: integer
          description: ~
          format: int32
        receiverPeriodTimeUnit:
          type: string
          description: ~
          enum:
          - NANOSECONDS
          - MICROSECONDS
          - MILLISECONDS
          - SECONDS
          - MINUTES
          - HOURS
          - DAYS
        retainOnlyMetadata:
          type: boolean
          description: ~
        maxAgents:
          type: integer
          description: ~
          format: int32
        retainOnlyMetadataLastModified:
          type: string
          description: ~
          format: date-time
        retainOnlyMetadataLastDetailRecordId:
          type: integer
          description: ~
          format: int64
        fromNumberPool:
          type: string
          description: ~
        industryName:
          type: string
          description: ~
        status:
          type: string
          description: ~
          enum:
          - ACTIVE
          - PENDING_CANCELLED
          - CANCELLED
        age:
          $ref: '#/components/schemas/Duration'
        universal:
          type: boolean
          description: ~
      description: Object represents user account in Callfire system
    AddContactListContactsRequest:
      type: object
      properties:
        contacts:
          type: array
          description: A list of new contact objects which need to be added
          items:
            $ref: '#/components/schemas/Contact'
        contactIds:
          type: array
          description: A list of ids of existing contacts in CallFire system
          items:
            type: integer
            format: int64
        contactNumbers:
          type: array
          description: 'A phone number in E.164 format (11-digit). Examples: 12132000384'
          items:
            type: string
        contactNumbersField:
          type: string
          description: A type of phone number (homePhone, workPhone, mobilePhone).
            This parameter works together with contactNumbers and specifies which
            types of numbers are included to a list
        useCustomFields:
          type: boolean
          description: A flag to indicate how to define property names for contacts.
            If true, uses the field and property names exactly as defined. If false
            will assign custom properties and fields to A, B, C, etc
      description: Request object for adding new contacts to an existing contact list
    AddDoNotContactRequest:
      type: object
      properties:
        source:
          type: string
          description: 'A list of new contact objects which need to be added. Default
            value: Api V2'
        call:
          type: boolean
          description: 'If set to true add all given numbers to Do-Not-Call list.
            Default value: true'
        text:
          type: boolean
          description: 'If set to true add all given numbers to Do-Not-Text list.
            Default value: true'
        inboundCall:
          type: boolean
          description: ~
        inboundText:
          type: boolean
          description: ~
        numbers:
          type: array
          description: 'A list of phone numbers in E.164 format (11-digit), example:
            12132000384, 14142777322'
          items:
            type: string
      description: Request object for adding new Do-Not-Contact records to account.
    ApiCredential:
      type: object
      properties:
        id:
          type: integer
          description: An id of an API credential
          format: int64
        name:
          type: string
          description: A name of an API credential
        username:
          type: string
          description: Username for credential
          readOnly: true
        password:
          type: string
          description: A password for credential
          readOnly: true
        enabled:
          type: boolean
          description: Is credential enabled
      description: An object represents API user in CallFire system. Use /me/api/credentials
        endpoint to manage API users on your account
    ApiCredentialPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ApiCredential'
    ApiExceptionHandler:
      type: object
      description: ~
    ApiValidator:
      type: object
      properties:
        exceptionHandler:
          $ref: '#/components/schemas/ApiExceptionHandler'
      description: ~
    AuthController:
      type: object
      properties:
        authToken:
          $ref: '#/components/schemas/AuthToken'
        authBrand:
          type: string
          description: ~
          enum:
          - EZTEXTING
          - CLUBTEXTING
          - GROUPTEXTING
          - TELLMYCELL
          - EZ
          - CALLFIRE
          - TESLA
        admin:
          type: boolean
          description: ~
      description: ~
    AuthToken:
      type: object
      properties:
        sessionId:
          type: string
          description: ~
        userId:
          type: integer
          description: ~
          format: int64
        accountId:
          type: integer
          description: ~
          format: int64
        brand:
          type: string
          description: ~
          enum:
          - EZTEXTING
          - CLUBTEXTING
          - GROUPTEXTING
          - TELLMYCELL
          - EZ
          - CALLFIRE
          - TESLA
        adminToken:
          $ref: '#/components/schemas/AuthToken'
        session:
          $ref: '#/components/schemas/OAuthSession'
        ezSpaClient:
          type: boolean
          description: ~
        adminClient:
          type: boolean
          description: ~
      description: ~
    Batch:
      type: object
      properties:
        id:
          type: integer
          description: A id of a batch
          format: int64
        name:
          type: string
          description: A batch name
        status:
          type: string
          description: A status of batch (NEW, VALIDATING, ERRORS, SOURCE_ERROR, ACTIVE).
            NEW - batch is queued for validation; VALIDATING - batch is currently
            validating; ERRORS - batch is processed, some validation errors occurred;
            SOURCE_ERROR - if contact source is contact list in CallFire system and
            it has an error; ACTIVE - batch is processed and ready
          enum:
          - NEW
          - VALIDATING
          - ERRORS
          - SOURCE_ERROR
          - ACTIVE
        broadcastId:
          type: integer
          description: An id of broadcast which batch belongs to
          format: int64
        created:
          type: integer
          description: 'A date and time when batch was created, formatted in unix
            time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37
            GMT'
          format: int64
          readOnly: true
        size:
          type: integer
          description: A total number of contacts in batch
          format: int32
          readOnly: true
        remaining:
          type: integer
          description: A number of contacts remaining undialed/untexted
          format: int32
          readOnly: true
        enabled:
          type: boolean
          description: An enabled batch. If batch is disabled its contacts remain
            undialed/untexted
      description: A batch represents a group of contacts which can be dialed or texted
        via call/text broadcast
    BatchPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Batch'
    BatchRequest:
      type: object
      properties:
        name:
          type: string
          description: A name of batch
        contactListId:
          type: integer
          description: An id of existing contact list
          format: int64
        recipients:
          type: array
          description: A list of Recipient objects. For each recipient you can set
            its phone number or existing contact id to use contact which already exists
            in account
          items:
            $ref: '#/components/schemas/Recipient'
        scrubDuplicates:
          type: boolean
          description: Removes duplicate recipients from batch if true
      description: Request object is used for adding new batch to an existing broadcast
    BillingPlanUsage:
      type: object
      properties:
        intervalStart:
          type: integer
          description: 'Start of usage period formatted in unix time milliseconds.
            Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        intervalEnd:
          type: integer
          description: 'End of usage period formatted in unix time milliseconds. Example:
            1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        remainingPlanCredits:
          type: number
          description: Remaining credits are rounded to nearest whole value associated
            with a plan
          readOnly: true
        remainingPayAsYouGoCredits:
          type: number
          description: Remaining pay as you go credits are rounded to nearest whole
            value
          readOnly: true
        totalRemainingCredits:
          type: number
          description: Total number of remaining credits (remainingPlanCredits + remainingPayAsYouGoCredits)
          readOnly: true
      description: Contains statistics of billing plan usage
    Call:
      type: object
      properties:
        id:
          type: integer
          description: An id of  an action
          format: int64
        fromNumber:
          type: string
          description: A sender's phone number in E.164 (11-digit) format
        toNumber:
          type: string
          description: A recipient's phone number in E.164 (11-digit) format
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Map of user-defined string attributes associated with an action
        state:
          type: string
          description: State of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED,
            DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
          readOnly: true
          enum:
          - READY
          - SELECTED
          - CALLBACK
          - FINISHED
          - DISABLED
          - SKIPPED
          - DNC
          - DUP
          - INVALID
          - TIMEOUT
          - PERIOD_LIMIT
        campaignId:
          type: integer
          description: An id of broadcast associated with an action if call is sent
            as part of call broadcast
          format: int64
          readOnly: true
        batchId:
          type: integer
          description: An id of contact batch associated with an action
          format: int64
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
        inbound:
          type: boolean
          description: Is action inbound
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT '
          format: int64
          readOnly: true
        modified:
          type: integer
          description: 'The time when the given resource was modified, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT '
          format: int64
          readOnly: true
        labels:
          uniqueItems: true
          type: array
          description: Labels associated with action or broadcast for this action
          items:
            type: string
        finalCallResult:
          type: string
          description: Result of a call (LA, AM, BUSY, DNC, XFER, NO_ANS, XFER_LEG,
            INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED, SD, POSTPONED,
            ABANDONED, SKIPPED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
          readOnly: true
          enum:
          - LA
          - AM
          - BUSY
          - DNC
          - XFER
          - NO_ANS
          - XFER_LEG
          - INTERNAL_ERROR
          - CARRIER_ERROR
          - CARRIER_TEMP_ERROR
          - UNDIALED
          - SD
          - POSTPONED
          - ABANDONED
          - SKIPPED
        records:
          type: array
          description: List of call records, each record contains call details like
            originate time, duration, cost, notes made by agents. A single contact
            may have a multiple phone numbers. In this case if given call was sent
            as a part of broadcast with configured retry logic then each call record
            will contain details about attempted phone number
          readOnly: true
          items:
            $ref: '#/components/schemas/CallRecord'
        agentCall:
          type: boolean
          description: An internal call to an agent
          readOnly: true
        notes:
          type: array
          description: Notes of call added by an agent
          items:
            $ref: '#/components/schemas/Note'
      description: Represents a call action sent or received by CallFire platform
    CallBroadcast:
      type: object
      properties:
        id:
          type: integer
          description: A unique id of broadcast (readonly)
          format: int64
        name:
          type: string
          description: A name of a broadcast
        status:
          type: string
          description: A status of a broadcast (read only). SETUP - campaign isn't
            configured yet; START_PENDING - waiting for contact batch population;
            RUNNING - campaign is running; STOPPED - campaign is stopped; FINISHED
            - campaign is finished; ARCHIVED - campaign was archived
          readOnly: true
          enum:
          - TEST
          - SETUP
          - START_PENDING
          - RUNNING
          - SCHEDULED
          - STOPPED
          - SUSPENDED
          - FINISHED
          - ARCHIVED
          - VALIDATING_START
          - VALIDATING_EMAIL
          - BLOCKED_SUSPICIOUS
          - DECLINED
          - APPROVED
        lastModified:
          type: integer
          description: 'The time when a given resource was updated, formatted in unix
            time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan
            1985 14:03:37 GMT '
          format: int64
          readOnly: true
        fromNumber:
          type: string
          description: 'Phone number in E.164 format (11-digit) or short code for
            text. Example: 12132000384, 67076'
        localTimeRestriction:
          $ref: '#/components/schemas/LocalTimeRestriction'
        schedules:
          type: array
          description: A list of schedule objects which specifies a range of time
            when broadcast should be started and stopped. Supports the scheduling
            per day of week
          items:
            $ref: '#/components/schemas/Schedule'
        maxActive:
          type: integer
          description: Sets a maximum number of calls to be dialed by CallFire at
            once
          format: int32
        labels:
          uniqueItems: true
          type: array
          description: Labels of a broadcast
          items:
            type: string
        resumeNextDay:
          type: boolean
          description: If true resumes the unfinished campaign to the next day
        retryConfig:
          $ref: '#/components/schemas/RetryConfig'
        recipients:
          type: array
          description: Recipients of a call broadcast, can be either existing contacts
            or a new ones
          items:
            $ref: '#/components/schemas/Recipient'
        dialplanXml:
          type: string
          description: IVR xml is a document which describes the dialplan to setup
            the IVR broadcast
        sounds:
          $ref: '#/components/schemas/CallBroadcastSounds'
        answeringMachineConfig:
          type: string
          description: 'Specifies which action should be taken if answering machine
            was detected, default value: AM_AND_LIVE. Available values: AM_ONLY -
            run AMD (Answering Machine Detection), hang up if LA (Live Answer); AM_AND_LIVE
            - run AMD, play separate live vs. machine sound; LIVE_WITH_AMD, run AMD,
            hang up if machine answers; LIVE_IMMEDIATE - no AMD, play live sound immediately'
          enum:
          - AM_ONLY
          - AM_AND_LIVE
          - LIVE_WITH_AMD
          - LIVE_IMMEDIATE
        maxActiveTransfers:
          type: integer
          description: A maximum number of active transfers
          format: int32
      description: Call broadcast can be used to send out a voice message to a group
        of numbers. It supports IVR scripting, scheduling, retry logic, playing pre-recorded
        sounds, answering machine detection
    CallBroadcastPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/CallBroadcast'
    CallBroadcastSounds:
      type: object
      properties:
        liveSoundText:
          type: string
          description: Text to be used to turned into a sound. This text will be played
            when the phone is answered
        liveSoundTextVoice:
          type: string
          description: The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
            for a live sound
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
        liveSoundId:
          type: integer
          description: An id of sound file to play if phone is answered
          format: int64
        machineSoundText:
          type: string
          description: Text to be turned into a sound. This text will be played when
            answering machine is detected
        machineSoundTextVoice:
          type: string
          description: The voice to be used (MALE1, FEMALE1 , FEMALE2, SPANISH1, FRENCHCANADIAN1)
            for a machine sound
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
        machineSoundId:
          type: integer
          description: An id of a sound file to play if answering machine is detected
          format: int64
        transferSoundText:
          type: string
          description: Text to be turned into a sound. This text will be played when
            the transfer digit is played
        transferSoundTextVoice:
          type: string
          description: The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
            for a sound transfer
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
        transferSoundId:
          type: integer
          description: An id of a file to play if call is transferred
          format: int64
        transferDigit:
          type: string
          description: Digit pressed to initiate a transfer
        transferNumber:
          type: string
          description: 'Phone number in E.164 format (11-digit) to transfer call to.  Example:
            12132000384, 67076'
        dncSoundText:
          type: string
          description: Text to be turned into sound, plays to notify that Do Not Call
            digit has been pressed and inform your contact of their placement on the
            Do Not Call list
        dncSoundTextVoice:
          type: string
          description: The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
        dncSoundId:
          type: integer
          description: An id of sound file to play when recipient decided to opt out
            and pressed DNC digit
          format: int64
        dncDigit:
          type: string
          description: Digit pressed to place contact in DNC list
      description: A set of sounds assigned to a voice broadcast to play according
        to an answering machine configuration. You can add the existing sounds from
        the account's sound library or to provide a text which will be converted into
        a speech. There are four sound options available for a Voice Broadcast campaign
    CallBroadcastStats:
      type: object
      properties:
        totalOutboundCount:
          type: integer
          description: ~
          format: int32
        remainingOutboundCount:
          type: integer
          description: ~
          format: int32
        billedAmount:
          type: number
          description: ~
        callsAttempted:
          type: integer
          description: ~
          format: int32
        callsPlaced:
          type: integer
          description: ~
          format: int32
        callsDuration:
          type: integer
          description: ~
          format: int32
        billedDuration:
          type: integer
          description: ~
          format: int32
        responseRatePercent:
          type: integer
          description: ~
          format: int32
        callsRemaining:
          type: integer
          description: ~
          format: int32
        callsAwaitingRedial:
          type: integer
          description: ~
          format: int32
        callsLiveAnswer:
          type: integer
          description: ~
          format: int32
        totalCount:
          type: integer
          description: ~
          format: int32
        answeringMachineCount:
          type: integer
          description: ~
          format: int32
        busyCount:
          type: integer
          description: ~
          format: int32
        dialedCount:
          type: integer
          description: ~
          format: int32
        doNotCallCount:
          type: integer
          description: ~
          format: int32
        errorCount:
          type: integer
          description: ~
          format: int32
        liveCount:
          type: integer
          description: ~
          format: int32
        miscCount:
          type: integer
          description: ~
          format: int32
        noAnswerCount:
          type: integer
          description: ~
          format: int32
        transferCount:
          type: integer
          description: ~
          format: int32
      description: ~
    CallCreateSound:
      type: object
      properties:
        name:
          type: string
          description: Name of a sound to create
        toNumber:
          type: string
          description: 'Phone number in E.164 11-digit format to call to record a
            sound.  Example: 12132000384'
      description: Request object is used for creating sound via a phone call. This
        sound will appear in account's sound library
    CallList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Call'
    CallPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Call'
    CallRecipient:
      type: object
      properties:
        phoneNumber:
          type: string
          description: 'Recipient''s phone number in E.164 format (11-digit) or short
            code. Example: 12132000384'
        fromNumber:
          type: string
          description: ~
        contactId:
          type: integer
          description: An id of existing contact used as recipient
          format: int64
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Map of user-defined string attributes associated with recipient
        dialplanXml:
          type: string
          description: An IVR xml document describing dialplan to setup an IVR broadcast.
            If dialplan is set there is no need to set live, machine and transfer
            sounds (or vice versa)
        liveMessage:
          type: string
          description: Text to be turned into a sound, this text will be played when
            the phone is answered
        liveMessageSoundId:
          type: integer
          description: An id of a sound file to play if phone is answered
          format: int64
        machineMessage:
          type: string
          description: Text to be used to turn into sound, this text will be played
            when answering machine is detected
        machineMessageSoundId:
          type: integer
          description: An id of a sound file to play if answering machine is detected
          format: int64
        transferMessage:
          type: string
          description: Text to be turned into sound, this text will be played when
            the transfer digit is played
        transferMessageSoundId:
          type: integer
          description: An id of a sound file to play if call is transferred
          format: int64
        transferDigit:
          type: string
          description: A digit pressed to initiate the transfer
        transferNumber:
          type: string
          description: 'Phone number in E.164 format (11-digit) to transfer the call
            to. Example: 12132000384'
        voice:
          type: string
          description: The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
      description: Recipient of a campaign action. Can be a phone number, contact,
        or contact list with attributes added to action. It is required to specify
        one of this values
    CallRecord:
      type: object
      properties:
        id:
          type: integer
          description: An id of a call record
          format: int64
        toNumber:
          type: string
          description: 'A phone number to which a call was addressed. Phone number
            in E.164 format (11-digit). Example: 12132000384'
          readOnly: true
        billedAmount:
          type: number
          description: A cost of the call
          format: float
          readOnly: true
        finishTime:
          type: integer
          description: 'Timestamp when call was finished, formatted in unix time milliseconds
            (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        switchId:
          type: string
          description: ~
          readOnly: true
        callerName:
          type: string
          description: ~
          readOnly: true
        labels:
          uniqueItems: true
          type: array
          description: Labels associated with a call action
          readOnly: true
          items:
            type: string
        result:
          type: string
          description: ~
          readOnly: true
          enum:
          - LA
          - AM
          - BUSY
          - DNC
          - XFER
          - NO_ANS
          - XFER_LEG
          - INTERNAL_ERROR
          - CARRIER_ERROR
          - CARRIER_TEMP_ERROR
          - UNDIALED
          - SD
          - POSTPONED
          - ABANDONED
          - SKIPPED
        originateTime:
          type: integer
          description: 'A date and time (timestamp) when call was originated by CallFire
            platform and went to downstream provider, formatted in unix time milliseconds
            (read only). Example: 1473781817000 '
          format: int64
          readOnly: true
        answerTime:
          type: integer
          description: 'Timestamp when call was answered, formatted in unix time milliseconds
            (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        duration:
          type: integer
          description: Duration of the call in seconds
          format: int64
          readOnly: true
        notes:
          type: array
          description: Notes of call added by agent
          items:
            $ref: '#/components/schemas/Note'
        recordings:
          type: array
          description: A list of voice recordings of the call
          items:
            $ref: '#/components/schemas/CallRecording'
        questionResponses:
          type: array
          description: Notes of call added by an agent
          items:
            $ref: '#/components/schemas/QuestionResponse'
      description: Represents a call sent to a contact's number
    CallRecording:
      type: object
      properties:
        id:
          type: integer
          description: An id of a call recording
          format: int64
        callId:
          type: integer
          description: An id of a call action
          format: int64
        campaignId:
          type: integer
          description: Contains broadcast id if call was sent as a part of voice broadcast
          format: int64
        name:
          type: string
          description: A name of a recording
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT'
          format: int64
        lengthInBytes:
          type: integer
          description: A size of a recording file in bytes
          format: int64
        lengthInSeconds:
          type: integer
          description: Duration of a recording in seconds
          format: int32
        hash:
          type: string
          description: A unique string hash identifier of a recording
        mp3Url:
          type: string
          description: A public URL of a call recording
        state:
          type: string
          description: 'Current state of a recording, available values: RECORDING
            - recording is in progress, READY - recording is ready, ERROR - error
            has occurred and recording can be broken'
          enum:
          - RECORDING
          - READY
          - ERROR
      description: Represents a recording of a voice call
    CallRecordingList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/CallRecording'
    CallTrackingConfig:
      type: object
      properties:
        transferNumbers:
          type: array
          description: 'List of phone numbers in E.164 format (11-digit) are used
            for transfer. Example: 12132000384'
          items:
            type: string
        screen:
          type: boolean
          description: Screens the incoming calls
        recorded:
          type: boolean
          description: Records all inbound calls
        voicemail:
          type: boolean
          description: Enables voicemail if call is not transferred
        introSoundId:
          type: integer
          description: An id of sound file, played if call is answered
          format: int64
        whisperSoundId:
          type: integer
          description: An id of sound file, played if call is screened
          format: int64
        voicemailSoundId:
          type: integer
          description: An id of sound file, played if voicemail is enabled and a call
            isn't transferred
          format: int64
        failedTransferSoundId:
          type: integer
          description: An id of sound file, played if caller can not be connected
            to transfer number for any reason
          format: int64
        weeklySchedule:
          $ref: '#/components/schemas/WeeklySchedule'
        googleAnalytics:
          $ref: '#/components/schemas/GoogleAnalytics'
      description: Call tracking configuration allows you track incoming calls, analyze,
        respond to customers using sms or voice replies. For more information see
        [call tracking page](https://www.callfire.com/products/call-tracking)
    CallerId:
      type: object
      properties:
        phoneNumber:
          type: string
          description: ~
      description: ~
    CallerIdList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/CallerId'
    CallerIdVerificationRequest:
      type: object
      properties:
        verificationCode:
          type: string
          description: The code used to verify a caller id number
      description: Request which is used to verify a new caller id number
    CampaignSound:
      type: object
      properties:
        id:
          type: integer
          description: An id of a sound file
          format: int64
        name:
          type: string
          description: A name of a sound file
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        lengthInSeconds:
          type: integer
          description: Length of a sound in seconds
          format: int32
          readOnly: true
        status:
          type: string
          description: 'A current status of a sound, available values: UPLOAD - uploading
            is in progress, RECORDING - recording of sound is in progress, ACTIVE
            - sound is ready, FAILED, ARCHIVED - sound was archived, SCRUBBED - sound
            was scrubbed '
          readOnly: true
          enum:
          - UPLOAD
          - RECORDING
          - ACTIVE
          - ACTIVE_SYSTEM
          - FAILED
          - ARCHIVED
          - SCRUBBED
        duplicate:
          type: boolean
          description: True if the same sound file exists in a sound library of account
          readOnly: true
      description: Represents a sound recording from account's sound library which
        can be used in different API operations
    CampaignSoundPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/CampaignSound'
    Contact:
      type: object
      properties:
        id:
          type: integer
          description: An id of a contact
          format: int64
        firstName:
          type: string
          description: A first name of a contact
        lastName:
          type: string
          description: A last name of a contact
        zipcode:
          type: string
          description: A Zip code of a contact
        homePhone:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        workPhone:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        mobilePhone:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        extraPhone1:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        extraPhone2:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        extraPhone3:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        externalId:
          type: string
          description: An external id of a contact for syncing with external sources
        externalSystem:
          type: string
          description: External system that external id refers to
        properties:
          type: object
          additionalProperties:
            type: string
          description: Map of user-defined string properties for contact
        deleted:
          type: boolean
          description: A deleted contact, deleted contacts are hidden from search
            results
      description: Represents a contact in CallFire platform. Contains info about
        the people you want to contact. It allows you to store a user-defined properties
        for each contact
    ContactHistory:
      type: object
      properties:
        id:
          type: integer
          description: An id of a contact
          format: int64
        calls:
          type: array
          description: List of Call objects addressed to a given contact
          items:
            $ref: '#/components/schemas/Call'
        texts:
          type: array
          description: List of Text objects addressed to a given contact
          items:
            $ref: '#/components/schemas/Text'
      description: Contains history of all calls and texts addressed to a given contact
    ContactList:
      type: object
      properties:
        id:
          type: integer
          description: An Id of a contact list
          format: int64
        name:
          type: string
          description: A name of a contact list
        size:
          type: integer
          description: A number of contacts in a contact list
          format: int32
        created:
          type: integer
          description: 'A time when a given resource was created, formatted in unix
            time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan
            1985 14:03:37 GMT'
          format: int64
        status:
          type: string
          description: 'A current status of a contact list, available values: ACTIVE
            - contact list is ready, VALIDATING - contact list validation is in progress,
            IMPORTING - importing is in progress, IMPORT_FAILED - in case of errors
            occurred during the importing, ERRORS - contact list has validation errors,
            DELETED - contact list was deleted, PARSE_FAILED - contacts cannot be
            parsed, COLUMN_TOO_LARGE - if size of phone number or any other column
            exceeds 255 characters'
          enum:
          - ACTIVE
          - VALIDATING
          - IMPORTING
          - IMPORT_FAILED
          - ERRORS
          - DELETED
          - PARSE_FAILED
          - COLUMN_TOO_LARGE
      description: Represents a contact list in CallFire system
    ContactListPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ContactList'
    ContactPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Contact'
    CreateContactListRequest:
      type: object
      properties:
        contacts:
          type: array
          description: A list of new contact objects to be added
          items:
            $ref: '#/components/schemas/Contact'
        contactIds:
          type: array
          description: A list of ids of existing contacts in CallFire system
          items:
            type: integer
            format: int64
        contactNumbers:
          type: array
          description: 'List of numbers in E.164 format (11-digit). Example: 12132000384'
          items:
            type: string
        contactNumbersField:
          type: string
          description: A type of a phone number (homePhone, workPhone, mobilePhone).
            This parameter is used with contactNumbers and specifies which types of
            phone numbers are included to a contact list
        useCustomFields:
          type: boolean
          description: A flag to indicate how to define property names for contacts.
            If true, uses the field and property names exactly as defined. If false
            will assign custom properties and fields to A, B, C, etc
        name:
          type: string
          description: A name of a contact list
      description: A request object is used to create a contact list from one of available
        contact sources
    CreditUsage:
      type: object
      properties:
        intervalBegin:
          type: integer
          description: 'Start of usage period formatted in unix time milliseconds.
            Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        intervalEnd:
          type: integer
          description: 'End of usage period formatted in unix time milliseconds. Example:
            1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        callsDurationMinutes:
          type: integer
          description: Sum of calls duration rounded to nearest whole minute
          format: int32
          readOnly: true
        textsSent:
          type: integer
          description: Number of texts sent
          format: int32
          readOnly: true
        creditsUsed:
          type: number
          description: Total credits used calls and texts.
          readOnly: true
      description: Contains statistics of billing plan usage
    DateTimeZone:
      type: object
      properties:
        id:
          type: string
          description: ~
        fixed:
          type: boolean
          description: ~
      description: ~
    DeliveryReport:
      type: object
      properties:
        messageText:
          type: string
          description: ~
        fromNumber:
          type: string
          description: ~
        toNumber:
          type: string
          description: ~
        campaignId:
          type: integer
          description: ~
          format: int64
        deliveryCategory:
          type: string
          description: ~
          enum:
          - NO_DATA
          - OPTED_OUT
          - BOUNCED
          - NO_CREDITS
          - DELIVERED
        deliveryState:
          type: string
          description: ~
          enum:
          - DELIVERED
          - UNSENT_OPTED_OUT_GLOBAL
          - UNSENT_OPTED_OUT_LOCAL
          - UNSENT_NO_CREDITS
          - GATEWAY_REJECTED
          - CARRIER_REJECTED
          - NOT_DELIVERED
          - UNSENT_INVALID_NUMBER
          - UNSENT_BAD_DATA
          - UNSENT_FORCE_STOPPED
          - UNSENT_PERIOD_LIMIT
          - UNSENT_INTERNATIONAL
          - UNSENT_INVALID_TIMEZONE_OR_DNC
          - UNSENT_ALREADY_SCRUBBED
          - UNSENT_SYSTEM_ERROR
          - UNSENT_NO_WIRELESS_CARRIER
          - UNSENT_MESSAGE_TOO_LONG
          - UNSENT_MESSAGE_BLOCKED
          - UNSENT_QUEUE_LIMIT_REACHED
          - UNSENT_TOKEN_LIMIT_REACHED
          - UNSENT_TIME_LIMIT_REACHED
          - UNSENT_SCHEDULER_CAPACITY_EXCEEDED
          - SPAM_DETECTED
          - UNSENT_NO_GATEWAY
          - ORIGINATED
          - SUBMITTED
          - FORWARDED
          - NOT_GIVEN
          - UNKNOWN
          - RETRY_MMS_AS_SMS
          - QUEUED
          - QUEUED_TRANSCODE
          - ORIGINAL
          - DUPE
          - TRUNCATED
          - REQUEUED_RATE_LIMITED
          - BUFFERED
          - RATE_LIMIT_EXCEEDED
          - SERVICE_UNAVAILABLE
          - SEND_MMS_AS_SMS
          - REQUEUED_RECOVERABLE_ERROR
          - SEND_WITH_ADDITIONAL_SPID
        carrier:
          type: string
          description: ~
        updated:
          type: string
          description: ~
          format: date-time
      description: ~
    DncListDto:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DoNotContact'
    DoNotContact:
      type: object
      properties:
        number:
          type: string
          description: 'A single DNC number in E.164 format (11-digit). Example: 12132000384'
        call:
          type: boolean
          description: A number on Do-Not-Call list
        text:
          type: boolean
          description: A number on Do-Not-Text list
        inboundCall:
          type: boolean
          description: ~
        inboundText:
          type: boolean
          description: ~
        source:
          type: string
          description: The name of DNC source (can be the name of DNC list that user
            uploads to CallFire)
        campaignId:
          type: integer
          description: An Id of a campaign which was used to send a message to DNC
            number
          format: int64
          readOnly: true
        created:
          type: integer
          description: 'A time when a given resource was created, formatted in unix
            time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan
            1985 14:03:37 GMT'
          format: int64
          readOnly: true
      description: Represents an opted out contact
    DoNotContactPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DoNotContact'
    Duration:
      type: object
      properties:
        standardDays:
          type: integer
          description: ~
          format: int64
        standardHours:
          type: integer
          description: ~
          format: int64
        standardMinutes:
          type: integer
          description: ~
          format: int64
        standardSeconds:
          type: integer
          description: ~
          format: int64
        millis:
          type: integer
          description: ~
          format: int64
      description: ~
    ErrorResponse:
      type: object
      properties:
        httpStatusCode:
          type: integer
          description: ~
          format: int32
        internalCode:
          type: string
          description: ~
        message:
          type: string
          description: ~
        developerMessage:
          type: string
          description: ~
        helpLink:
          type: string
          description: ~
      description: Error response containing error info
    GoogleAnalytics:
      type: object
      properties:
        domain:
          type: string
          description: A domain name for analytics
        googleAccountId:
          type: string
          description: 'An id of a Google account, example: UA-XXXXX-2X'
        category:
          type: string
          description: 'A category to group. For example: Sales or Support'
      description: Google Analytics for Call Tracking
    InputStream:
      type: object
      description: ~
    ItemList:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            type: object
            properties: {}
      description: ~
    ItemListUniversalDoNotContact:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/UniversalDoNotContact'
      description: ~
    ItemListWebhookResource:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/WebhookResource'
      description: ~
    IvrInboundConfig:
      type: object
      properties:
        dialplanXml:
          type: string
          description: ~
      description: ~
    Keyword:
      type: object
      properties:
        shortCode:
          type: string
          description: ~
        keyword:
          type: string
          description: ~
      description: ~
    KeywordConfig:
      type: object
      properties:
        textInboundConfig:
          $ref: '#/components/schemas/TextInboundConfig'
        keyword:
          type: string
          description: ~
      description: ~
    KeywordLease:
      type: object
      properties:
        shortCode:
          type: string
          description: 'A short code assigned to keyword. Example: 67076'
        keyword:
          type: string
          description: A text used as a keyword
        leaseBegin:
          type: integer
          description: 'A time of a lease timestamp, formatted in unix time milliseconds
            (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT'
          format: int64
        leaseEnd:
          type: integer
          description: 'A date and time when the keyword lease is finishes. Timestamp,
            formatted in unix time milliseconds (read only). Example: 1473781817000'
          format: int64
        autoRenew:
          type: boolean
          description: Enables the auto renewal of a keyword lease at the end of each
            billing cycle
        doubleOptInEnabled:
          type: boolean
          description: Enable/disable double opt in feature
        optInConfirmationMessage:
          type: string
          description: Opt in confirmation message
        contactListId:
          type: integer
          description: Existing contact list ID
          format: int64
        status:
          type: string
          description: 'A lease status. Available values: PENDING, ACTIVE, RELEASED,
            UNAVAILABLE'
          enum:
          - PENDING
          - ACTIVE
          - RELEASED
          - UNAVAILABLE
        labels:
          type: array
          description: ~
          items:
            type: string
      description: Represents a lease object for a given keyword
    KeywordLeasePage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/KeywordLease'
    KeywordList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Keyword'
    KeywordPurchaseRequest:
      type: object
      properties:
        keywords:
          type: array
          description: A list of keywords
          items:
            type: string
      description: Request object is used to purchase keywords
    LocalDate:
      type: object
      properties:
        year:
          type: integer
          description: 'A year. Example: 2020'
          format: int32
        month:
          type: integer
          description: 'A month of the year. Available values: 1-12'
          format: int32
        day:
          type: integer
          description: 'A day of the month. Available values: 1-31'
          format: int32
      description: Represents a date object (without time part)
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          description: 'An hour of the day. Available values: 0-23'
          format: int32
        minute:
          type: integer
          description: 'The minutes. Available values: 0-59'
          format: int32
        second:
          type: integer
          description: 'The seconds.  Available values: 0-59'
          format: int32
        nano:
          type: integer
          description: ~
          format: int32
      description: Represents a time part of a given date
    LocalTimeRestriction:
      type: object
      properties:
        enabled:
          type: boolean
          description: A restriction enabled
        beginHour:
          type: integer
          description: An hour of restriction start
          format: int32
        beginMinute:
          type: integer
          description: The minutes to start a restriction
          format: int32
        endHour:
          type: integer
          description: An hour of restriction end
          format: int32
        endMinute:
          type: integer
          description: The minutes of restriction end
          format: int32
      description: Represents a range of time during which CallFire will send a call
        or text to recipients. Timeframe uses the local timezone of recipient's number
    LocalTimeZoneRestriction:
      type: object
      properties:
        startTime:
          type: string
          description: ~
          format: date-time
        stopTime:
          type: string
          description: ~
          format: date-time
        enabled:
          type: boolean
          description: ~
      description: ~
    Locale:
      type: object
      properties:
        displayName:
          type: string
          description: ~
        script:
          type: string
          description: ~
        country:
          type: string
          description: ~
        variant:
          type: string
          description: ~
        extensionKeys:
          uniqueItems: true
          type: array
          description: ~
          items:
            type: string
        unicodeLocaleAttributes:
          uniqueItems: true
          type: array
          description: ~
          items:
            type: string
        unicodeLocaleKeys:
          uniqueItems: true
          type: array
          description: ~
          items:
            type: string
        iso3Language:
          type: string
          description: ~
        iso3Country:
          type: string
          description: ~
        displayLanguage:
          type: string
          description: ~
        displayScript:
          type: string
          description: ~
        displayCountry:
          type: string
          description: ~
        displayVariant:
          type: string
          description: ~
        language:
          type: string
          description: ~
      description: ~
    ManagedAccountDto:
      type: object
      properties:
        id:
          type: string
          description: ~
        accountHolderId:
          type: string
          description: ~
        email:
          type: string
          description: ~
        name:
          type: string
          description: ~
        state:
          type: string
          description: ~
          enum:
          - ACTIVE
          - PENDING
          - PENDING_VERIFICATION
          - IN_REVIEW
        lastLogin:
          type: string
          description: ~
          format: date-time
        credits:
          type: number
          description: ~
      description: ~
    ManagedAccountsPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ManagedAccountDto'
    Media:
      type: object
      properties:
        id:
          type: integer
          description: An id of a media file
          format: int64
        accountId:
          type: integer
          description: ~
          format: int64
        name:
          type: string
          description: A name of a media file
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000 '
          format: int64
        lengthInBytes:
          type: integer
          description: A size of a media file in bytes
          format: int64
        mediaType:
          type: string
          description: 'A MIME type of media file, ex: image/jpeg, image/png, video/mp4,
            audio/mp3, etc'
        publicUrl:
          type: string
          description: A public URL of a media file
      description: Represents a media file which can be added to a text message
    MediaPage:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/Media'
        limit:
          type: integer
          description: ~
          format: int32
        offset:
          type: integer
          description: ~
          format: int32
        totalCount:
          type: integer
          description: ~
          format: int32
      description: ~
    MessageTemplateCategory:
      type: object
      properties:
        id:
          type: integer
          description: ~
          format: int64
        name:
          type: string
          description: ~
      description: ~
    MessageTemplateCategoryPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/MessageTemplateCategory'
    Note:
      type: object
      properties:
        text:
          type: string
          description: A text of a note
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000'
          format: int64
      description: Represents a note which can be added to a call
    Number:
      type: object
      properties:
        number:
          type: string
          description: ~
        nationalFormat:
          type: string
          description: ~
        tollFree:
          type: boolean
          description: ~
        region:
          $ref: '#/components/schemas/Region'
      description: ~
    NumberConfig:
      type: object
      properties:
        textInboundConfig:
          $ref: '#/components/schemas/TextInboundConfig'
        number:
          type: string
          description: 'Phone number in E.164 format (11-digit). Example: 12132000384'
        configType:
          type: string
          description: 'A type of config. Available values: TRACKING, IVR'
          enum:
          - IVR
          - TRACKING
        callTrackingConfig:
          $ref: '#/components/schemas/CallTrackingConfig'
        ivrInboundConfig:
          $ref: '#/components/schemas/IvrInboundConfig'
      description: Represents the configuration of a phone number purchased by user.
        You can configure number to accept inbound calls, play sounds to customer,
        make a transfer or setup an IVR script to interact with customer. See [CallFire
        IVR](https://www.callfire.com/products/ivr) for more info
    NumberConfigPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/NumberConfig'
    NumberLease:
      type: object
      properties:
        number:
          type: string
          description: 'A phone number in E.164 format (11-digit). Example: 12132000384'
        nationalFormat:
          type: string
          description: Formatted number with a country code
        tollFree:
          type: boolean
          description: A  toll-free number
        region:
          $ref: '#/components/schemas/Region'
        leaseBegin:
          type: integer
          description: 'A date and time of a lease start. Timestamp, formatted in
            unix time milliseconds (read only). Example: 1473781817000'
          format: int64
        leaseEnd:
          type: integer
          description: 'A data and time of a lease finish. Timestamp, formatted in
            unix time milliseconds (read only). Example: 1473781817000'
          format: int64
        autoRenew:
          type: boolean
          description: Enables the auto renewal of number lease at end of each billing
            cycle
        status:
          type: string
          description: 'A lease status. Available values: PENDING, ACTIVE, RELEASED,
            UNAVAILABLE'
          readOnly: true
          enum:
          - PENDING
          - ACTIVE
          - RELEASED
          - UNAVAILABLE
        callFeatureStatus:
          type: string
          description: 'A status of a call feature. Available values: DISABLED, ENABLED'
          enum:
          - UNSUPPORTED
          - PENDING
          - DISABLED
          - ENABLED
        textFeatureStatus:
          type: string
          description: 'A status of a text feature. Available values: DISABLED, ENABLED'
          enum:
          - UNSUPPORTED
          - PENDING
          - DISABLED
          - ENABLED
        labels:
          type: array
          description: ~
          items:
            type: string
      description: Represents a lease object for a given phone number
    NumberLeasePage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/NumberLease'
    NumberList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Number'
    NumberOrder:
      type: object
      properties:
        id:
          type: integer
          description: An id of an order
          format: int64
        status:
          type: string
          description: 'A current status of an order. Available values: NEW, PROCESSING,
            FINISHED, ERRORED, VOID, WAIT_FOR_PAYMENT, REJECTED'
          readOnly: true
          enum:
          - PROCESSING
          - FINISHED
          - PAYMENT_ERROR
          - VOID
          - WAIT_FOR_PAYMENT
          - PARTIALLY_ADJUSTED
          - ADJUSTED
          - NEW
          - ERRORED
          - APPROVE_TIER_ONE
          - APPROVE_TIER_TWO
          - REJECTED
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000'
          format: int64
          readOnly: true
        totalCost:
          type: number
          description: A total cost of an order
          format: float
          readOnly: true
        total:
          type: number
          description: ~
          format: float
          readOnly: true
        summary:
          type: number
          description: ~
          format: float
          readOnly: true
        salesTax:
          type: number
          description: ~
          format: float
          readOnly: true
        localNumbers:
          $ref: '#/components/schemas/NumberOrderItem'
        tollFreeNumbers:
          $ref: '#/components/schemas/NumberOrderItem'
        keywords:
          $ref: '#/components/schemas/NumberOrderItem'
      description: Represents an order created on the CallFire platform
    NumberOrderItem:
      type: object
      properties:
        ordered:
          type: integer
          description: A total number of items bought within a single order item
          format: int32
        unitCost:
          type: number
          description: A cost of unit
          format: float
          readOnly: true
        fulfilled:
          type: array
          description: List of fulfilled items, e.g. phone numbers, keywords
          readOnly: true
          items:
            type: string
      description: Represents an order item of a particular order
    NumberPurchaseRequest:
      type: object
      properties:
        tollFreeCount:
          type: integer
          description: Total count of toll-free numbers requested
          format: int32
        localCount:
          type: integer
          description: Total count of local numbers requested
          format: int32
        prefix:
          type: string
          description: Country prefix of requested numbers
        city:
          type: string
          description: City of requested numbers
        state:
          type: string
          description: A two-letter state code of requested numbers
        zipcode:
          type: string
          description: A five-digit Zip code of requested numbers
        numbers:
          type: array
          description: 'A list of phone numbers in E.164 format (11-digit) to buy.
            Example: 12132000384'
          items:
            type: string
        promo:
          type: string
          description: ~
      description: Request object is used to order a local or toll-free numbers
    OAuthSession:
      type: object
      properties:
        clientId:
          type: string
          description: ~
        brand:
          type: string
          description: ~
          enum:
          - EZTEXTING
          - CLUBTEXTING
          - GROUPTEXTING
          - TELLMYCELL
          - EZ
          - CALLFIRE
          - TESLA
        id:
          type: string
          description: ~
        scope:
          type: string
          description: ~
        issued:
          type: string
          description: ~
          format: date-time
        expires:
          type: string
          description: ~
          format: date-time
        ipAddress:
          type: string
          description: ~
        accountId:
          type: string
          description: ~
        userId:
          type: string
          description: ~
        username:
          type: string
          description: ~
        email:
          type: string
          description: ~
        sid:
          type: integer
          description: ~
          format: int64
        grantType:
          type: string
          description: ~
          enum:
          - AUTHORIZATION_CODE
          - PASSWORD
          - REFRESH_TOKEN
          - CLIENT_CREDENTIALS
          - JWT_BEARER
          - IMPERSONATE
          - EXCHANGE
        actor:
          $ref: '#/components/schemas/OAuthSession'
        verificationRequired:
          type: boolean
          description: ~
      description: ~
    Page:
      type: object
      properties:
        items:
          type: array
          description: A list of returned items
          items:
            type: object
            properties: {}
        limit:
          type: integer
          description: A maximum number of returned items. If items.size() < limit
            assume no more items
          format: int32
        offset:
          type: integer
          description: An offset from a start of paging source
          format: int32
        totalCount:
          type: integer
          description: Total count of available results. -1 if unknown
          format: int32
      description: Represents a page with results returned by query operation. Check
        [pagination](https://developers.callfire.com/docs.html#pagination) page for
        more information about pagination in CallFire API.
    PageDeliveryReport:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/DeliveryReport'
        limit:
          type: integer
          description: ~
          format: int32
        offset:
          type: integer
          description: ~
          format: int32
        totalCount:
          type: integer
          description: ~
          format: int32
      description: ~
    PageNumberOrder:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/NumberOrder'
        limit:
          type: integer
          description: ~
          format: int32
        offset:
          type: integer
          description: ~
          format: int32
        totalCount:
          type: integer
          description: ~
          format: int32
      description: ~
    PageText:
      type: object
      properties:
        items:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/Text'
        limit:
          type: integer
          description: ~
          format: int32
        offset:
          type: integer
          description: ~
          format: int32
        totalCount:
          type: integer
          description: ~
          format: int32
      description: ~
    QuestionResponse:
      type: object
      properties:
        question:
          type: string
          description: A text of a question
        response:
          type: string
          description: Client's answer
      description: Object represents the question and client's answer, used in cloud
        call center / IVR campaign
    Recipient:
      type: object
      properties:
        phoneNumber:
          type: string
          description: 'A recipient''s phone number in E.164 format (11-digit) or
            short code. Example: 12132000384, 67076'
        fromNumber:
          type: string
          description: ~
        contactId:
          type: integer
          description: An id of existing contact used as recipient
          format: int64
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Map of user-defined string attributes associated with recipient
      description: A recipient of a campaign action. It can be a phone number, contact,
        or contact list with attributes added to an action, one of these values should
        be set
    Region:
      type: object
      properties:
        prefix:
          type: string
          description: A country prefix of a region. 4-7 digit
        city:
          type: string
          description: A city of a region
        state:
          type: string
          description: A two-letter state code of region
        zipcode:
          type: string
          description: A five-digit zip code of a region
        country:
          type: string
          description: A country of a region
        latitude:
          type: number
          description: A latitude of a region
          format: float
        longitude:
          type: number
          description: A longitude of a region
          format: float
        timeZone:
          type: string
          description: A timezone of a region
      description: Every local number associated with a region. You can query regions
        to use them in subsequent purchase requests
    RegionPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Region'
    ResourceId:
      type: object
      properties:
        id:
          type: integer
          description: An id of a resource
          format: int64
      description: An id of a resource
    ResourceIdList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/ResourceId'
    RetryConfig:
      type: object
      properties:
        maxAttempts:
          type: integer
          description: 'Maximum number of retry attempts. Default value: 1'
          format: int32
        minutesBetweenAttempts:
          type: integer
          description: 'A number of minutes between retry attempts. Default value:
            60'
          format: int32
        retryResults:
          type: array
          description: 'List of result states when a call/text should be addressed
            to this contact again. Supports any combination of result statuses. Available
            values: LA, BUSY, AM, NO_ANS, SENT, RECEIVED, etc. See [call/text states
            and results](https://developers.callfire.com/results-responses-errors.html)'
          items:
            type: string
        retryPhoneTypes:
          type: array
          description: 'A list of phone number types to retry. Available values: FIRST_NUMBER,
            HOME_PHONE, WORK_PHONE, MOBILE_PHONE'
          items:
            type: string
      description: Retry configuration will help you to resend a call or text if it
        was not delivered first time
    Schedule:
      type: object
      properties:
        startTimeOfDay:
          $ref: '#/components/schemas/LocalTime'
        stopTimeOfDay:
          $ref: '#/components/schemas/LocalTime'
        daysOfWeek:
          uniqueItems: true
          type: array
          description: ~
          items:
            type: string
        timeZone:
          type: string
          description: ~
        id:
          type: integer
          description: ~
          format: int64
        campaignId:
          type: integer
          description: ~
          format: int64
        startDate:
          $ref: '#/components/schemas/LocalDate'
        stopDate:
          $ref: '#/components/schemas/LocalDate'
      description: A campaign schedule
    StreamingOutput:
      type: object
      description: ~
    StringList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              type: string
    TemporalUnit:
      type: object
      properties:
        dateBased:
          type: boolean
          description: ~
        timeBased:
          type: boolean
          description: ~
        duration:
          $ref: '#/components/schemas/Duration'
        durationEstimated:
          type: boolean
          description: ~
      description: ~
    Text:
      type: object
      properties:
        id:
          type: integer
          description: An id of an action
          format: int64
        fromNumber:
          type: string
          description: 'Sender''s phone number in E.164 format (11-digit) or short
            code. Example: 12132000384, 67076'
        toNumber:
          type: string
          description: 'Recipient''s phone number in E.164 format (11-digit) or short
            code. Example: 12132000384, 67076'
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Map of user-defined string attributes associated with an action
        state:
          type: string
          description: Current state of an action (READY, SELECTED, CALLBACK, DISABLED,
            FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states
            and results](https://developers.callfire.com/results-responses-errors.html)
          readOnly: true
          enum:
          - READY
          - SELECTED
          - CALLBACK
          - FINISHED
          - DISABLED
          - SKIPPED
          - DNC
          - DUP
          - INVALID
          - TIMEOUT
          - PERIOD_LIMIT
        campaignId:
          type: integer
          description: An id of broadcast if given text was sent as a part of text
            broadcast
          format: int64
          readOnly: true
        batchId:
          type: integer
          description: An id of contact batch associated with an action
          format: int64
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
        inbound:
          type: boolean
          description: An action inbound
        created:
          type: integer
          description: 'The time when the given resource was created, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        modified:
          type: integer
          description: 'The time when the given resource was modified, formatted in
            unix time milliseconds (read only). Example: 1473781817000 for Sat, 05
            Jan 1985 14:03:37 GMT'
          format: int64
          readOnly: true
        labels:
          uniqueItems: true
          type: array
          description: Labels associated with an action
          items:
            type: string
        message:
          type: string
          description: A text message
        finalTextResult:
          type: string
          description: Result of text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR,
            CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
          readOnly: true
          enum:
          - SENT
          - RECEIVED
          - DNT
          - TOO_BIG
          - INTERNAL_ERROR
          - CARRIER_ERROR
          - CARRIER_TEMP_ERROR
          - UNDIALED
          - INVALID_NUMBER
        records:
          type: array
          description: 'List of text records, each record contains additional details:
            time of sending, cost, current state.  A single contact may have multiple
            numbers. If given text was sent as part of broadcast with configured retry
            logic then each text record will contain details about attempted number'
          items:
            $ref: '#/components/schemas/TextRecord'
        media:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/Media'
      description: Represents a text action sent or received by CallFire platform
    TextAutoReply:
      type: object
      properties:
        id:
          type: integer
          description: An id of a text auto reply
          format: int64
        number:
          type: string
          description: 'Setup autoreply for a given phone number, E.164 format (11-digit).
            Example: 12132000384'
        keyword:
          type: string
          description: Setup autoreply for a given keyword
        match:
          type: string
          description: Text to match. If it is set then autoreply will be sent to
            a person who texted message with matched text. Case insensitive, if parameter
            is not specified then all texts will be matched
        message:
          type: string
          description: A text message to return as an auto reply
      description: CallFire allows you to set up auto reply messages for your numbers
        CallFire allows you to set up auto reply messages for your numbers and keywords.
        You can set a general auto reply for anyone who texts your number (keyword).
        Also you can include a text to match, so that the auto reply would be sent
        only to those recipients whose texts the matched text
    TextAutoReplyPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TextAutoReply'
    TextBroadcast:
      type: object
      properties:
        id:
          type: integer
          description: A unique id of a broadcast
          format: int64
        name:
          type: string
          description: A name of a broadcast
        status:
          type: string
          description: A status of a broadcast. SETUP - campaign isn't configured
            yet; START_PENDING - waiting for contact batch population; RUNNING - campaign
            is running; STOPPED - campaign is stopped; FINISHED - campaign is finished;
            ARCHIVED - campaign was archived
          readOnly: true
          enum:
          - TEST
          - SETUP
          - START_PENDING
          - RUNNING
          - SCHEDULED
          - STOPPED
          - SUSPENDED
          - FINISHED
          - ARCHIVED
          - VALIDATING_START
          - VALIDATING_EMAIL
          - BLOCKED_SUSPICIOUS
          - DECLINED
          - APPROVED
        lastModified:
          type: integer
          description: 'A time when the given resource was updated, formatted in unix
            time milliseconds (read only). Example: 1473781817000'
          format: int64
          readOnly: true
        fromNumber:
          type: string
          description: 'A phone number in E.164 format (11-digit) or short code. Example:
            12132000384, 67076, etc'
        localTimeRestriction:
          $ref: '#/components/schemas/LocalTimeRestriction'
        schedules:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/Schedule'
        maxActive:
          type: integer
          description: A maximum number of texts that CallFire dials at once
          format: int32
        labels:
          uniqueItems: true
          type: array
          description: A labels of a broadcast
          items:
            type: string
        resumeNextDay:
          type: boolean
          description: ~
        recipients:
          type: array
          description: Recipients of a text campaign, can be an existing contacts
            or a new one
          items:
            $ref: '#/components/schemas/TextRecipient'
        message:
          type: string
          description: A text message
        bigMessageStrategy:
          type: string
          description: 'If message length exceeds 160 characters, multiple messages
            will be sent, SEND_MULTIPLE strategy is chosen by default. Available values:
            SEND_MULTIPLE - send text as multiple messages, DO_NOT_SEND - do not send
            text if it exceeds 160 characters, TRIM - trims text message to 160 characters'
          enum:
          - SEND_MULTIPLE
          - DO_NOT_SEND
          - TRIM
          - MMS
        media:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/Media'
      description: A text campaign allows you to send a text message to a number of
        recipients. It supports scheduling, retry logic and pattern-based messages
    TextBroadcastCreateResponse:
      type: object
      properties:
        id:
          type: integer
          description: ~
          format: int64
      description: ~
    TextBroadcastPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/TextBroadcast'
    TextBroadcastStatsDto:
      type: object
      properties:
        totalOutboundCount:
          type: integer
          description: ~
          format: int32
        remainingOutboundCount:
          type: integer
          description: ~
          format: int32
        billedAmount:
          type: number
          description: ~
        sentCount:
          type: integer
          description: ~
          format: int32
        unsentCount:
          type: integer
          description: ~
          format: int32
        recievedCount:
          type: integer
          description: ~
          format: int32
        doNotTextCount:
          type: integer
          description: ~
          format: int32
        tooBigCount:
          type: integer
          description: ~
          format: int32
        errorCount:
          type: integer
          description: ~
          format: int32
      description: ~
    TextInboundConfig:
      type: object
      properties:
        forwardEnabled:
          type: boolean
          description: ~
        forwardNumber:
          type: string
          description: ~
      description: ~
    TextList:
      description: ~
      allOf:
      - $ref: '#/components/schemas/ItemList'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Text'
    TextPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Text'
    TextRecipient:
      type: object
      properties:
        phoneNumber:
          type: string
          description: 'Phone number in E.164 format (11-digit) or short code. Example:
            12132000384, 67076'
        fromNumber:
          type: string
          description: ~
        contactId:
          type: integer
          description: An id of existing contact in account
          format: int64
        attributes:
          type: object
          additionalProperties:
            type: string
          description: A map of string attributes associated with a recipient
        message:
          type: string
          description: A text message
        media:
          type: array
          description: A list of media objects' ids associated with a text message
          items:
            $ref: '#/components/schemas/Media'
      description: A recipient of a text message. You should provide either phone
        number or contact id of existing contact
    TextRecord:
      type: object
      properties:
        id:
          type: integer
          description: An id of a text record
          format: int64
        toNumber:
          type: string
          description: An attempted phone number
          readOnly: true
        billedAmount:
          type: number
          description: A cost of a sent text
          format: float
          readOnly: true
        finishTime:
          type: integer
          description: 'A time when the given resource was updated, formatted in unix
            time milliseconds (read only). Example: 1473781817000'
          format: int64
          readOnly: true
        switchId:
          type: string
          description: ~
          readOnly: true
        callerName:
          type: string
          description: ~
          readOnly: true
        labels:
          uniqueItems: true
          type: array
          description: Labels associated with a text action
          readOnly: true
          items:
            type: string
        message:
          type: string
          description: A text message
        textResult:
          type: string
          description: Result of a text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR,
            CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
          enum:
          - SENT
          - RECEIVED
          - DNT
          - TOO_BIG
          - INTERNAL_ERROR
          - CARRIER_ERROR
          - CARRIER_TEMP_ERROR
          - UNDIALED
          - INVALID_NUMBER
      description: Represents a text message sent to a contact's number
    TextToSpeech:
      type: object
      properties:
        voice:
          type: string
          description: 'A voice to be used. Available values: MALE1, FEMALE1 , FEMALE2,
            SPANISH1, FRENCHCANADIAN1'
          enum:
          - MALE1
          - FEMALE1
          - FEMALE2
          - SPANISH1
          - FRENCHCANADIAN1
        message:
          type: string
          description: A text to be turned into sound
      description: Request object is used to create a sound from provided text using
        text to speech engine
    TimeZone:
      type: object
      properties:
        displayName:
          type: string
          description: ~
        id:
          type: string
          description: ~
        dstsavings:
          type: integer
          description: ~
          format: int32
        rawOffset:
          type: integer
          description: ~
          format: int32
      description: ~
    UniversalDoNotContact:
      type: object
      properties:
        toNumber:
          type: string
          description: 'destination DNC number in E.164 format (11-digit). Example:
            12132000384'
        fromNumber:
          type: string
          description: 'Optional source number in E.164 format (11-digit). Example:
            12132000384'
        inboundCall:
          type: boolean
          description: If toNumber can receive calls or If toNumber can call fromNumber.
        inboundText:
          type: boolean
          description: If toNumber can receive texts or If toNumber can text fromNumber.
        outboundCall:
          type: boolean
          description: If toNumber can send calls or If fromNumber can call toNumber.
        outboundText:
          type: boolean
          description: If toNumber can send texts or If fromNumber can text toNumber.
      description: Represents a Universal (platform-wide) Do-Not-Contact object for
        a given phone number. Shows whether inbound/outbound actions are allowed for
        a given number.
    UpdateContactListRequest:
      type: object
      properties:
        name:
          type: string
          description: A name of a contact list
      description: A request object which is used to update a contact list
    User:
      type: object
      properties:
        soaUser:
          $ref: '#/components/schemas/User'
        account:
          $ref: '#/components/schemas/Account'
        fullName:
          type: string
          description: ~
        permissions:
          uniqueItems: true
          type: array
          description: ~
          items:
            type: string
        id:
          type: integer
          description: ~
          format: int64
        active:
          type: boolean
          description: ~
        visible:
          type: boolean
          description: ~
        created:
          type: string
          description: ~
          format: date-time
        brand:
          type: string
          description: ~
          enum:
          - EZTEXTING
          - CLUBTEXTING
          - GROUPTEXTING
          - TELLMYCELL
          - EZ
          - CALLFIRE
          - TESLA
        accountId:
          type: integer
          description: ~
          format: int64
        phoneNumber:
          type: string
          description: ~
        profileEmail:
          type: string
          description: ~
        userState:
          type: string
          description: ~
          enum:
          - ACTIVE
          - NEW_AUTH_INVITE
          - NEW_USER_INVITE
          - EXISTING_USER_INVITE
        cccAgent:
          type: boolean
          description: ~
        dateOfBirth:
          type: string
          description: ~
          format: date-time
        phoneNumberExtension:
          type: string
          description: ~
        phoneNumberExtensionDelaySec:
          type: integer
          description: ~
          format: int32
        optInNumber:
          type: string
          description: ~
        optIn:
          type: boolean
          description: ~
        musicOnHold:
          type: string
          description: ~
          enum:
          - DEFAULT
          - SILENCE
          - ALTERNATIVE
          - BLUES
          - CELTIC
          - CLASSICAL
          - COUNTRY
          - INSTRUMENTAL
          - JAZZ
          - NEOPUNK
          - NEW_AGE
          - POP
          - ROCK
          - SWING
          - TECHNO
        notificationSoundEnabled:
          type: boolean
          description: ~
        phoneNumberVerified:
          type: boolean
          description: ~
        accountHolder:
          type: boolean
          description: ~
        firstName:
          type: string
          description: ~
        lastName:
          type: string
          description: ~
        apiPasswordLastFour:
          type: string
          description: ~
        phoneNumberForDisplay:
          type: string
          description: ~
        signupComplete:
          type: boolean
          description: ~
        industryName:
          type: string
          description: ~
        userStatePending:
          type: boolean
          description: ~
        disabled:
          type: boolean
          description: ~
      description: ~
    UserController:
      type: object
      description: ~
    Webhook:
      type: object
      properties:
        id:
          type: integer
          description: An id of a webhook
          format: int64
        enabled:
          type: boolean
          description: A parameter which allows the webhook to send requests to unknown
            ssl endpoints (ssl certificate verification is disabled)
        nonStrictSsl:
          type: boolean
          description: A parameter which allows the webhook to send requests to unknown
            ssl endpoints (ssl certificate verification is disabled)
        name:
          type: string
          description: A name of a webhook
        resource:
          type: string
          description: 'A resource name that webhook is watching events on. Use GET
            /webhooks/resources to determine resources and events available (ex: InboundCall,
            OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast,
            etc...)'
        events:
          uniqueItems: true
          type: array
          description: 'Comma separated list of events on resource that will trigger
            callbacks (ex: STARTED, STOPPED, FINISHED, etc...). '
          items:
            type: string
        fields:
          type: string
          description: A limit callback response to a particular fields
        callback:
          type: string
          description: URL that webhook will send POST to on resource event trigger
        secret:
          type: string
          description: Webhook secret token which is used as a signing key to HmacSHA1
            hash of json payload which is returned in 'X-CallFire-Signature' header.
            This header can be used to verify callback POST is coming from CallFire.
            See [security guide](https://developers.callfire.com/security-guide.html)
        singleUse:
          type: boolean
          description: If true is set then webhook triggers only once. Afterwards
            the webhook will be deleted
        createdAt:
          type: integer
          description: 'A time when the given resource was created, formatted in unix
            time milliseconds (read only). Example: 1473781817000'
          format: int64
          readOnly: true
        updatedAt:
          type: integer
          description: 'A time when the given resource was updated, formatted in unix
            time milliseconds (read only). Example: 1473781817000'
          format: int64
          readOnly: true
        expiresAt:
          type: integer
          description: ~
          format: int64
      description: Webhook is a user-defined callback, which can be maintained via
        API. CallFire will send POST request to a client's endpoint defined in webhook
        once one of assigned events is triggered. See [webhooks guide](https://developers.callfire.com/webhooks-guide.html)
        for more information about CallFire Webhooks API.
    WebhookPage:
      description: ~
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          items:
            type: array
            items:
              $ref: '#/components/schemas/Webhook'
    WebhookResource:
      type: object
      properties:
        resource:
          type: string
          description: 'A name of a webhook resource (ex: InboundCall, OutboundCall,
            InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)'
        supportedEvents:
          uniqueItems: true
          type: array
          description: 'A list of event names which are supported by webhook resource
            (ex: Started, Stopped, Finished, etc.)'
          items:
            type: string
      description: WebhookResource describes a resource and a list of supported events,
        once event is triggered CallFire performs an HTTP POST request to a client's
        endpoint
    WeeklySchedule:
      type: object
      properties:
        startTimeOfDay:
          $ref: '#/components/schemas/LocalTime'
        stopTimeOfDay:
          $ref: '#/components/schemas/LocalTime'
        daysOfWeek:
          uniqueItems: true
          type: array
          description: A scheduled days when operation will trigger
          items:
            type: string
        timeZone:
          type: string
          description: A user's timezone
      description: Weekly schedule allows to schedule operations by day of week and
        time of the day
    ZoneId:
      type: object
      properties:
        rules:
          $ref: '#/components/schemas/ZoneRules'
        id:
          type: string
          description: ~
      description: ~
    ZoneOffset:
      type: object
      properties:
        totalSeconds:
          type: integer
          description: ~
          format: int32
        id:
          type: string
          description: ~
        rules:
          $ref: '#/components/schemas/ZoneRules'
      description: ~
    ZoneOffsetTransition:
      type: object
      properties:
        offsetBefore:
          $ref: '#/components/schemas/ZoneOffset'
        offsetAfter:
          $ref: '#/components/schemas/ZoneOffset'
        instant:
          type: integer
          description: ~
          format: int64
        overlap:
          type: boolean
          description: ~
        duration:
          $ref: '#/components/schemas/Duration'
        gap:
          type: boolean
          description: ~
        dateTimeBefore:
          type: string
          description: ~
          format: date-time
        dateTimeAfter:
          type: string
          description: ~
          format: date-time
      description: ~
    ZoneOffsetTransitionRule:
      type: object
      properties:
        month:
          type: string
          description: ~
          enum:
          - JANUARY
          - FEBRUARY
          - MARCH
          - APRIL
          - MAY
          - JUNE
          - JULY
          - AUGUST
          - SEPTEMBER
          - OCTOBER
          - NOVEMBER
          - DECEMBER
        timeDefinition:
          type: string
          description: ~
          enum:
          - UTC
          - WALL
          - STANDARD
        standardOffset:
          $ref: '#/components/schemas/ZoneOffset'
        offsetBefore:
          $ref: '#/components/schemas/ZoneOffset'
        offsetAfter:
          $ref: '#/components/schemas/ZoneOffset'
        dayOfWeek:
          type: string
          description: ~
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        dayOfMonthIndicator:
          type: integer
          description: ~
          format: int32
        localTime:
          $ref: '#/components/schemas/LocalTime'
        midnightEndOfDay:
          type: boolean
          description: ~
      description: ~
    ZoneRules:
      type: object
      properties:
        fixedOffset:
          type: boolean
          description: ~
        transitions:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/ZoneOffsetTransition'
        transitionRules:
          type: array
          description: ~
          items:
            $ref: '#/components/schemas/ZoneOffsetTransitionRule'
      description: ~
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-sample-basepath: https://raw.githubusercontent.com/CallFire/callfire-api-samples/master/2.0
